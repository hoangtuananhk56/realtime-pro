// source: proto/conditionnement/conditionnement.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.conditionnement.Conditionnement', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.conditionnement.Conditionnement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.conditionnement.Conditionnement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.conditionnement.Conditionnement.displayName = 'proto.conditionnement.Conditionnement';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.conditionnement.Conditionnement.prototype.toObject = function(opt_includeInstance) {
  return proto.conditionnement.Conditionnement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.conditionnement.Conditionnement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conditionnement.Conditionnement.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updateAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    nom: jspb.Message.getFieldWithDefault(msg, 4, ""),
    icone: jspb.Message.getFieldWithDefault(msg, 5, ""),
    niveau: jspb.Message.getFieldWithDefault(msg, 6, 0),
    qte: jspb.Message.getFieldWithDefault(msg, 7, 0),
    type: jspb.Message.getFieldWithDefault(msg, 8, 0),
    poidsNet: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    poidsBrut: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    longueur: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    largeur: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    hauteur: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
    couche: jspb.Message.getFieldWithDefault(msg, 14, 0),
    typeDeCodebarre: jspb.Message.getFieldWithDefault(msg, 15, ""),
    noCodebarre: jspb.Message.getFieldWithDefault(msg, 16, ""),
    variante: jspb.Message.getFieldWithDefault(msg, 17, ""),
    rotation: jspb.Message.getFieldWithDefault(msg, 18, ""),
    support: jspb.Message.getFieldWithDefault(msg, 19, ""),
    referenceId: jspb.Message.getFieldWithDefault(msg, 20, ""),
    poidsAdd: jspb.Message.getFloatingPointFieldWithDefault(msg, 21, 0.0),
    attEnable: jspb.Message.getBooleanFieldWithDefault(msg, 22, false),
    blockDel: jspb.Message.getBooleanFieldWithDefault(msg, 23, false),
    qteVariable: jspb.Message.getBooleanFieldWithDefault(msg, 24, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.conditionnement.Conditionnement}
 */
proto.conditionnement.Conditionnement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.conditionnement.Conditionnement;
  return proto.conditionnement.Conditionnement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.conditionnement.Conditionnement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.conditionnement.Conditionnement}
 */
proto.conditionnement.Conditionnement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNom(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcone(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNiveau(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQte(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setType(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPoidsNet(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPoidsBrut(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongueur(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLargeur(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHauteur(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCouche(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setTypeDeCodebarre(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setNoCodebarre(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setVariante(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setRotation(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setSupport(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceId(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPoidsAdd(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAttEnable(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBlockDel(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setQteVariable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.conditionnement.Conditionnement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.conditionnement.Conditionnement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.conditionnement.Conditionnement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conditionnement.Conditionnement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreateAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUpdateAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getNom();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIcone();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getNiveau();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getQte();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getPoidsNet();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getPoidsBrut();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getLongueur();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getLargeur();
  if (f !== 0.0) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getHauteur();
  if (f !== 0.0) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = message.getCouche();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getTypeDeCodebarre();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getNoCodebarre();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getVariante();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getRotation();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getSupport();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getReferenceId();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getPoidsAdd();
  if (f !== 0.0) {
    writer.writeDouble(
      21,
      f
    );
  }
  f = message.getAttEnable();
  if (f) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getBlockDel();
  if (f) {
    writer.writeBool(
      23,
      f
    );
  }
  f = message.getQteVariable();
  if (f) {
    writer.writeBool(
      24,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.conditionnement.Conditionnement.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.conditionnement.Conditionnement} returns this
 */
proto.conditionnement.Conditionnement.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 create_at = 2;
 * @return {number}
 */
proto.conditionnement.Conditionnement.prototype.getCreateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.conditionnement.Conditionnement} returns this
 */
proto.conditionnement.Conditionnement.prototype.setCreateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 update_at = 3;
 * @return {number}
 */
proto.conditionnement.Conditionnement.prototype.getUpdateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.conditionnement.Conditionnement} returns this
 */
proto.conditionnement.Conditionnement.prototype.setUpdateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string nom = 4;
 * @return {string}
 */
proto.conditionnement.Conditionnement.prototype.getNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.conditionnement.Conditionnement} returns this
 */
proto.conditionnement.Conditionnement.prototype.setNom = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string icone = 5;
 * @return {string}
 */
proto.conditionnement.Conditionnement.prototype.getIcone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.conditionnement.Conditionnement} returns this
 */
proto.conditionnement.Conditionnement.prototype.setIcone = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 niveau = 6;
 * @return {number}
 */
proto.conditionnement.Conditionnement.prototype.getNiveau = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.conditionnement.Conditionnement} returns this
 */
proto.conditionnement.Conditionnement.prototype.setNiveau = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 qte = 7;
 * @return {number}
 */
proto.conditionnement.Conditionnement.prototype.getQte = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.conditionnement.Conditionnement} returns this
 */
proto.conditionnement.Conditionnement.prototype.setQte = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 type = 8;
 * @return {number}
 */
proto.conditionnement.Conditionnement.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.conditionnement.Conditionnement} returns this
 */
proto.conditionnement.Conditionnement.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional double poids_net = 9;
 * @return {number}
 */
proto.conditionnement.Conditionnement.prototype.getPoidsNet = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.conditionnement.Conditionnement} returns this
 */
proto.conditionnement.Conditionnement.prototype.setPoidsNet = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional double poids_brut = 10;
 * @return {number}
 */
proto.conditionnement.Conditionnement.prototype.getPoidsBrut = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.conditionnement.Conditionnement} returns this
 */
proto.conditionnement.Conditionnement.prototype.setPoidsBrut = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional double longueur = 11;
 * @return {number}
 */
proto.conditionnement.Conditionnement.prototype.getLongueur = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.conditionnement.Conditionnement} returns this
 */
proto.conditionnement.Conditionnement.prototype.setLongueur = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional double largeur = 12;
 * @return {number}
 */
proto.conditionnement.Conditionnement.prototype.getLargeur = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.conditionnement.Conditionnement} returns this
 */
proto.conditionnement.Conditionnement.prototype.setLargeur = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional double hauteur = 13;
 * @return {number}
 */
proto.conditionnement.Conditionnement.prototype.getHauteur = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.conditionnement.Conditionnement} returns this
 */
proto.conditionnement.Conditionnement.prototype.setHauteur = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional int64 couche = 14;
 * @return {number}
 */
proto.conditionnement.Conditionnement.prototype.getCouche = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.conditionnement.Conditionnement} returns this
 */
proto.conditionnement.Conditionnement.prototype.setCouche = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional string type_de_codebarre = 15;
 * @return {string}
 */
proto.conditionnement.Conditionnement.prototype.getTypeDeCodebarre = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.conditionnement.Conditionnement} returns this
 */
proto.conditionnement.Conditionnement.prototype.setTypeDeCodebarre = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string no_codebarre = 16;
 * @return {string}
 */
proto.conditionnement.Conditionnement.prototype.getNoCodebarre = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.conditionnement.Conditionnement} returns this
 */
proto.conditionnement.Conditionnement.prototype.setNoCodebarre = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string variante = 17;
 * @return {string}
 */
proto.conditionnement.Conditionnement.prototype.getVariante = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.conditionnement.Conditionnement} returns this
 */
proto.conditionnement.Conditionnement.prototype.setVariante = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string rotation = 18;
 * @return {string}
 */
proto.conditionnement.Conditionnement.prototype.getRotation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.conditionnement.Conditionnement} returns this
 */
proto.conditionnement.Conditionnement.prototype.setRotation = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string support = 19;
 * @return {string}
 */
proto.conditionnement.Conditionnement.prototype.getSupport = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.conditionnement.Conditionnement} returns this
 */
proto.conditionnement.Conditionnement.prototype.setSupport = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string reference_id = 20;
 * @return {string}
 */
proto.conditionnement.Conditionnement.prototype.getReferenceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.conditionnement.Conditionnement} returns this
 */
proto.conditionnement.Conditionnement.prototype.setReferenceId = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional double poids_add = 21;
 * @return {number}
 */
proto.conditionnement.Conditionnement.prototype.getPoidsAdd = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 21, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.conditionnement.Conditionnement} returns this
 */
proto.conditionnement.Conditionnement.prototype.setPoidsAdd = function(value) {
  return jspb.Message.setProto3FloatField(this, 21, value);
};


/**
 * optional bool att_enable = 22;
 * @return {boolean}
 */
proto.conditionnement.Conditionnement.prototype.getAttEnable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.conditionnement.Conditionnement} returns this
 */
proto.conditionnement.Conditionnement.prototype.setAttEnable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 22, value);
};


/**
 * optional bool block_del = 23;
 * @return {boolean}
 */
proto.conditionnement.Conditionnement.prototype.getBlockDel = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.conditionnement.Conditionnement} returns this
 */
proto.conditionnement.Conditionnement.prototype.setBlockDel = function(value) {
  return jspb.Message.setProto3BooleanField(this, 23, value);
};


/**
 * optional bool qte_variable = 24;
 * @return {boolean}
 */
proto.conditionnement.Conditionnement.prototype.getQteVariable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 24, false));
};


/**
 * @param {boolean} value
 * @return {!proto.conditionnement.Conditionnement} returns this
 */
proto.conditionnement.Conditionnement.prototype.setQteVariable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 24, value);
};


goog.object.extend(exports, proto.conditionnement);
