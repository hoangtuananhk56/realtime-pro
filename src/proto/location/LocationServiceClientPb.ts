/**
 * @fileoverview gRPC-Web generated client stub for location
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.21.12
// source: proto/location/location.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as proto_location_location_pb from '../../proto/location/location_pb'; // proto import: "proto/location/location.proto"


export class LocationServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreate = new grpcWeb.MethodDescriptor(
    '/location.LocationService/Create',
    grpcWeb.MethodType.UNARY,
    proto_location_location_pb.LocationCreateRequest,
    proto_location_location_pb.LocationResponse,
    (request: proto_location_location_pb.LocationCreateRequest) => {
      return request.serializeBinary();
    },
    proto_location_location_pb.LocationResponse.deserializeBinary
  );

  create(
    request: proto_location_location_pb.LocationCreateRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_location_location_pb.LocationResponse>;

  create(
    request: proto_location_location_pb.LocationCreateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.LocationResponse) => void): grpcWeb.ClientReadableStream<proto_location_location_pb.LocationResponse>;

  create(
    request: proto_location_location_pb.LocationCreateRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.LocationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/location.LocationService/Create',
        request,
        metadata || {},
        this.methodDescriptorCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/location.LocationService/Create',
    request,
    metadata || {},
    this.methodDescriptorCreate);
  }

  methodDescriptorGetAll = new grpcWeb.MethodDescriptor(
    '/location.LocationService/GetAll',
    grpcWeb.MethodType.UNARY,
    proto_location_location_pb.GetAllRequest,
    proto_location_location_pb.GetAllResponse,
    (request: proto_location_location_pb.GetAllRequest) => {
      return request.serializeBinary();
    },
    proto_location_location_pb.GetAllResponse.deserializeBinary
  );

  getAll(
    request: proto_location_location_pb.GetAllRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_location_location_pb.GetAllResponse>;

  getAll(
    request: proto_location_location_pb.GetAllRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.GetAllResponse) => void): grpcWeb.ClientReadableStream<proto_location_location_pb.GetAllResponse>;

  getAll(
    request: proto_location_location_pb.GetAllRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.GetAllResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/location.LocationService/GetAll',
        request,
        metadata || {},
        this.methodDescriptorGetAll,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/location.LocationService/GetAll',
    request,
    metadata || {},
    this.methodDescriptorGetAll);
  }

  methodDescriptorGetByID = new grpcWeb.MethodDescriptor(
    '/location.LocationService/GetByID',
    grpcWeb.MethodType.UNARY,
    proto_location_location_pb.GetLocationByIdRequest,
    proto_location_location_pb.LocationResponse,
    (request: proto_location_location_pb.GetLocationByIdRequest) => {
      return request.serializeBinary();
    },
    proto_location_location_pb.LocationResponse.deserializeBinary
  );

  getByID(
    request: proto_location_location_pb.GetLocationByIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_location_location_pb.LocationResponse>;

  getByID(
    request: proto_location_location_pb.GetLocationByIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.LocationResponse) => void): grpcWeb.ClientReadableStream<proto_location_location_pb.LocationResponse>;

  getByID(
    request: proto_location_location_pb.GetLocationByIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.LocationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/location.LocationService/GetByID',
        request,
        metadata || {},
        this.methodDescriptorGetByID,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/location.LocationService/GetByID',
    request,
    metadata || {},
    this.methodDescriptorGetByID);
  }

  methodDescriptorValidLocation = new grpcWeb.MethodDescriptor(
    '/location.LocationService/ValidLocation',
    grpcWeb.MethodType.UNARY,
    proto_location_location_pb.VallidLocationRequest,
    proto_location_location_pb.LocationResponse,
    (request: proto_location_location_pb.VallidLocationRequest) => {
      return request.serializeBinary();
    },
    proto_location_location_pb.LocationResponse.deserializeBinary
  );

  validLocation(
    request: proto_location_location_pb.VallidLocationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_location_location_pb.LocationResponse>;

  validLocation(
    request: proto_location_location_pb.VallidLocationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.LocationResponse) => void): grpcWeb.ClientReadableStream<proto_location_location_pb.LocationResponse>;

  validLocation(
    request: proto_location_location_pb.VallidLocationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.LocationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/location.LocationService/ValidLocation',
        request,
        metadata || {},
        this.methodDescriptorValidLocation,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/location.LocationService/ValidLocation',
    request,
    metadata || {},
    this.methodDescriptorValidLocation);
  }

  methodDescriptorValidPutAwayManually = new grpcWeb.MethodDescriptor(
    '/location.LocationService/ValidPutAwayManually',
    grpcWeb.MethodType.UNARY,
    proto_location_location_pb.CheckPutAwayManuallyRequest,
    proto_location_location_pb.CheckPutAwayManuallyResponse,
    (request: proto_location_location_pb.CheckPutAwayManuallyRequest) => {
      return request.serializeBinary();
    },
    proto_location_location_pb.CheckPutAwayManuallyResponse.deserializeBinary
  );

  validPutAwayManually(
    request: proto_location_location_pb.CheckPutAwayManuallyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_location_location_pb.CheckPutAwayManuallyResponse>;

  validPutAwayManually(
    request: proto_location_location_pb.CheckPutAwayManuallyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.CheckPutAwayManuallyResponse) => void): grpcWeb.ClientReadableStream<proto_location_location_pb.CheckPutAwayManuallyResponse>;

  validPutAwayManually(
    request: proto_location_location_pb.CheckPutAwayManuallyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.CheckPutAwayManuallyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/location.LocationService/ValidPutAwayManually',
        request,
        metadata || {},
        this.methodDescriptorValidPutAwayManually,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/location.LocationService/ValidPutAwayManually',
    request,
    metadata || {},
    this.methodDescriptorValidPutAwayManually);
  }

  methodDescriptorValidPutAwayLocation = new grpcWeb.MethodDescriptor(
    '/location.LocationService/ValidPutAwayLocation',
    grpcWeb.MethodType.UNARY,
    proto_location_location_pb.CheckPutAwayLocationRequest,
    proto_location_location_pb.CheckPutAwayLocationResponse,
    (request: proto_location_location_pb.CheckPutAwayLocationRequest) => {
      return request.serializeBinary();
    },
    proto_location_location_pb.CheckPutAwayLocationResponse.deserializeBinary
  );

  validPutAwayLocation(
    request: proto_location_location_pb.CheckPutAwayLocationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_location_location_pb.CheckPutAwayLocationResponse>;

  validPutAwayLocation(
    request: proto_location_location_pb.CheckPutAwayLocationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.CheckPutAwayLocationResponse) => void): grpcWeb.ClientReadableStream<proto_location_location_pb.CheckPutAwayLocationResponse>;

  validPutAwayLocation(
    request: proto_location_location_pb.CheckPutAwayLocationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.CheckPutAwayLocationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/location.LocationService/ValidPutAwayLocation',
        request,
        metadata || {},
        this.methodDescriptorValidPutAwayLocation,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/location.LocationService/ValidPutAwayLocation',
    request,
    metadata || {},
    this.methodDescriptorValidPutAwayLocation);
  }

  methodDescriptorValidPreparationLocation = new grpcWeb.MethodDescriptor(
    '/location.LocationService/ValidPreparationLocation',
    grpcWeb.MethodType.UNARY,
    proto_location_location_pb.CheckPreparationLocationRequest,
    proto_location_location_pb.CheckPreparationLocationResponse,
    (request: proto_location_location_pb.CheckPreparationLocationRequest) => {
      return request.serializeBinary();
    },
    proto_location_location_pb.CheckPreparationLocationResponse.deserializeBinary
  );

  validPreparationLocation(
    request: proto_location_location_pb.CheckPreparationLocationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_location_location_pb.CheckPreparationLocationResponse>;

  validPreparationLocation(
    request: proto_location_location_pb.CheckPreparationLocationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.CheckPreparationLocationResponse) => void): grpcWeb.ClientReadableStream<proto_location_location_pb.CheckPreparationLocationResponse>;

  validPreparationLocation(
    request: proto_location_location_pb.CheckPreparationLocationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.CheckPreparationLocationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/location.LocationService/ValidPreparationLocation',
        request,
        metadata || {},
        this.methodDescriptorValidPreparationLocation,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/location.LocationService/ValidPreparationLocation',
    request,
    metadata || {},
    this.methodDescriptorValidPreparationLocation);
  }

  methodDescriptorValidPickingLocation = new grpcWeb.MethodDescriptor(
    '/location.LocationService/ValidPickingLocation',
    grpcWeb.MethodType.UNARY,
    proto_location_location_pb.CheckPreparationLocationRequest,
    proto_location_location_pb.CheckPreparationLocationResponse,
    (request: proto_location_location_pb.CheckPreparationLocationRequest) => {
      return request.serializeBinary();
    },
    proto_location_location_pb.CheckPreparationLocationResponse.deserializeBinary
  );

  validPickingLocation(
    request: proto_location_location_pb.CheckPreparationLocationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_location_location_pb.CheckPreparationLocationResponse>;

  validPickingLocation(
    request: proto_location_location_pb.CheckPreparationLocationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.CheckPreparationLocationResponse) => void): grpcWeb.ClientReadableStream<proto_location_location_pb.CheckPreparationLocationResponse>;

  validPickingLocation(
    request: proto_location_location_pb.CheckPreparationLocationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.CheckPreparationLocationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/location.LocationService/ValidPickingLocation',
        request,
        metadata || {},
        this.methodDescriptorValidPickingLocation,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/location.LocationService/ValidPickingLocation',
    request,
    metadata || {},
    this.methodDescriptorValidPickingLocation);
  }

  methodDescriptorValidMovementLocation = new grpcWeb.MethodDescriptor(
    '/location.LocationService/ValidMovementLocation',
    grpcWeb.MethodType.UNARY,
    proto_location_location_pb.CheckMovementLocationRequest,
    proto_location_location_pb.CheckMovementLocationResponse,
    (request: proto_location_location_pb.CheckMovementLocationRequest) => {
      return request.serializeBinary();
    },
    proto_location_location_pb.CheckMovementLocationResponse.deserializeBinary
  );

  validMovementLocation(
    request: proto_location_location_pb.CheckMovementLocationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_location_location_pb.CheckMovementLocationResponse>;

  validMovementLocation(
    request: proto_location_location_pb.CheckMovementLocationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.CheckMovementLocationResponse) => void): grpcWeb.ClientReadableStream<proto_location_location_pb.CheckMovementLocationResponse>;

  validMovementLocation(
    request: proto_location_location_pb.CheckMovementLocationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.CheckMovementLocationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/location.LocationService/ValidMovementLocation',
        request,
        metadata || {},
        this.methodDescriptorValidMovementLocation,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/location.LocationService/ValidMovementLocation',
    request,
    metadata || {},
    this.methodDescriptorValidMovementLocation);
  }

  methodDescriptorValidReappro = new grpcWeb.MethodDescriptor(
    '/location.LocationService/ValidReappro',
    grpcWeb.MethodType.UNARY,
    proto_location_location_pb.CheckReapproRequest,
    proto_location_location_pb.CheckReapproResponse,
    (request: proto_location_location_pb.CheckReapproRequest) => {
      return request.serializeBinary();
    },
    proto_location_location_pb.CheckReapproResponse.deserializeBinary
  );

  validReappro(
    request: proto_location_location_pb.CheckReapproRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_location_location_pb.CheckReapproResponse>;

  validReappro(
    request: proto_location_location_pb.CheckReapproRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.CheckReapproResponse) => void): grpcWeb.ClientReadableStream<proto_location_location_pb.CheckReapproResponse>;

  validReappro(
    request: proto_location_location_pb.CheckReapproRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.CheckReapproResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/location.LocationService/ValidReappro',
        request,
        metadata || {},
        this.methodDescriptorValidReappro,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/location.LocationService/ValidReappro',
    request,
    metadata || {},
    this.methodDescriptorValidReappro);
  }

  methodDescriptorSuggestLocation = new grpcWeb.MethodDescriptor(
    '/location.LocationService/SuggestLocation',
    grpcWeb.MethodType.UNARY,
    proto_location_location_pb.SuggestLocationRequest,
    proto_location_location_pb.SuggestLocationResponse,
    (request: proto_location_location_pb.SuggestLocationRequest) => {
      return request.serializeBinary();
    },
    proto_location_location_pb.SuggestLocationResponse.deserializeBinary
  );

  suggestLocation(
    request: proto_location_location_pb.SuggestLocationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_location_location_pb.SuggestLocationResponse>;

  suggestLocation(
    request: proto_location_location_pb.SuggestLocationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.SuggestLocationResponse) => void): grpcWeb.ClientReadableStream<proto_location_location_pb.SuggestLocationResponse>;

  suggestLocation(
    request: proto_location_location_pb.SuggestLocationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.SuggestLocationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/location.LocationService/SuggestLocation',
        request,
        metadata || {},
        this.methodDescriptorSuggestLocation,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/location.LocationService/SuggestLocation',
    request,
    metadata || {},
    this.methodDescriptorSuggestLocation);
  }

  methodDescriptorGetListLocationForMovement = new grpcWeb.MethodDescriptor(
    '/location.LocationService/GetListLocationForMovement',
    grpcWeb.MethodType.UNARY,
    proto_location_location_pb.GetListLocationForMovementRequest,
    proto_location_location_pb.GetListLocationForMovementResponse,
    (request: proto_location_location_pb.GetListLocationForMovementRequest) => {
      return request.serializeBinary();
    },
    proto_location_location_pb.GetListLocationForMovementResponse.deserializeBinary
  );

  getListLocationForMovement(
    request: proto_location_location_pb.GetListLocationForMovementRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_location_location_pb.GetListLocationForMovementResponse>;

  getListLocationForMovement(
    request: proto_location_location_pb.GetListLocationForMovementRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.GetListLocationForMovementResponse) => void): grpcWeb.ClientReadableStream<proto_location_location_pb.GetListLocationForMovementResponse>;

  getListLocationForMovement(
    request: proto_location_location_pb.GetListLocationForMovementRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.GetListLocationForMovementResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/location.LocationService/GetListLocationForMovement',
        request,
        metadata || {},
        this.methodDescriptorGetListLocationForMovement,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/location.LocationService/GetListLocationForMovement',
    request,
    metadata || {},
    this.methodDescriptorGetListLocationForMovement);
  }

  methodDescriptorValidLocationForMovement = new grpcWeb.MethodDescriptor(
    '/location.LocationService/ValidLocationForMovement',
    grpcWeb.MethodType.UNARY,
    proto_location_location_pb.ValidLocationForMovementRequest,
    proto_location_location_pb.ValidLocationForMovementResponse,
    (request: proto_location_location_pb.ValidLocationForMovementRequest) => {
      return request.serializeBinary();
    },
    proto_location_location_pb.ValidLocationForMovementResponse.deserializeBinary
  );

  validLocationForMovement(
    request: proto_location_location_pb.ValidLocationForMovementRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_location_location_pb.ValidLocationForMovementResponse>;

  validLocationForMovement(
    request: proto_location_location_pb.ValidLocationForMovementRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.ValidLocationForMovementResponse) => void): grpcWeb.ClientReadableStream<proto_location_location_pb.ValidLocationForMovementResponse>;

  validLocationForMovement(
    request: proto_location_location_pb.ValidLocationForMovementRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.ValidLocationForMovementResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/location.LocationService/ValidLocationForMovement',
        request,
        metadata || {},
        this.methodDescriptorValidLocationForMovement,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/location.LocationService/ValidLocationForMovement',
    request,
    metadata || {},
    this.methodDescriptorValidLocationForMovement);
  }

  methodDescriptorCheckCanDeleteLocationById = new grpcWeb.MethodDescriptor(
    '/location.LocationService/CheckCanDeleteLocationById',
    grpcWeb.MethodType.UNARY,
    proto_location_location_pb.CheckCanDeleteLocationByIdRequest,
    proto_location_location_pb.CheckCanDeleteLocationByIdResponse,
    (request: proto_location_location_pb.CheckCanDeleteLocationByIdRequest) => {
      return request.serializeBinary();
    },
    proto_location_location_pb.CheckCanDeleteLocationByIdResponse.deserializeBinary
  );

  checkCanDeleteLocationById(
    request: proto_location_location_pb.CheckCanDeleteLocationByIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_location_location_pb.CheckCanDeleteLocationByIdResponse>;

  checkCanDeleteLocationById(
    request: proto_location_location_pb.CheckCanDeleteLocationByIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.CheckCanDeleteLocationByIdResponse) => void): grpcWeb.ClientReadableStream<proto_location_location_pb.CheckCanDeleteLocationByIdResponse>;

  checkCanDeleteLocationById(
    request: proto_location_location_pb.CheckCanDeleteLocationByIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.CheckCanDeleteLocationByIdResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/location.LocationService/CheckCanDeleteLocationById',
        request,
        metadata || {},
        this.methodDescriptorCheckCanDeleteLocationById,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/location.LocationService/CheckCanDeleteLocationById',
    request,
    metadata || {},
    this.methodDescriptorCheckCanDeleteLocationById);
  }

  methodDescriptorResetMovement = new grpcWeb.MethodDescriptor(
    '/location.LocationService/ResetMovement',
    grpcWeb.MethodType.UNARY,
    proto_location_location_pb.ResetMovementRequest,
    proto_location_location_pb.ResetMovementResponse,
    (request: proto_location_location_pb.ResetMovementRequest) => {
      return request.serializeBinary();
    },
    proto_location_location_pb.ResetMovementResponse.deserializeBinary
  );

  resetMovement(
    request: proto_location_location_pb.ResetMovementRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_location_location_pb.ResetMovementResponse>;

  resetMovement(
    request: proto_location_location_pb.ResetMovementRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.ResetMovementResponse) => void): grpcWeb.ClientReadableStream<proto_location_location_pb.ResetMovementResponse>;

  resetMovement(
    request: proto_location_location_pb.ResetMovementRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_location_location_pb.ResetMovementResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/location.LocationService/ResetMovement',
        request,
        metadata || {},
        this.methodDescriptorResetMovement,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/location.LocationService/ResetMovement',
    request,
    metadata || {},
    this.methodDescriptorResetMovement);
  }

}

