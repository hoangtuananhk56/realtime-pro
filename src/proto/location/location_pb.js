// source: proto/location/location.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var proto_comarticle_comarticle_pb = require('../../proto/comarticle/comarticle_pb.js');
goog.object.extend(proto, proto_comarticle_comarticle_pb);
var proto_attendu_attendu_pb = require('../../proto/attendu/attendu_pb.js');
goog.object.extend(proto, proto_attendu_attendu_pb);
var proto_reserve_reserve_pb = require('../../proto/reserve/reserve_pb.js');
goog.object.extend(proto, proto_reserve_reserve_pb);
goog.exportSymbol('proto.location.CheckCanDeleteLocationByIdRequest', null, global);
goog.exportSymbol('proto.location.CheckCanDeleteLocationByIdResponse', null, global);
goog.exportSymbol('proto.location.CheckMovementLocationRequest', null, global);
goog.exportSymbol('proto.location.CheckMovementLocationResponse', null, global);
goog.exportSymbol('proto.location.CheckPreparationLocationRequest', null, global);
goog.exportSymbol('proto.location.CheckPreparationLocationResponse', null, global);
goog.exportSymbol('proto.location.CheckPutAwayLocationInfo', null, global);
goog.exportSymbol('proto.location.CheckPutAwayLocationRequest', null, global);
goog.exportSymbol('proto.location.CheckPutAwayLocationResponse', null, global);
goog.exportSymbol('proto.location.CheckPutAwayManuallyRequest', null, global);
goog.exportSymbol('proto.location.CheckPutAwayManuallyResponse', null, global);
goog.exportSymbol('proto.location.CheckReapproRequest', null, global);
goog.exportSymbol('proto.location.CheckReapproResponse', null, global);
goog.exportSymbol('proto.location.GetAllRequest', null, global);
goog.exportSymbol('proto.location.GetAllResponse', null, global);
goog.exportSymbol('proto.location.GetListLocationForMovementRequest', null, global);
goog.exportSymbol('proto.location.GetListLocationForMovementResponse', null, global);
goog.exportSymbol('proto.location.GetLocationByIdRequest', null, global);
goog.exportSymbol('proto.location.Location', null, global);
goog.exportSymbol('proto.location.LocationCreateRequest', null, global);
goog.exportSymbol('proto.location.LocationDTO', null, global);
goog.exportSymbol('proto.location.LocationMovement', null, global);
goog.exportSymbol('proto.location.LocationResponse', null, global);
goog.exportSymbol('proto.location.MetaData', null, global);
goog.exportSymbol('proto.location.ResetMovementRequest', null, global);
goog.exportSymbol('proto.location.ResetMovementResponse', null, global);
goog.exportSymbol('proto.location.SuggestLocationRequest', null, global);
goog.exportSymbol('proto.location.SuggestLocationResponse', null, global);
goog.exportSymbol('proto.location.ValidLocationForMovementRequest', null, global);
goog.exportSymbol('proto.location.ValidLocationForMovementResponse', null, global);
goog.exportSymbol('proto.location.VallidLocationRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.Location = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.location.Location.repeatedFields_, null);
};
goog.inherits(proto.location.Location, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.Location.displayName = 'proto.location.Location';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.LocationCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.location.LocationCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.LocationCreateRequest.displayName = 'proto.location.LocationCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.LocationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.location.LocationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.LocationResponse.displayName = 'proto.location.LocationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.MetaData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.location.MetaData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.MetaData.displayName = 'proto.location.MetaData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.GetAllRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.location.GetAllRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.GetAllRequest.displayName = 'proto.location.GetAllRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.GetAllResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.location.GetAllResponse.repeatedFields_, null);
};
goog.inherits(proto.location.GetAllResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.GetAllResponse.displayName = 'proto.location.GetAllResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.VallidLocationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.location.VallidLocationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.VallidLocationRequest.displayName = 'proto.location.VallidLocationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.GetLocationByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.location.GetLocationByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.GetLocationByIdRequest.displayName = 'proto.location.GetLocationByIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.CheckPutAwayManuallyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.location.CheckPutAwayManuallyRequest.repeatedFields_, null);
};
goog.inherits(proto.location.CheckPutAwayManuallyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.CheckPutAwayManuallyRequest.displayName = 'proto.location.CheckPutAwayManuallyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.CheckPutAwayManuallyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.location.CheckPutAwayManuallyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.CheckPutAwayManuallyResponse.displayName = 'proto.location.CheckPutAwayManuallyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.CheckPutAwayLocationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.location.CheckPutAwayLocationRequest.repeatedFields_, null);
};
goog.inherits(proto.location.CheckPutAwayLocationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.CheckPutAwayLocationRequest.displayName = 'proto.location.CheckPutAwayLocationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.CheckPutAwayLocationInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.location.CheckPutAwayLocationInfo.repeatedFields_, null);
};
goog.inherits(proto.location.CheckPutAwayLocationInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.CheckPutAwayLocationInfo.displayName = 'proto.location.CheckPutAwayLocationInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.CheckPutAwayLocationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.location.CheckPutAwayLocationResponse.repeatedFields_, null);
};
goog.inherits(proto.location.CheckPutAwayLocationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.CheckPutAwayLocationResponse.displayName = 'proto.location.CheckPutAwayLocationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.LocationDTO = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.location.LocationDTO, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.LocationDTO.displayName = 'proto.location.LocationDTO';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.CheckPreparationLocationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.location.CheckPreparationLocationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.CheckPreparationLocationRequest.displayName = 'proto.location.CheckPreparationLocationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.CheckPreparationLocationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.location.CheckPreparationLocationResponse.repeatedFields_, null);
};
goog.inherits(proto.location.CheckPreparationLocationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.CheckPreparationLocationResponse.displayName = 'proto.location.CheckPreparationLocationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.CheckMovementLocationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.location.CheckMovementLocationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.CheckMovementLocationRequest.displayName = 'proto.location.CheckMovementLocationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.CheckMovementLocationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.location.CheckMovementLocationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.CheckMovementLocationResponse.displayName = 'proto.location.CheckMovementLocationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.CheckReapproRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.location.CheckReapproRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.CheckReapproRequest.displayName = 'proto.location.CheckReapproRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.CheckReapproResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.location.CheckReapproResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.CheckReapproResponse.displayName = 'proto.location.CheckReapproResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.SuggestLocationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.location.SuggestLocationRequest.repeatedFields_, null);
};
goog.inherits(proto.location.SuggestLocationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.SuggestLocationRequest.displayName = 'proto.location.SuggestLocationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.SuggestLocationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.location.SuggestLocationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.SuggestLocationResponse.displayName = 'proto.location.SuggestLocationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.LocationMovement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.location.LocationMovement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.LocationMovement.displayName = 'proto.location.LocationMovement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.GetListLocationForMovementRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.location.GetListLocationForMovementRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.GetListLocationForMovementRequest.displayName = 'proto.location.GetListLocationForMovementRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.GetListLocationForMovementResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.location.GetListLocationForMovementResponse.repeatedFields_, null);
};
goog.inherits(proto.location.GetListLocationForMovementResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.GetListLocationForMovementResponse.displayName = 'proto.location.GetListLocationForMovementResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.ValidLocationForMovementRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.location.ValidLocationForMovementRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.ValidLocationForMovementRequest.displayName = 'proto.location.ValidLocationForMovementRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.ValidLocationForMovementResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.location.ValidLocationForMovementResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.ValidLocationForMovementResponse.displayName = 'proto.location.ValidLocationForMovementResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.CheckCanDeleteLocationByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.location.CheckCanDeleteLocationByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.CheckCanDeleteLocationByIdRequest.displayName = 'proto.location.CheckCanDeleteLocationByIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.CheckCanDeleteLocationByIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.location.CheckCanDeleteLocationByIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.CheckCanDeleteLocationByIdResponse.displayName = 'proto.location.CheckCanDeleteLocationByIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.ResetMovementRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.location.ResetMovementRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.ResetMovementRequest.displayName = 'proto.location.ResetMovementRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.location.ResetMovementResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.location.ResetMovementResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.location.ResetMovementResponse.displayName = 'proto.location.ResetMovementResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.location.Location.repeatedFields_ = [28];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.Location.prototype.toObject = function(opt_includeInstance) {
  return proto.location.Location.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.Location} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.Location.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updateAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    storageType: jspb.Message.getFieldWithDefault(msg, 5, ""),
    storageFunc: jspb.Message.getFieldWithDefault(msg, 6, ""),
    zoneId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    aisle: jspb.Message.getFieldWithDefault(msg, 8, ""),
    bay: jspb.Message.getFieldWithDefault(msg, 9, ""),
    width: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    height: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    length: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    entryBlock: jspb.Message.getFieldWithDefault(msg, 17, ""),
    conditionement: jspb.Message.getFieldWithDefault(msg, 18, ""),
    maxHeight: jspb.Message.getFloatingPointFieldWithDefault(msg, 19, 0.0),
    maxWeight: jspb.Message.getFloatingPointFieldWithDefault(msg, 20, 0.0),
    minHeight: jspb.Message.getFloatingPointFieldWithDefault(msg, 21, 0.0),
    level: jspb.Message.getFieldWithDefault(msg, 22, 0),
    debut: jspb.Message.getFloatingPointFieldWithDefault(msg, 23, 0.0),
    fin: jspb.Message.getFloatingPointFieldWithDefault(msg, 24, 0.0),
    locationType: jspb.Message.getFieldWithDefault(msg, 25, ""),
    code: jspb.Message.getFieldWithDefault(msg, 26, ""),
    parentId: jspb.Message.getFieldWithDefault(msg, 27, ""),
    childrenList: jspb.Message.toObjectList(msg.getChildrenList(),
    proto.location.Location.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.Location}
 */
proto.location.Location.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.Location;
  return proto.location.Location.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.Location} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.Location}
 */
proto.location.Location.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorageType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorageFunc(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setZoneId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAisle(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setBay(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setWidth(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHeight(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLength(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntryBlock(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setConditionement(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxHeight(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxWeight(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMinHeight(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLevel(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDebut(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFin(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationType(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentId(value);
      break;
    case 28:
      var value = new proto.location.Location;
      reader.readMessage(value,proto.location.Location.deserializeBinaryFromReader);
      msg.addChildren(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.Location.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.Location.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.Location} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.Location.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreateAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUpdateAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStorageType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStorageFunc();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getZoneId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAisle();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getBay();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getLength();
  if (f !== 0.0) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getEntryBlock();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getConditionement();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getMaxHeight();
  if (f !== 0.0) {
    writer.writeDouble(
      19,
      f
    );
  }
  f = message.getMaxWeight();
  if (f !== 0.0) {
    writer.writeDouble(
      20,
      f
    );
  }
  f = message.getMinHeight();
  if (f !== 0.0) {
    writer.writeDouble(
      21,
      f
    );
  }
  f = message.getLevel();
  if (f !== 0) {
    writer.writeInt32(
      22,
      f
    );
  }
  f = message.getDebut();
  if (f !== 0.0) {
    writer.writeDouble(
      23,
      f
    );
  }
  f = message.getFin();
  if (f !== 0.0) {
    writer.writeDouble(
      24,
      f
    );
  }
  f = message.getLocationType();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getParentId();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getChildrenList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      28,
      f,
      proto.location.Location.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.location.Location.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.Location} returns this
 */
proto.location.Location.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 create_at = 2;
 * @return {number}
 */
proto.location.Location.prototype.getCreateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.location.Location} returns this
 */
proto.location.Location.prototype.setCreateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 update_at = 3;
 * @return {number}
 */
proto.location.Location.prototype.getUpdateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.location.Location} returns this
 */
proto.location.Location.prototype.setUpdateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.location.Location.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.Location} returns this
 */
proto.location.Location.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string storage_type = 5;
 * @return {string}
 */
proto.location.Location.prototype.getStorageType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.Location} returns this
 */
proto.location.Location.prototype.setStorageType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string storage_func = 6;
 * @return {string}
 */
proto.location.Location.prototype.getStorageFunc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.Location} returns this
 */
proto.location.Location.prototype.setStorageFunc = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string zone_id = 7;
 * @return {string}
 */
proto.location.Location.prototype.getZoneId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.Location} returns this
 */
proto.location.Location.prototype.setZoneId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string aisle = 8;
 * @return {string}
 */
proto.location.Location.prototype.getAisle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.Location} returns this
 */
proto.location.Location.prototype.setAisle = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string bay = 9;
 * @return {string}
 */
proto.location.Location.prototype.getBay = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.Location} returns this
 */
proto.location.Location.prototype.setBay = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional double width = 10;
 * @return {number}
 */
proto.location.Location.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.location.Location} returns this
 */
proto.location.Location.prototype.setWidth = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional double height = 11;
 * @return {number}
 */
proto.location.Location.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.location.Location} returns this
 */
proto.location.Location.prototype.setHeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional double length = 12;
 * @return {number}
 */
proto.location.Location.prototype.getLength = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.location.Location} returns this
 */
proto.location.Location.prototype.setLength = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional string entry_block = 17;
 * @return {string}
 */
proto.location.Location.prototype.getEntryBlock = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.Location} returns this
 */
proto.location.Location.prototype.setEntryBlock = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string conditionement = 18;
 * @return {string}
 */
proto.location.Location.prototype.getConditionement = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.Location} returns this
 */
proto.location.Location.prototype.setConditionement = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional double max_height = 19;
 * @return {number}
 */
proto.location.Location.prototype.getMaxHeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 19, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.location.Location} returns this
 */
proto.location.Location.prototype.setMaxHeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 19, value);
};


/**
 * optional double max_weight = 20;
 * @return {number}
 */
proto.location.Location.prototype.getMaxWeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 20, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.location.Location} returns this
 */
proto.location.Location.prototype.setMaxWeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 20, value);
};


/**
 * optional double min_height = 21;
 * @return {number}
 */
proto.location.Location.prototype.getMinHeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 21, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.location.Location} returns this
 */
proto.location.Location.prototype.setMinHeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 21, value);
};


/**
 * optional int32 level = 22;
 * @return {number}
 */
proto.location.Location.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.location.Location} returns this
 */
proto.location.Location.prototype.setLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional double debut = 23;
 * @return {number}
 */
proto.location.Location.prototype.getDebut = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 23, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.location.Location} returns this
 */
proto.location.Location.prototype.setDebut = function(value) {
  return jspb.Message.setProto3FloatField(this, 23, value);
};


/**
 * optional double fin = 24;
 * @return {number}
 */
proto.location.Location.prototype.getFin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 24, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.location.Location} returns this
 */
proto.location.Location.prototype.setFin = function(value) {
  return jspb.Message.setProto3FloatField(this, 24, value);
};


/**
 * optional string location_type = 25;
 * @return {string}
 */
proto.location.Location.prototype.getLocationType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.Location} returns this
 */
proto.location.Location.prototype.setLocationType = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string code = 26;
 * @return {string}
 */
proto.location.Location.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.Location} returns this
 */
proto.location.Location.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional string parent_id = 27;
 * @return {string}
 */
proto.location.Location.prototype.getParentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.Location} returns this
 */
proto.location.Location.prototype.setParentId = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * repeated Location children = 28;
 * @return {!Array<!proto.location.Location>}
 */
proto.location.Location.prototype.getChildrenList = function() {
  return /** @type{!Array<!proto.location.Location>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.location.Location, 28));
};


/**
 * @param {!Array<!proto.location.Location>} value
 * @return {!proto.location.Location} returns this
*/
proto.location.Location.prototype.setChildrenList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 28, value);
};


/**
 * @param {!proto.location.Location=} opt_value
 * @param {number=} opt_index
 * @return {!proto.location.Location}
 */
proto.location.Location.prototype.addChildren = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 28, opt_value, proto.location.Location, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.location.Location} returns this
 */
proto.location.Location.prototype.clearChildrenList = function() {
  return this.setChildrenList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.LocationCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.location.LocationCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.LocationCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.LocationCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    entry: (f = msg.getEntry()) && proto.location.Location.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.LocationCreateRequest}
 */
proto.location.LocationCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.LocationCreateRequest;
  return proto.location.LocationCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.LocationCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.LocationCreateRequest}
 */
proto.location.LocationCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.location.Location;
      reader.readMessage(value,proto.location.Location.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.LocationCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.LocationCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.LocationCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.LocationCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.location.Location.serializeBinaryToWriter
    );
  }
};


/**
 * optional Location entry = 1;
 * @return {?proto.location.Location}
 */
proto.location.LocationCreateRequest.prototype.getEntry = function() {
  return /** @type{?proto.location.Location} */ (
    jspb.Message.getWrapperField(this, proto.location.Location, 1));
};


/**
 * @param {?proto.location.Location|undefined} value
 * @return {!proto.location.LocationCreateRequest} returns this
*/
proto.location.LocationCreateRequest.prototype.setEntry = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.location.LocationCreateRequest} returns this
 */
proto.location.LocationCreateRequest.prototype.clearEntry = function() {
  return this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.location.LocationCreateRequest.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.LocationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.location.LocationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.LocationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.LocationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entry: (f = msg.getEntry()) && proto.location.Location.toObject(includeInstance, f),
    messageerror: jspb.Message.getFieldWithDefault(msg, 2, ""),
    recType: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.LocationResponse}
 */
proto.location.LocationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.LocationResponse;
  return proto.location.LocationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.LocationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.LocationResponse}
 */
proto.location.LocationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.location.Location;
      reader.readMessage(value,proto.location.Location.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRecType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.LocationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.LocationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.LocationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.LocationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.location.Location.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRecType();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional Location entry = 1;
 * @return {?proto.location.Location}
 */
proto.location.LocationResponse.prototype.getEntry = function() {
  return /** @type{?proto.location.Location} */ (
    jspb.Message.getWrapperField(this, proto.location.Location, 1));
};


/**
 * @param {?proto.location.Location|undefined} value
 * @return {!proto.location.LocationResponse} returns this
*/
proto.location.LocationResponse.prototype.setEntry = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.location.LocationResponse} returns this
 */
proto.location.LocationResponse.prototype.clearEntry = function() {
  return this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.location.LocationResponse.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string messageError = 2;
 * @return {string}
 */
proto.location.LocationResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.LocationResponse} returns this
 */
proto.location.LocationResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 rec_type = 3;
 * @return {number}
 */
proto.location.LocationResponse.prototype.getRecType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.location.LocationResponse} returns this
 */
proto.location.LocationResponse.prototype.setRecType = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.MetaData.prototype.toObject = function(opt_includeInstance) {
  return proto.location.MetaData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.MetaData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.MetaData.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    total: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.MetaData}
 */
proto.location.MetaData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.MetaData;
  return proto.location.MetaData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.MetaData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.MetaData}
 */
proto.location.MetaData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.MetaData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.MetaData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.MetaData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.MetaData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional int32 count = 1;
 * @return {number}
 */
proto.location.MetaData.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.location.MetaData} returns this
 */
proto.location.MetaData.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 offset = 2;
 * @return {number}
 */
proto.location.MetaData.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.location.MetaData} returns this
 */
proto.location.MetaData.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 limit = 3;
 * @return {number}
 */
proto.location.MetaData.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.location.MetaData} returns this
 */
proto.location.MetaData.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 total = 4;
 * @return {number}
 */
proto.location.MetaData.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.location.MetaData} returns this
 */
proto.location.MetaData.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.GetAllRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.location.GetAllRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.GetAllRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.GetAllRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.GetAllRequest}
 */
proto.location.GetAllRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.GetAllRequest;
  return proto.location.GetAllRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.GetAllRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.GetAllRequest}
 */
proto.location.GetAllRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.GetAllRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.GetAllRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.GetAllRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.GetAllRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 limit = 1;
 * @return {number}
 */
proto.location.GetAllRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.location.GetAllRequest} returns this
 */
proto.location.GetAllRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 offset = 2;
 * @return {number}
 */
proto.location.GetAllRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.location.GetAllRequest} returns this
 */
proto.location.GetAllRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.location.GetAllResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.GetAllResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.location.GetAllResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.GetAllResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.GetAllResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto.location.Location.toObject, includeInstance),
    metadata: (f = msg.getMetadata()) && proto.location.MetaData.toObject(includeInstance, f),
    messageerror: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.GetAllResponse}
 */
proto.location.GetAllResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.GetAllResponse;
  return proto.location.GetAllResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.GetAllResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.GetAllResponse}
 */
proto.location.GetAllResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.location.Location;
      reader.readMessage(value,proto.location.Location.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    case 2:
      var value = new proto.location.MetaData;
      reader.readMessage(value,proto.location.MetaData.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.GetAllResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.GetAllResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.GetAllResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.GetAllResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.location.Location.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.location.MetaData.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated Location entry = 1;
 * @return {!Array<!proto.location.Location>}
 */
proto.location.GetAllResponse.prototype.getEntryList = function() {
  return /** @type{!Array<!proto.location.Location>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.location.Location, 1));
};


/**
 * @param {!Array<!proto.location.Location>} value
 * @return {!proto.location.GetAllResponse} returns this
*/
proto.location.GetAllResponse.prototype.setEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.location.Location=} opt_value
 * @param {number=} opt_index
 * @return {!proto.location.Location}
 */
proto.location.GetAllResponse.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.location.Location, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.location.GetAllResponse} returns this
 */
proto.location.GetAllResponse.prototype.clearEntryList = function() {
  return this.setEntryList([]);
};


/**
 * optional MetaData metadata = 2;
 * @return {?proto.location.MetaData}
 */
proto.location.GetAllResponse.prototype.getMetadata = function() {
  return /** @type{?proto.location.MetaData} */ (
    jspb.Message.getWrapperField(this, proto.location.MetaData, 2));
};


/**
 * @param {?proto.location.MetaData|undefined} value
 * @return {!proto.location.GetAllResponse} returns this
*/
proto.location.GetAllResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.location.GetAllResponse} returns this
 */
proto.location.GetAllResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.location.GetAllResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string messageError = 3;
 * @return {string}
 */
proto.location.GetAllResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.GetAllResponse} returns this
 */
proto.location.GetAllResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.VallidLocationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.location.VallidLocationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.VallidLocationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.VallidLocationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    codeBar: jspb.Message.getFieldWithDefault(msg, 1, ""),
    attId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    warehourseId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    warehouseId: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.VallidLocationRequest}
 */
proto.location.VallidLocationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.VallidLocationRequest;
  return proto.location.VallidLocationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.VallidLocationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.VallidLocationRequest}
 */
proto.location.VallidLocationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodeBar(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehourseId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.VallidLocationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.VallidLocationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.VallidLocationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.VallidLocationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCodeBar();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAttId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getWarehourseId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getWarehouseId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string code_bar = 1;
 * @return {string}
 */
proto.location.VallidLocationRequest.prototype.getCodeBar = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.VallidLocationRequest} returns this
 */
proto.location.VallidLocationRequest.prototype.setCodeBar = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string att_id = 2;
 * @return {string}
 */
proto.location.VallidLocationRequest.prototype.getAttId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.VallidLocationRequest} returns this
 */
proto.location.VallidLocationRequest.prototype.setAttId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string warehourse_id = 3;
 * @return {string}
 */
proto.location.VallidLocationRequest.prototype.getWarehourseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.VallidLocationRequest} returns this
 */
proto.location.VallidLocationRequest.prototype.setWarehourseId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string user_id = 4;
 * @return {string}
 */
proto.location.VallidLocationRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.VallidLocationRequest} returns this
 */
proto.location.VallidLocationRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string warehouse_id = 5;
 * @return {string}
 */
proto.location.VallidLocationRequest.prototype.getWarehouseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.VallidLocationRequest} returns this
 */
proto.location.VallidLocationRequest.prototype.setWarehouseId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.GetLocationByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.location.GetLocationByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.GetLocationByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.GetLocationByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.GetLocationByIdRequest}
 */
proto.location.GetLocationByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.GetLocationByIdRequest;
  return proto.location.GetLocationByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.GetLocationByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.GetLocationByIdRequest}
 */
proto.location.GetLocationByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.GetLocationByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.GetLocationByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.GetLocationByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.GetLocationByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.location.GetLocationByIdRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.GetLocationByIdRequest} returns this
 */
proto.location.GetLocationByIdRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.location.CheckPutAwayManuallyRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.CheckPutAwayManuallyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.location.CheckPutAwayManuallyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.CheckPutAwayManuallyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.CheckPutAwayManuallyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    barCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    attProductionIdList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    checkType: jspb.Message.getFieldWithDefault(msg, 4, 0),
    entryDate: jspb.Message.getFieldWithDefault(msg, 5, 0),
    isAuto: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    isAnomaly: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.CheckPutAwayManuallyRequest}
 */
proto.location.CheckPutAwayManuallyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.CheckPutAwayManuallyRequest;
  return proto.location.CheckPutAwayManuallyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.CheckPutAwayManuallyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.CheckPutAwayManuallyRequest}
 */
proto.location.CheckPutAwayManuallyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addAttProductionId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCheckType(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEntryDate(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAuto(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAnomaly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.CheckPutAwayManuallyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.CheckPutAwayManuallyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.CheckPutAwayManuallyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.CheckPutAwayManuallyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBarCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAttProductionIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getCheckType();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getEntryDate();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getIsAuto();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getIsAnomaly();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional string bar_code = 1;
 * @return {string}
 */
proto.location.CheckPutAwayManuallyRequest.prototype.getBarCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckPutAwayManuallyRequest} returns this
 */
proto.location.CheckPutAwayManuallyRequest.prototype.setBarCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.location.CheckPutAwayManuallyRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckPutAwayManuallyRequest} returns this
 */
proto.location.CheckPutAwayManuallyRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string att_production_id = 3;
 * @return {!Array<string>}
 */
proto.location.CheckPutAwayManuallyRequest.prototype.getAttProductionIdList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.location.CheckPutAwayManuallyRequest} returns this
 */
proto.location.CheckPutAwayManuallyRequest.prototype.setAttProductionIdList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.location.CheckPutAwayManuallyRequest} returns this
 */
proto.location.CheckPutAwayManuallyRequest.prototype.addAttProductionId = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.location.CheckPutAwayManuallyRequest} returns this
 */
proto.location.CheckPutAwayManuallyRequest.prototype.clearAttProductionIdList = function() {
  return this.setAttProductionIdList([]);
};


/**
 * optional int32 check_type = 4;
 * @return {number}
 */
proto.location.CheckPutAwayManuallyRequest.prototype.getCheckType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.location.CheckPutAwayManuallyRequest} returns this
 */
proto.location.CheckPutAwayManuallyRequest.prototype.setCheckType = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 entry_date = 5;
 * @return {number}
 */
proto.location.CheckPutAwayManuallyRequest.prototype.getEntryDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.location.CheckPutAwayManuallyRequest} returns this
 */
proto.location.CheckPutAwayManuallyRequest.prototype.setEntryDate = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool is_auto = 6;
 * @return {boolean}
 */
proto.location.CheckPutAwayManuallyRequest.prototype.getIsAuto = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.location.CheckPutAwayManuallyRequest} returns this
 */
proto.location.CheckPutAwayManuallyRequest.prototype.setIsAuto = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool is_anomaly = 7;
 * @return {boolean}
 */
proto.location.CheckPutAwayManuallyRequest.prototype.getIsAnomaly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.location.CheckPutAwayManuallyRequest} returns this
 */
proto.location.CheckPutAwayManuallyRequest.prototype.setIsAnomaly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.CheckPutAwayManuallyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.location.CheckPutAwayManuallyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.CheckPutAwayManuallyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.CheckPutAwayManuallyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageerror: jspb.Message.getFieldWithDefault(msg, 1, ""),
    locationId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.CheckPutAwayManuallyResponse}
 */
proto.location.CheckPutAwayManuallyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.CheckPutAwayManuallyResponse;
  return proto.location.CheckPutAwayManuallyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.CheckPutAwayManuallyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.CheckPutAwayManuallyResponse}
 */
proto.location.CheckPutAwayManuallyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.CheckPutAwayManuallyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.CheckPutAwayManuallyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.CheckPutAwayManuallyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.CheckPutAwayManuallyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLocationId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string messageError = 1;
 * @return {string}
 */
proto.location.CheckPutAwayManuallyResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckPutAwayManuallyResponse} returns this
 */
proto.location.CheckPutAwayManuallyResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string location_id = 2;
 * @return {string}
 */
proto.location.CheckPutAwayManuallyResponse.prototype.getLocationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckPutAwayManuallyResponse} returns this
 */
proto.location.CheckPutAwayManuallyResponse.prototype.setLocationId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.location.CheckPutAwayLocationRequest.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.CheckPutAwayLocationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.location.CheckPutAwayLocationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.CheckPutAwayLocationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.CheckPutAwayLocationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto_reserve_reserve_pb.Reserve.toObject, includeInstance),
    attfilepathsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    locationInfo: (f = msg.getLocationInfo()) && proto.location.CheckPutAwayLocationInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.CheckPutAwayLocationRequest}
 */
proto.location.CheckPutAwayLocationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.CheckPutAwayLocationRequest;
  return proto.location.CheckPutAwayLocationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.CheckPutAwayLocationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.CheckPutAwayLocationRequest}
 */
proto.location.CheckPutAwayLocationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_reserve_reserve_pb.Reserve;
      reader.readMessage(value,proto_reserve_reserve_pb.Reserve.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addAttfilepaths(value);
      break;
    case 3:
      var value = new proto.location.CheckPutAwayLocationInfo;
      reader.readMessage(value,proto.location.CheckPutAwayLocationInfo.deserializeBinaryFromReader);
      msg.setLocationInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.CheckPutAwayLocationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.CheckPutAwayLocationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.CheckPutAwayLocationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.CheckPutAwayLocationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto_reserve_reserve_pb.Reserve.serializeBinaryToWriter
    );
  }
  f = message.getAttfilepathsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getLocationInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.location.CheckPutAwayLocationInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated reserve.Reserve entry = 1;
 * @return {!Array<!proto.reserve.Reserve>}
 */
proto.location.CheckPutAwayLocationRequest.prototype.getEntryList = function() {
  return /** @type{!Array<!proto.reserve.Reserve>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_reserve_reserve_pb.Reserve, 1));
};


/**
 * @param {!Array<!proto.reserve.Reserve>} value
 * @return {!proto.location.CheckPutAwayLocationRequest} returns this
*/
proto.location.CheckPutAwayLocationRequest.prototype.setEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.reserve.Reserve=} opt_value
 * @param {number=} opt_index
 * @return {!proto.reserve.Reserve}
 */
proto.location.CheckPutAwayLocationRequest.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.reserve.Reserve, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.location.CheckPutAwayLocationRequest} returns this
 */
proto.location.CheckPutAwayLocationRequest.prototype.clearEntryList = function() {
  return this.setEntryList([]);
};


/**
 * repeated string attFilePaths = 2;
 * @return {!Array<string>}
 */
proto.location.CheckPutAwayLocationRequest.prototype.getAttfilepathsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.location.CheckPutAwayLocationRequest} returns this
 */
proto.location.CheckPutAwayLocationRequest.prototype.setAttfilepathsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.location.CheckPutAwayLocationRequest} returns this
 */
proto.location.CheckPutAwayLocationRequest.prototype.addAttfilepaths = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.location.CheckPutAwayLocationRequest} returns this
 */
proto.location.CheckPutAwayLocationRequest.prototype.clearAttfilepathsList = function() {
  return this.setAttfilepathsList([]);
};


/**
 * optional CheckPutAwayLocationInfo location_info = 3;
 * @return {?proto.location.CheckPutAwayLocationInfo}
 */
proto.location.CheckPutAwayLocationRequest.prototype.getLocationInfo = function() {
  return /** @type{?proto.location.CheckPutAwayLocationInfo} */ (
    jspb.Message.getWrapperField(this, proto.location.CheckPutAwayLocationInfo, 3));
};


/**
 * @param {?proto.location.CheckPutAwayLocationInfo|undefined} value
 * @return {!proto.location.CheckPutAwayLocationRequest} returns this
*/
proto.location.CheckPutAwayLocationRequest.prototype.setLocationInfo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.location.CheckPutAwayLocationRequest} returns this
 */
proto.location.CheckPutAwayLocationRequest.prototype.clearLocationInfo = function() {
  return this.setLocationInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.location.CheckPutAwayLocationRequest.prototype.hasLocationInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.location.CheckPutAwayLocationInfo.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.CheckPutAwayLocationInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.location.CheckPutAwayLocationInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.CheckPutAwayLocationInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.CheckPutAwayLocationInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    barCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    attProductionIdList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    entryDate: jspb.Message.getFieldWithDefault(msg, 4, 0),
    isAuto: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    isAnomaly: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.CheckPutAwayLocationInfo}
 */
proto.location.CheckPutAwayLocationInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.CheckPutAwayLocationInfo;
  return proto.location.CheckPutAwayLocationInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.CheckPutAwayLocationInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.CheckPutAwayLocationInfo}
 */
proto.location.CheckPutAwayLocationInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addAttProductionId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEntryDate(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAuto(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAnomaly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.CheckPutAwayLocationInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.CheckPutAwayLocationInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.CheckPutAwayLocationInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.CheckPutAwayLocationInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBarCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAttProductionIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getEntryDate();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getIsAuto();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getIsAnomaly();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string bar_code = 1;
 * @return {string}
 */
proto.location.CheckPutAwayLocationInfo.prototype.getBarCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckPutAwayLocationInfo} returns this
 */
proto.location.CheckPutAwayLocationInfo.prototype.setBarCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.location.CheckPutAwayLocationInfo.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckPutAwayLocationInfo} returns this
 */
proto.location.CheckPutAwayLocationInfo.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string att_production_id = 3;
 * @return {!Array<string>}
 */
proto.location.CheckPutAwayLocationInfo.prototype.getAttProductionIdList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.location.CheckPutAwayLocationInfo} returns this
 */
proto.location.CheckPutAwayLocationInfo.prototype.setAttProductionIdList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.location.CheckPutAwayLocationInfo} returns this
 */
proto.location.CheckPutAwayLocationInfo.prototype.addAttProductionId = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.location.CheckPutAwayLocationInfo} returns this
 */
proto.location.CheckPutAwayLocationInfo.prototype.clearAttProductionIdList = function() {
  return this.setAttProductionIdList([]);
};


/**
 * optional int64 entry_date = 4;
 * @return {number}
 */
proto.location.CheckPutAwayLocationInfo.prototype.getEntryDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.location.CheckPutAwayLocationInfo} returns this
 */
proto.location.CheckPutAwayLocationInfo.prototype.setEntryDate = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool is_auto = 5;
 * @return {boolean}
 */
proto.location.CheckPutAwayLocationInfo.prototype.getIsAuto = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.location.CheckPutAwayLocationInfo} returns this
 */
proto.location.CheckPutAwayLocationInfo.prototype.setIsAuto = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool is_anomaly = 6;
 * @return {boolean}
 */
proto.location.CheckPutAwayLocationInfo.prototype.getIsAnomaly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.location.CheckPutAwayLocationInfo} returns this
 */
proto.location.CheckPutAwayLocationInfo.prototype.setIsAnomaly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.location.CheckPutAwayLocationResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.CheckPutAwayLocationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.location.CheckPutAwayLocationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.CheckPutAwayLocationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.CheckPutAwayLocationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageerror: jspb.Message.getFieldWithDefault(msg, 1, ""),
    locationId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    location: (f = msg.getLocation()) && proto.location.LocationDTO.toObject(includeInstance, f),
    entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto_reserve_reserve_pb.Reserve.toObject, includeInstance),
    dataerror: jspb.Message.getFieldWithDefault(msg, 5, ""),
    isAnomaly: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.CheckPutAwayLocationResponse}
 */
proto.location.CheckPutAwayLocationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.CheckPutAwayLocationResponse;
  return proto.location.CheckPutAwayLocationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.CheckPutAwayLocationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.CheckPutAwayLocationResponse}
 */
proto.location.CheckPutAwayLocationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationId(value);
      break;
    case 3:
      var value = new proto.location.LocationDTO;
      reader.readMessage(value,proto.location.LocationDTO.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 4:
      var value = new proto_reserve_reserve_pb.Reserve;
      reader.readMessage(value,proto_reserve_reserve_pb.Reserve.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataerror(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAnomaly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.CheckPutAwayLocationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.CheckPutAwayLocationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.CheckPutAwayLocationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.CheckPutAwayLocationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLocationId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.location.LocationDTO.serializeBinaryToWriter
    );
  }
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto_reserve_reserve_pb.Reserve.serializeBinaryToWriter
    );
  }
  f = message.getDataerror();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIsAnomaly();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string messageError = 1;
 * @return {string}
 */
proto.location.CheckPutAwayLocationResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckPutAwayLocationResponse} returns this
 */
proto.location.CheckPutAwayLocationResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string location_id = 2;
 * @return {string}
 */
proto.location.CheckPutAwayLocationResponse.prototype.getLocationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckPutAwayLocationResponse} returns this
 */
proto.location.CheckPutAwayLocationResponse.prototype.setLocationId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional LocationDTO location = 3;
 * @return {?proto.location.LocationDTO}
 */
proto.location.CheckPutAwayLocationResponse.prototype.getLocation = function() {
  return /** @type{?proto.location.LocationDTO} */ (
    jspb.Message.getWrapperField(this, proto.location.LocationDTO, 3));
};


/**
 * @param {?proto.location.LocationDTO|undefined} value
 * @return {!proto.location.CheckPutAwayLocationResponse} returns this
*/
proto.location.CheckPutAwayLocationResponse.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.location.CheckPutAwayLocationResponse} returns this
 */
proto.location.CheckPutAwayLocationResponse.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.location.CheckPutAwayLocationResponse.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated reserve.Reserve entry = 4;
 * @return {!Array<!proto.reserve.Reserve>}
 */
proto.location.CheckPutAwayLocationResponse.prototype.getEntryList = function() {
  return /** @type{!Array<!proto.reserve.Reserve>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_reserve_reserve_pb.Reserve, 4));
};


/**
 * @param {!Array<!proto.reserve.Reserve>} value
 * @return {!proto.location.CheckPutAwayLocationResponse} returns this
*/
proto.location.CheckPutAwayLocationResponse.prototype.setEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.reserve.Reserve=} opt_value
 * @param {number=} opt_index
 * @return {!proto.reserve.Reserve}
 */
proto.location.CheckPutAwayLocationResponse.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.reserve.Reserve, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.location.CheckPutAwayLocationResponse} returns this
 */
proto.location.CheckPutAwayLocationResponse.prototype.clearEntryList = function() {
  return this.setEntryList([]);
};


/**
 * optional string dataError = 5;
 * @return {string}
 */
proto.location.CheckPutAwayLocationResponse.prototype.getDataerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckPutAwayLocationResponse} returns this
 */
proto.location.CheckPutAwayLocationResponse.prototype.setDataerror = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool is_anomaly = 6;
 * @return {boolean}
 */
proto.location.CheckPutAwayLocationResponse.prototype.getIsAnomaly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.location.CheckPutAwayLocationResponse} returns this
 */
proto.location.CheckPutAwayLocationResponse.prototype.setIsAnomaly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.LocationDTO.prototype.toObject = function(opt_includeInstance) {
  return proto.location.LocationDTO.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.LocationDTO} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.LocationDTO.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    zoneId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    aisle: jspb.Message.getFieldWithDefault(msg, 4, ""),
    bay: jspb.Message.getFieldWithDefault(msg, 5, ""),
    zoneCode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    level: jspb.Message.getFieldWithDefault(msg, 7, 0),
    entryBlock: jspb.Message.getFieldWithDefault(msg, 8, ""),
    code: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.LocationDTO}
 */
proto.location.LocationDTO.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.LocationDTO;
  return proto.location.LocationDTO.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.LocationDTO} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.LocationDTO}
 */
proto.location.LocationDTO.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setZoneId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAisle(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBay(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setZoneCode(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLevel(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntryBlock(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.LocationDTO.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.LocationDTO.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.LocationDTO} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.LocationDTO.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getZoneId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAisle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBay();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getZoneCode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLevel();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getEntryBlock();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.location.LocationDTO.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.LocationDTO} returns this
 */
proto.location.LocationDTO.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string zone_id = 2;
 * @return {string}
 */
proto.location.LocationDTO.prototype.getZoneId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.LocationDTO} returns this
 */
proto.location.LocationDTO.prototype.setZoneId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string aisle = 4;
 * @return {string}
 */
proto.location.LocationDTO.prototype.getAisle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.LocationDTO} returns this
 */
proto.location.LocationDTO.prototype.setAisle = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string bay = 5;
 * @return {string}
 */
proto.location.LocationDTO.prototype.getBay = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.LocationDTO} returns this
 */
proto.location.LocationDTO.prototype.setBay = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string zone_code = 6;
 * @return {string}
 */
proto.location.LocationDTO.prototype.getZoneCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.LocationDTO} returns this
 */
proto.location.LocationDTO.prototype.setZoneCode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 level = 7;
 * @return {number}
 */
proto.location.LocationDTO.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.location.LocationDTO} returns this
 */
proto.location.LocationDTO.prototype.setLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string entry_block = 8;
 * @return {string}
 */
proto.location.LocationDTO.prototype.getEntryBlock = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.LocationDTO} returns this
 */
proto.location.LocationDTO.prototype.setEntryBlock = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string code = 9;
 * @return {string}
 */
proto.location.LocationDTO.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.LocationDTO} returns this
 */
proto.location.LocationDTO.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.CheckPreparationLocationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.location.CheckPreparationLocationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.CheckPreparationLocationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.CheckPreparationLocationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    barCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    articleId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    missionId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    sscc: jspb.Message.getFieldWithDefault(msg, 5, ""),
    reused: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    ssccHost: jspb.Message.getFieldWithDefault(msg, 7, ""),
    quantity: jspb.Message.getFieldWithDefault(msg, 8, 0),
    isAcceptOverHeight: jspb.Message.getBooleanFieldWithDefault(msg, 9, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.CheckPreparationLocationRequest}
 */
proto.location.CheckPreparationLocationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.CheckPreparationLocationRequest;
  return proto.location.CheckPreparationLocationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.CheckPreparationLocationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.CheckPreparationLocationRequest}
 */
proto.location.CheckPreparationLocationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setArticleId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMissionId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSscc(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReused(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSsccHost(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQuantity(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAcceptOverHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.CheckPreparationLocationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.CheckPreparationLocationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.CheckPreparationLocationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.CheckPreparationLocationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBarCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getArticleId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMissionId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSscc();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getReused();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getSsccHost();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getIsAcceptOverHeight();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
};


/**
 * optional string bar_code = 1;
 * @return {string}
 */
proto.location.CheckPreparationLocationRequest.prototype.getBarCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckPreparationLocationRequest} returns this
 */
proto.location.CheckPreparationLocationRequest.prototype.setBarCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.location.CheckPreparationLocationRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckPreparationLocationRequest} returns this
 */
proto.location.CheckPreparationLocationRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string article_id = 3;
 * @return {string}
 */
proto.location.CheckPreparationLocationRequest.prototype.getArticleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckPreparationLocationRequest} returns this
 */
proto.location.CheckPreparationLocationRequest.prototype.setArticleId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string mission_id = 4;
 * @return {string}
 */
proto.location.CheckPreparationLocationRequest.prototype.getMissionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckPreparationLocationRequest} returns this
 */
proto.location.CheckPreparationLocationRequest.prototype.setMissionId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string sscc = 5;
 * @return {string}
 */
proto.location.CheckPreparationLocationRequest.prototype.getSscc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckPreparationLocationRequest} returns this
 */
proto.location.CheckPreparationLocationRequest.prototype.setSscc = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool reused = 6;
 * @return {boolean}
 */
proto.location.CheckPreparationLocationRequest.prototype.getReused = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.location.CheckPreparationLocationRequest} returns this
 */
proto.location.CheckPreparationLocationRequest.prototype.setReused = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string sscc_host = 7;
 * @return {string}
 */
proto.location.CheckPreparationLocationRequest.prototype.getSsccHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckPreparationLocationRequest} returns this
 */
proto.location.CheckPreparationLocationRequest.prototype.setSsccHost = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int64 quantity = 8;
 * @return {number}
 */
proto.location.CheckPreparationLocationRequest.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.location.CheckPreparationLocationRequest} returns this
 */
proto.location.CheckPreparationLocationRequest.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bool is_accept_over_height = 9;
 * @return {boolean}
 */
proto.location.CheckPreparationLocationRequest.prototype.getIsAcceptOverHeight = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.location.CheckPreparationLocationRequest} returns this
 */
proto.location.CheckPreparationLocationRequest.prototype.setIsAcceptOverHeight = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.location.CheckPreparationLocationResponse.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.CheckPreparationLocationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.location.CheckPreparationLocationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.CheckPreparationLocationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.CheckPreparationLocationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageerror: jspb.Message.getFieldWithDefault(msg, 1, ""),
    locationId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    isValid: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    isScanNext: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    isLastMission: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    isFirstMissionInDay: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    comArticleList: jspb.Message.toObjectList(msg.getComArticleList(),
    proto_comarticle_comarticle_pb.ComArticle.toObject, includeInstance),
    location: (f = msg.getLocation()) && proto_attendu_attendu_pb.LocationDTO.toObject(includeInstance, f),
    isOverHeight: jspb.Message.getBooleanFieldWithDefault(msg, 9, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.CheckPreparationLocationResponse}
 */
proto.location.CheckPreparationLocationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.CheckPreparationLocationResponse;
  return proto.location.CheckPreparationLocationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.CheckPreparationLocationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.CheckPreparationLocationResponse}
 */
proto.location.CheckPreparationLocationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsValid(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsScanNext(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsLastMission(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsFirstMissionInDay(value);
      break;
    case 7:
      var value = new proto_comarticle_comarticle_pb.ComArticle;
      reader.readMessage(value,proto_comarticle_comarticle_pb.ComArticle.deserializeBinaryFromReader);
      msg.addComArticle(value);
      break;
    case 8:
      var value = new proto_attendu_attendu_pb.LocationDTO;
      reader.readMessage(value,proto_attendu_attendu_pb.LocationDTO.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsOverHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.CheckPreparationLocationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.CheckPreparationLocationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.CheckPreparationLocationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.CheckPreparationLocationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLocationId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsValid();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getIsScanNext();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getIsLastMission();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getIsFirstMissionInDay();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getComArticleList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto_comarticle_comarticle_pb.ComArticle.serializeBinaryToWriter
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto_attendu_attendu_pb.LocationDTO.serializeBinaryToWriter
    );
  }
  f = message.getIsOverHeight();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
};


/**
 * optional string messageError = 1;
 * @return {string}
 */
proto.location.CheckPreparationLocationResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckPreparationLocationResponse} returns this
 */
proto.location.CheckPreparationLocationResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string location_id = 2;
 * @return {string}
 */
proto.location.CheckPreparationLocationResponse.prototype.getLocationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckPreparationLocationResponse} returns this
 */
proto.location.CheckPreparationLocationResponse.prototype.setLocationId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool is_valid = 3;
 * @return {boolean}
 */
proto.location.CheckPreparationLocationResponse.prototype.getIsValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.location.CheckPreparationLocationResponse} returns this
 */
proto.location.CheckPreparationLocationResponse.prototype.setIsValid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool is_scan_next = 4;
 * @return {boolean}
 */
proto.location.CheckPreparationLocationResponse.prototype.getIsScanNext = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.location.CheckPreparationLocationResponse} returns this
 */
proto.location.CheckPreparationLocationResponse.prototype.setIsScanNext = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool is_last_mission = 5;
 * @return {boolean}
 */
proto.location.CheckPreparationLocationResponse.prototype.getIsLastMission = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.location.CheckPreparationLocationResponse} returns this
 */
proto.location.CheckPreparationLocationResponse.prototype.setIsLastMission = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool is_first_mission_in_day = 6;
 * @return {boolean}
 */
proto.location.CheckPreparationLocationResponse.prototype.getIsFirstMissionInDay = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.location.CheckPreparationLocationResponse} returns this
 */
proto.location.CheckPreparationLocationResponse.prototype.setIsFirstMissionInDay = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * repeated comarticle.ComArticle com_article = 7;
 * @return {!Array<!proto.comarticle.ComArticle>}
 */
proto.location.CheckPreparationLocationResponse.prototype.getComArticleList = function() {
  return /** @type{!Array<!proto.comarticle.ComArticle>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_comarticle_comarticle_pb.ComArticle, 7));
};


/**
 * @param {!Array<!proto.comarticle.ComArticle>} value
 * @return {!proto.location.CheckPreparationLocationResponse} returns this
*/
proto.location.CheckPreparationLocationResponse.prototype.setComArticleList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.comarticle.ComArticle=} opt_value
 * @param {number=} opt_index
 * @return {!proto.comarticle.ComArticle}
 */
proto.location.CheckPreparationLocationResponse.prototype.addComArticle = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.comarticle.ComArticle, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.location.CheckPreparationLocationResponse} returns this
 */
proto.location.CheckPreparationLocationResponse.prototype.clearComArticleList = function() {
  return this.setComArticleList([]);
};


/**
 * optional attendu.LocationDTO location = 8;
 * @return {?proto.attendu.LocationDTO}
 */
proto.location.CheckPreparationLocationResponse.prototype.getLocation = function() {
  return /** @type{?proto.attendu.LocationDTO} */ (
    jspb.Message.getWrapperField(this, proto_attendu_attendu_pb.LocationDTO, 8));
};


/**
 * @param {?proto.attendu.LocationDTO|undefined} value
 * @return {!proto.location.CheckPreparationLocationResponse} returns this
*/
proto.location.CheckPreparationLocationResponse.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.location.CheckPreparationLocationResponse} returns this
 */
proto.location.CheckPreparationLocationResponse.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.location.CheckPreparationLocationResponse.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool is_over_height = 9;
 * @return {boolean}
 */
proto.location.CheckPreparationLocationResponse.prototype.getIsOverHeight = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.location.CheckPreparationLocationResponse} returns this
 */
proto.location.CheckPreparationLocationResponse.prototype.setIsOverHeight = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.CheckMovementLocationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.location.CheckMovementLocationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.CheckMovementLocationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.CheckMovementLocationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    barCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sscc: jspb.Message.getFieldWithDefault(msg, 3, ""),
    missionId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    isAuto: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.CheckMovementLocationRequest}
 */
proto.location.CheckMovementLocationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.CheckMovementLocationRequest;
  return proto.location.CheckMovementLocationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.CheckMovementLocationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.CheckMovementLocationRequest}
 */
proto.location.CheckMovementLocationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSscc(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMissionId(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAuto(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.CheckMovementLocationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.CheckMovementLocationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.CheckMovementLocationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.CheckMovementLocationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBarCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSscc();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMissionId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIsAuto();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string bar_code = 1;
 * @return {string}
 */
proto.location.CheckMovementLocationRequest.prototype.getBarCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckMovementLocationRequest} returns this
 */
proto.location.CheckMovementLocationRequest.prototype.setBarCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.location.CheckMovementLocationRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckMovementLocationRequest} returns this
 */
proto.location.CheckMovementLocationRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string sscc = 3;
 * @return {string}
 */
proto.location.CheckMovementLocationRequest.prototype.getSscc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckMovementLocationRequest} returns this
 */
proto.location.CheckMovementLocationRequest.prototype.setSscc = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string mission_id = 4;
 * @return {string}
 */
proto.location.CheckMovementLocationRequest.prototype.getMissionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckMovementLocationRequest} returns this
 */
proto.location.CheckMovementLocationRequest.prototype.setMissionId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool is_auto = 5;
 * @return {boolean}
 */
proto.location.CheckMovementLocationRequest.prototype.getIsAuto = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.location.CheckMovementLocationRequest} returns this
 */
proto.location.CheckMovementLocationRequest.prototype.setIsAuto = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.CheckMovementLocationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.location.CheckMovementLocationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.CheckMovementLocationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.CheckMovementLocationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageError: jspb.Message.getFieldWithDefault(msg, 1, ""),
    locationId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.CheckMovementLocationResponse}
 */
proto.location.CheckMovementLocationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.CheckMovementLocationResponse;
  return proto.location.CheckMovementLocationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.CheckMovementLocationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.CheckMovementLocationResponse}
 */
proto.location.CheckMovementLocationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageError(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.CheckMovementLocationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.CheckMovementLocationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.CheckMovementLocationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.CheckMovementLocationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageError();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLocationId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string message_error = 1;
 * @return {string}
 */
proto.location.CheckMovementLocationResponse.prototype.getMessageError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckMovementLocationResponse} returns this
 */
proto.location.CheckMovementLocationResponse.prototype.setMessageError = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string location_id = 2;
 * @return {string}
 */
proto.location.CheckMovementLocationResponse.prototype.getLocationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckMovementLocationResponse} returns this
 */
proto.location.CheckMovementLocationResponse.prototype.setLocationId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.CheckReapproRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.location.CheckReapproRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.CheckReapproRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.CheckReapproRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    barCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sscc: jspb.Message.getFieldWithDefault(msg, 3, ""),
    missionId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.CheckReapproRequest}
 */
proto.location.CheckReapproRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.CheckReapproRequest;
  return proto.location.CheckReapproRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.CheckReapproRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.CheckReapproRequest}
 */
proto.location.CheckReapproRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSscc(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMissionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.CheckReapproRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.CheckReapproRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.CheckReapproRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.CheckReapproRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBarCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSscc();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMissionId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string bar_code = 1;
 * @return {string}
 */
proto.location.CheckReapproRequest.prototype.getBarCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckReapproRequest} returns this
 */
proto.location.CheckReapproRequest.prototype.setBarCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.location.CheckReapproRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckReapproRequest} returns this
 */
proto.location.CheckReapproRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string sscc = 3;
 * @return {string}
 */
proto.location.CheckReapproRequest.prototype.getSscc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckReapproRequest} returns this
 */
proto.location.CheckReapproRequest.prototype.setSscc = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string mission_id = 4;
 * @return {string}
 */
proto.location.CheckReapproRequest.prototype.getMissionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckReapproRequest} returns this
 */
proto.location.CheckReapproRequest.prototype.setMissionId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.CheckReapproResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.location.CheckReapproResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.CheckReapproResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.CheckReapproResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageerror: jspb.Message.getFieldWithDefault(msg, 1, ""),
    isValid: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.CheckReapproResponse}
 */
proto.location.CheckReapproResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.CheckReapproResponse;
  return proto.location.CheckReapproResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.CheckReapproResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.CheckReapproResponse}
 */
proto.location.CheckReapproResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsValid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.CheckReapproResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.CheckReapproResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.CheckReapproResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.CheckReapproResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsValid();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string messageError = 1;
 * @return {string}
 */
proto.location.CheckReapproResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckReapproResponse} returns this
 */
proto.location.CheckReapproResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool is_valid = 2;
 * @return {boolean}
 */
proto.location.CheckReapproResponse.prototype.getIsValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.location.CheckReapproResponse} returns this
 */
proto.location.CheckReapproResponse.prototype.setIsValid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.location.SuggestLocationRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.SuggestLocationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.location.SuggestLocationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.SuggestLocationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.SuggestLocationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ssccsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    refuseLocId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    isRefresh: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    isBlockSuggest: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    isAnomaly: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.SuggestLocationRequest}
 */
proto.location.SuggestLocationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.SuggestLocationRequest;
  return proto.location.SuggestLocationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.SuggestLocationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.SuggestLocationRequest}
 */
proto.location.SuggestLocationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addSsccs(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRefuseLocId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRefresh(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsBlockSuggest(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAnomaly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.SuggestLocationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.SuggestLocationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.SuggestLocationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.SuggestLocationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSsccsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getRefuseLocId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsRefresh();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getIsBlockSuggest();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getIsAnomaly();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * repeated string ssccs = 1;
 * @return {!Array<string>}
 */
proto.location.SuggestLocationRequest.prototype.getSsccsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.location.SuggestLocationRequest} returns this
 */
proto.location.SuggestLocationRequest.prototype.setSsccsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.location.SuggestLocationRequest} returns this
 */
proto.location.SuggestLocationRequest.prototype.addSsccs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.location.SuggestLocationRequest} returns this
 */
proto.location.SuggestLocationRequest.prototype.clearSsccsList = function() {
  return this.setSsccsList([]);
};


/**
 * optional string refuse_loc_id = 2;
 * @return {string}
 */
proto.location.SuggestLocationRequest.prototype.getRefuseLocId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.SuggestLocationRequest} returns this
 */
proto.location.SuggestLocationRequest.prototype.setRefuseLocId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool is_refresh = 3;
 * @return {boolean}
 */
proto.location.SuggestLocationRequest.prototype.getIsRefresh = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.location.SuggestLocationRequest} returns this
 */
proto.location.SuggestLocationRequest.prototype.setIsRefresh = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool is_block_suggest = 4;
 * @return {boolean}
 */
proto.location.SuggestLocationRequest.prototype.getIsBlockSuggest = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.location.SuggestLocationRequest} returns this
 */
proto.location.SuggestLocationRequest.prototype.setIsBlockSuggest = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool is_anomaly = 5;
 * @return {boolean}
 */
proto.location.SuggestLocationRequest.prototype.getIsAnomaly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.location.SuggestLocationRequest} returns this
 */
proto.location.SuggestLocationRequest.prototype.setIsAnomaly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.SuggestLocationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.location.SuggestLocationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.SuggestLocationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.SuggestLocationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageerror: jspb.Message.getFieldWithDefault(msg, 1, ""),
    locationId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    codeBar: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isValid: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.SuggestLocationResponse}
 */
proto.location.SuggestLocationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.SuggestLocationResponse;
  return proto.location.SuggestLocationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.SuggestLocationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.SuggestLocationResponse}
 */
proto.location.SuggestLocationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodeBar(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsValid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.SuggestLocationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.SuggestLocationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.SuggestLocationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.SuggestLocationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLocationId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCodeBar();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsValid();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string messageError = 1;
 * @return {string}
 */
proto.location.SuggestLocationResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.SuggestLocationResponse} returns this
 */
proto.location.SuggestLocationResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string location_id = 2;
 * @return {string}
 */
proto.location.SuggestLocationResponse.prototype.getLocationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.SuggestLocationResponse} returns this
 */
proto.location.SuggestLocationResponse.prototype.setLocationId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string code_bar = 3;
 * @return {string}
 */
proto.location.SuggestLocationResponse.prototype.getCodeBar = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.SuggestLocationResponse} returns this
 */
proto.location.SuggestLocationResponse.prototype.setCodeBar = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool is_valid = 4;
 * @return {boolean}
 */
proto.location.SuggestLocationResponse.prototype.getIsValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.location.SuggestLocationResponse} returns this
 */
proto.location.SuggestLocationResponse.prototype.setIsValid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.LocationMovement.prototype.toObject = function(opt_includeInstance) {
  return proto.location.LocationMovement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.LocationMovement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.LocationMovement.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    storageType: jspb.Message.getFieldWithDefault(msg, 3, ""),
    storageFunc: jspb.Message.getFieldWithDefault(msg, 4, ""),
    zoneId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    aisle: jspb.Message.getFieldWithDefault(msg, 6, ""),
    bay: jspb.Message.getFieldWithDefault(msg, 7, ""),
    width: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    height: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    length: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    entryBlock: jspb.Message.getFieldWithDefault(msg, 11, ""),
    conditionement: jspb.Message.getFieldWithDefault(msg, 12, ""),
    maxHeight: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
    maxWeight: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
    minHeight: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, 0.0),
    level: jspb.Message.getFieldWithDefault(msg, 16, 0),
    debut: jspb.Message.getFloatingPointFieldWithDefault(msg, 17, 0.0),
    fin: jspb.Message.getFloatingPointFieldWithDefault(msg, 18, 0.0),
    locationType: jspb.Message.getFieldWithDefault(msg, 19, ""),
    code: jspb.Message.getFieldWithDefault(msg, 20, ""),
    parentId: jspb.Message.getFieldWithDefault(msg, 21, ""),
    zoneCode: jspb.Message.getFieldWithDefault(msg, 22, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.LocationMovement}
 */
proto.location.LocationMovement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.LocationMovement;
  return proto.location.LocationMovement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.LocationMovement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.LocationMovement}
 */
proto.location.LocationMovement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorageType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorageFunc(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setZoneId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAisle(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBay(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setWidth(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHeight(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLength(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntryBlock(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setConditionement(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxHeight(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxWeight(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMinHeight(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLevel(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDebut(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFin(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationType(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentId(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setZoneCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.LocationMovement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.LocationMovement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.LocationMovement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.LocationMovement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStorageType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStorageFunc();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getZoneId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAisle();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getBay();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getLength();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getEntryBlock();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getConditionement();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getMaxHeight();
  if (f !== 0.0) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = message.getMaxWeight();
  if (f !== 0.0) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = message.getMinHeight();
  if (f !== 0.0) {
    writer.writeDouble(
      15,
      f
    );
  }
  f = message.getLevel();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getDebut();
  if (f !== 0.0) {
    writer.writeDouble(
      17,
      f
    );
  }
  f = message.getFin();
  if (f !== 0.0) {
    writer.writeDouble(
      18,
      f
    );
  }
  f = message.getLocationType();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getParentId();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getZoneCode();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.location.LocationMovement.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.LocationMovement} returns this
 */
proto.location.LocationMovement.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.location.LocationMovement.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.LocationMovement} returns this
 */
proto.location.LocationMovement.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string storage_type = 3;
 * @return {string}
 */
proto.location.LocationMovement.prototype.getStorageType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.LocationMovement} returns this
 */
proto.location.LocationMovement.prototype.setStorageType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string storage_func = 4;
 * @return {string}
 */
proto.location.LocationMovement.prototype.getStorageFunc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.LocationMovement} returns this
 */
proto.location.LocationMovement.prototype.setStorageFunc = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string zone_id = 5;
 * @return {string}
 */
proto.location.LocationMovement.prototype.getZoneId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.LocationMovement} returns this
 */
proto.location.LocationMovement.prototype.setZoneId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string aisle = 6;
 * @return {string}
 */
proto.location.LocationMovement.prototype.getAisle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.LocationMovement} returns this
 */
proto.location.LocationMovement.prototype.setAisle = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string bay = 7;
 * @return {string}
 */
proto.location.LocationMovement.prototype.getBay = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.LocationMovement} returns this
 */
proto.location.LocationMovement.prototype.setBay = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional double width = 8;
 * @return {number}
 */
proto.location.LocationMovement.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.location.LocationMovement} returns this
 */
proto.location.LocationMovement.prototype.setWidth = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double height = 9;
 * @return {number}
 */
proto.location.LocationMovement.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.location.LocationMovement} returns this
 */
proto.location.LocationMovement.prototype.setHeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional double length = 10;
 * @return {number}
 */
proto.location.LocationMovement.prototype.getLength = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.location.LocationMovement} returns this
 */
proto.location.LocationMovement.prototype.setLength = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional string entry_block = 11;
 * @return {string}
 */
proto.location.LocationMovement.prototype.getEntryBlock = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.LocationMovement} returns this
 */
proto.location.LocationMovement.prototype.setEntryBlock = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string conditionement = 12;
 * @return {string}
 */
proto.location.LocationMovement.prototype.getConditionement = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.LocationMovement} returns this
 */
proto.location.LocationMovement.prototype.setConditionement = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional double max_height = 13;
 * @return {number}
 */
proto.location.LocationMovement.prototype.getMaxHeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.location.LocationMovement} returns this
 */
proto.location.LocationMovement.prototype.setMaxHeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional double max_weight = 14;
 * @return {number}
 */
proto.location.LocationMovement.prototype.getMaxWeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.location.LocationMovement} returns this
 */
proto.location.LocationMovement.prototype.setMaxWeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional double min_height = 15;
 * @return {number}
 */
proto.location.LocationMovement.prototype.getMinHeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.location.LocationMovement} returns this
 */
proto.location.LocationMovement.prototype.setMinHeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional int32 level = 16;
 * @return {number}
 */
proto.location.LocationMovement.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.location.LocationMovement} returns this
 */
proto.location.LocationMovement.prototype.setLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional double debut = 17;
 * @return {number}
 */
proto.location.LocationMovement.prototype.getDebut = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.location.LocationMovement} returns this
 */
proto.location.LocationMovement.prototype.setDebut = function(value) {
  return jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional double fin = 18;
 * @return {number}
 */
proto.location.LocationMovement.prototype.getFin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 18, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.location.LocationMovement} returns this
 */
proto.location.LocationMovement.prototype.setFin = function(value) {
  return jspb.Message.setProto3FloatField(this, 18, value);
};


/**
 * optional string location_type = 19;
 * @return {string}
 */
proto.location.LocationMovement.prototype.getLocationType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.LocationMovement} returns this
 */
proto.location.LocationMovement.prototype.setLocationType = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string code = 20;
 * @return {string}
 */
proto.location.LocationMovement.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.LocationMovement} returns this
 */
proto.location.LocationMovement.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string parent_id = 21;
 * @return {string}
 */
proto.location.LocationMovement.prototype.getParentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.LocationMovement} returns this
 */
proto.location.LocationMovement.prototype.setParentId = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string zone_code = 22;
 * @return {string}
 */
proto.location.LocationMovement.prototype.getZoneCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.LocationMovement} returns this
 */
proto.location.LocationMovement.prototype.setZoneCode = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.GetListLocationForMovementRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.location.GetListLocationForMovementRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.GetListLocationForMovementRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.GetListLocationForMovementRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    stockId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sscc: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.GetListLocationForMovementRequest}
 */
proto.location.GetListLocationForMovementRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.GetListLocationForMovementRequest;
  return proto.location.GetListLocationForMovementRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.GetListLocationForMovementRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.GetListLocationForMovementRequest}
 */
proto.location.GetListLocationForMovementRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStockId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSscc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.GetListLocationForMovementRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.GetListLocationForMovementRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.GetListLocationForMovementRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.GetListLocationForMovementRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStockId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSscc();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string stock_id = 1;
 * @return {string}
 */
proto.location.GetListLocationForMovementRequest.prototype.getStockId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.GetListLocationForMovementRequest} returns this
 */
proto.location.GetListLocationForMovementRequest.prototype.setStockId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sscc = 2;
 * @return {string}
 */
proto.location.GetListLocationForMovementRequest.prototype.getSscc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.GetListLocationForMovementRequest} returns this
 */
proto.location.GetListLocationForMovementRequest.prototype.setSscc = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.location.GetListLocationForMovementResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.GetListLocationForMovementResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.location.GetListLocationForMovementResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.GetListLocationForMovementResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.GetListLocationForMovementResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    locationInfoList: jspb.Message.toObjectList(msg.getLocationInfoList(),
    proto.location.LocationMovement.toObject, includeInstance),
    messageError: jspb.Message.getFieldWithDefault(msg, 2, ""),
    status: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.GetListLocationForMovementResponse}
 */
proto.location.GetListLocationForMovementResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.GetListLocationForMovementResponse;
  return proto.location.GetListLocationForMovementResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.GetListLocationForMovementResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.GetListLocationForMovementResponse}
 */
proto.location.GetListLocationForMovementResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.location.LocationMovement;
      reader.readMessage(value,proto.location.LocationMovement.deserializeBinaryFromReader);
      msg.addLocationInfo(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageError(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.GetListLocationForMovementResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.GetListLocationForMovementResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.GetListLocationForMovementResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.GetListLocationForMovementResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocationInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.location.LocationMovement.serializeBinaryToWriter
    );
  }
  f = message.getMessageError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated LocationMovement location_info = 1;
 * @return {!Array<!proto.location.LocationMovement>}
 */
proto.location.GetListLocationForMovementResponse.prototype.getLocationInfoList = function() {
  return /** @type{!Array<!proto.location.LocationMovement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.location.LocationMovement, 1));
};


/**
 * @param {!Array<!proto.location.LocationMovement>} value
 * @return {!proto.location.GetListLocationForMovementResponse} returns this
*/
proto.location.GetListLocationForMovementResponse.prototype.setLocationInfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.location.LocationMovement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.location.LocationMovement}
 */
proto.location.GetListLocationForMovementResponse.prototype.addLocationInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.location.LocationMovement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.location.GetListLocationForMovementResponse} returns this
 */
proto.location.GetListLocationForMovementResponse.prototype.clearLocationInfoList = function() {
  return this.setLocationInfoList([]);
};


/**
 * optional string message_error = 2;
 * @return {string}
 */
proto.location.GetListLocationForMovementResponse.prototype.getMessageError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.GetListLocationForMovementResponse} returns this
 */
proto.location.GetListLocationForMovementResponse.prototype.setMessageError = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string status = 3;
 * @return {string}
 */
proto.location.GetListLocationForMovementResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.GetListLocationForMovementResponse} returns this
 */
proto.location.GetListLocationForMovementResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.ValidLocationForMovementRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.location.ValidLocationForMovementRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.ValidLocationForMovementRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.ValidLocationForMovementRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    stockId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sscc: jspb.Message.getFieldWithDefault(msg, 2, ""),
    destinationLocationId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    barCode: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.ValidLocationForMovementRequest}
 */
proto.location.ValidLocationForMovementRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.ValidLocationForMovementRequest;
  return proto.location.ValidLocationForMovementRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.ValidLocationForMovementRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.ValidLocationForMovementRequest}
 */
proto.location.ValidLocationForMovementRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStockId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSscc(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationLocationId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.ValidLocationForMovementRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.ValidLocationForMovementRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.ValidLocationForMovementRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.ValidLocationForMovementRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStockId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSscc();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDestinationLocationId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBarCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string stock_id = 1;
 * @return {string}
 */
proto.location.ValidLocationForMovementRequest.prototype.getStockId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.ValidLocationForMovementRequest} returns this
 */
proto.location.ValidLocationForMovementRequest.prototype.setStockId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sscc = 2;
 * @return {string}
 */
proto.location.ValidLocationForMovementRequest.prototype.getSscc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.ValidLocationForMovementRequest} returns this
 */
proto.location.ValidLocationForMovementRequest.prototype.setSscc = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string destination_location_id = 3;
 * @return {string}
 */
proto.location.ValidLocationForMovementRequest.prototype.getDestinationLocationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.ValidLocationForMovementRequest} returns this
 */
proto.location.ValidLocationForMovementRequest.prototype.setDestinationLocationId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string bar_code = 4;
 * @return {string}
 */
proto.location.ValidLocationForMovementRequest.prototype.getBarCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.ValidLocationForMovementRequest} returns this
 */
proto.location.ValidLocationForMovementRequest.prototype.setBarCode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.ValidLocationForMovementResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.location.ValidLocationForMovementResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.ValidLocationForMovementResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.ValidLocationForMovementResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageError: jspb.Message.getFieldWithDefault(msg, 1, ""),
    locationId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.ValidLocationForMovementResponse}
 */
proto.location.ValidLocationForMovementResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.ValidLocationForMovementResponse;
  return proto.location.ValidLocationForMovementResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.ValidLocationForMovementResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.ValidLocationForMovementResponse}
 */
proto.location.ValidLocationForMovementResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageError(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.ValidLocationForMovementResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.ValidLocationForMovementResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.ValidLocationForMovementResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.ValidLocationForMovementResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageError();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLocationId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string message_error = 1;
 * @return {string}
 */
proto.location.ValidLocationForMovementResponse.prototype.getMessageError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.ValidLocationForMovementResponse} returns this
 */
proto.location.ValidLocationForMovementResponse.prototype.setMessageError = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string location_id = 2;
 * @return {string}
 */
proto.location.ValidLocationForMovementResponse.prototype.getLocationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.ValidLocationForMovementResponse} returns this
 */
proto.location.ValidLocationForMovementResponse.prototype.setLocationId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.CheckCanDeleteLocationByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.location.CheckCanDeleteLocationByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.CheckCanDeleteLocationByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.CheckCanDeleteLocationByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    locationId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.CheckCanDeleteLocationByIdRequest}
 */
proto.location.CheckCanDeleteLocationByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.CheckCanDeleteLocationByIdRequest;
  return proto.location.CheckCanDeleteLocationByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.CheckCanDeleteLocationByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.CheckCanDeleteLocationByIdRequest}
 */
proto.location.CheckCanDeleteLocationByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.CheckCanDeleteLocationByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.CheckCanDeleteLocationByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.CheckCanDeleteLocationByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.CheckCanDeleteLocationByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string location_id = 1;
 * @return {string}
 */
proto.location.CheckCanDeleteLocationByIdRequest.prototype.getLocationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckCanDeleteLocationByIdRequest} returns this
 */
proto.location.CheckCanDeleteLocationByIdRequest.prototype.setLocationId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.CheckCanDeleteLocationByIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.location.CheckCanDeleteLocationByIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.CheckCanDeleteLocationByIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.CheckCanDeleteLocationByIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageError: jspb.Message.getFieldWithDefault(msg, 1, ""),
    locationId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    isUsed: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.CheckCanDeleteLocationByIdResponse}
 */
proto.location.CheckCanDeleteLocationByIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.CheckCanDeleteLocationByIdResponse;
  return proto.location.CheckCanDeleteLocationByIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.CheckCanDeleteLocationByIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.CheckCanDeleteLocationByIdResponse}
 */
proto.location.CheckCanDeleteLocationByIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageError(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsUsed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.CheckCanDeleteLocationByIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.CheckCanDeleteLocationByIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.CheckCanDeleteLocationByIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.CheckCanDeleteLocationByIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageError();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLocationId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsUsed();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string message_error = 1;
 * @return {string}
 */
proto.location.CheckCanDeleteLocationByIdResponse.prototype.getMessageError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckCanDeleteLocationByIdResponse} returns this
 */
proto.location.CheckCanDeleteLocationByIdResponse.prototype.setMessageError = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string location_id = 2;
 * @return {string}
 */
proto.location.CheckCanDeleteLocationByIdResponse.prototype.getLocationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.CheckCanDeleteLocationByIdResponse} returns this
 */
proto.location.CheckCanDeleteLocationByIdResponse.prototype.setLocationId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool is_used = 3;
 * @return {boolean}
 */
proto.location.CheckCanDeleteLocationByIdResponse.prototype.getIsUsed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.location.CheckCanDeleteLocationByIdResponse} returns this
 */
proto.location.CheckCanDeleteLocationByIdResponse.prototype.setIsUsed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.ResetMovementRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.location.ResetMovementRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.ResetMovementRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.ResetMovementRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sscc: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.ResetMovementRequest}
 */
proto.location.ResetMovementRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.ResetMovementRequest;
  return proto.location.ResetMovementRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.ResetMovementRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.ResetMovementRequest}
 */
proto.location.ResetMovementRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSscc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.ResetMovementRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.ResetMovementRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.ResetMovementRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.ResetMovementRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSscc();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string sscc = 1;
 * @return {string}
 */
proto.location.ResetMovementRequest.prototype.getSscc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.ResetMovementRequest} returns this
 */
proto.location.ResetMovementRequest.prototype.setSscc = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.location.ResetMovementResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.location.ResetMovementResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.location.ResetMovementResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.ResetMovementResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageerror: jspb.Message.getFieldWithDefault(msg, 1, ""),
    isValid: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.location.ResetMovementResponse}
 */
proto.location.ResetMovementResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.location.ResetMovementResponse;
  return proto.location.ResetMovementResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.location.ResetMovementResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.location.ResetMovementResponse}
 */
proto.location.ResetMovementResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsValid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.location.ResetMovementResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.location.ResetMovementResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.location.ResetMovementResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.location.ResetMovementResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsValid();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string messageError = 1;
 * @return {string}
 */
proto.location.ResetMovementResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.location.ResetMovementResponse} returns this
 */
proto.location.ResetMovementResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool is_valid = 2;
 * @return {boolean}
 */
proto.location.ResetMovementResponse.prototype.getIsValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.location.ResetMovementResponse} returns this
 */
proto.location.ResetMovementResponse.prototype.setIsValid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


goog.object.extend(exports, proto.location);
