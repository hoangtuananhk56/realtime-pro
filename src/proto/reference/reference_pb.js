// source: proto/reference/reference.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var proto_conditionnement_conditionnement_pb = require('../../proto/conditionnement/conditionnement_pb.js');
goog.object.extend(proto, proto_conditionnement_conditionnement_pb);
var proto_specificites_specificites_pb = require('../../proto/specificites/specificites_pb.js');
goog.object.extend(proto, proto_specificites_specificites_pb);
var proto_lotreference_lotreference_pb = require('../../proto/lotreference/lotreference_pb.js');
goog.object.extend(proto, proto_lotreference_lotreference_pb);
var proto_stock_stock_pb = require('../../proto/stock/stock_pb.js');
goog.object.extend(proto, proto_stock_stock_pb);
var proto_export_export_pb = require('../../proto/export/export_pb.js');
goog.object.extend(proto, proto_export_export_pb);
goog.exportSymbol('proto.reference.AttenduForRefFourCreate', null, global);
goog.exportSymbol('proto.reference.CheckExistEanVarianteForConditonnametRequest', null, global);
goog.exportSymbol('proto.reference.CheckExistEanVarianteForConditonnametResponse', null, global);
goog.exportSymbol('proto.reference.CheckExistRefFourRequest', null, global);
goog.exportSymbol('proto.reference.CheckExistRefFourResponse', null, global);
goog.exportSymbol('proto.reference.Comment', null, global);
goog.exportSymbol('proto.reference.CreateReferenceRequest', null, global);
goog.exportSymbol('proto.reference.CreateReferenceResponse', null, global);
goog.exportSymbol('proto.reference.DeleteByIds', null, global);
goog.exportSymbol('proto.reference.DeleteRefByIdRequest', null, global);
goog.exportSymbol('proto.reference.DeleteRefByIdResponse', null, global);
goog.exportSymbol('proto.reference.DeleteRefFourReponse', null, global);
goog.exportSymbol('proto.reference.DeleteRefFourRequest', null, global);
goog.exportSymbol('proto.reference.GetAllReferenceRequest', null, global);
goog.exportSymbol('proto.reference.GetAllRequest', null, global);
goog.exportSymbol('proto.reference.GetAllResponse', null, global);
goog.exportSymbol('proto.reference.GetByDigit', null, global);
goog.exportSymbol('proto.reference.GetByIdRequest', null, global);
goog.exportSymbol('proto.reference.GetByNomRefDigitRequest', null, global);
goog.exportSymbol('proto.reference.GetByNumRequest', null, global);
goog.exportSymbol('proto.reference.GetByRefFourDitgitResponse', null, global);
goog.exportSymbol('proto.reference.GetHistoryByIdRequest', null, global);
goog.exportSymbol('proto.reference.GetHistoryByIdResponse', null, global);
goog.exportSymbol('proto.reference.GetRefFourByNomRequest', null, global);
goog.exportSymbol('proto.reference.HistoryChange', null, global);
goog.exportSymbol('proto.reference.ICPE', null, global);
goog.exportSymbol('proto.reference.Matieresdangereuses', null, global);
goog.exportSymbol('proto.reference.MetaData', null, global);
goog.exportSymbol('proto.reference.Photo', null, global);
goog.exportSymbol('proto.reference.RefFourCreateRequest', null, global);
goog.exportSymbol('proto.reference.RefFourCreateResponse', null, global);
goog.exportSymbol('proto.reference.RefFournissers', null, global);
goog.exportSymbol('proto.reference.RefHistory', null, global);
goog.exportSymbol('proto.reference.Reference', null, global);
goog.exportSymbol('proto.reference.ReferenceProduct', null, global);
goog.exportSymbol('proto.reference.UpdateBlockLotRequest', null, global);
goog.exportSymbol('proto.reference.UpdateBlockLotResponse', null, global);
goog.exportSymbol('proto.reference.UpdateReferenceRequest', null, global);
goog.exportSymbol('proto.reference.UpdateReferenceResponse', null, global);
goog.exportSymbol('proto.reference.ValidDeleteRequest', null, global);
goog.exportSymbol('proto.reference.ValidDeleteResponse', null, global);
goog.exportSymbol('proto.reference.ValidateRefFourReponse', null, global);
goog.exportSymbol('proto.reference.ValidateRefFourRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.Reference = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.reference.Reference.repeatedFields_, null);
};
goog.inherits(proto.reference.Reference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.Reference.displayName = 'proto.reference.Reference';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.Comment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.Comment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.Comment.displayName = 'proto.reference.Comment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.RefFournissers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.RefFournissers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.RefFournissers.displayName = 'proto.reference.RefFournissers';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.Matieresdangereuses = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.Matieresdangereuses, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.Matieresdangereuses.displayName = 'proto.reference.Matieresdangereuses';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.ICPE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.ICPE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.ICPE.displayName = 'proto.reference.ICPE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.Photo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.Photo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.Photo.displayName = 'proto.reference.Photo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.CreateReferenceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.CreateReferenceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.CreateReferenceRequest.displayName = 'proto.reference.CreateReferenceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.GetByNumRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.GetByNumRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.GetByNumRequest.displayName = 'proto.reference.GetByNumRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.GetByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.GetByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.GetByIdRequest.displayName = 'proto.reference.GetByIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.GetByDigit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.GetByDigit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.GetByDigit.displayName = 'proto.reference.GetByDigit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.GetAllRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.GetAllRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.GetAllRequest.displayName = 'proto.reference.GetAllRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.CreateReferenceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.CreateReferenceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.CreateReferenceResponse.displayName = 'proto.reference.CreateReferenceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.CheckExistRefFourRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.CheckExistRefFourRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.CheckExistRefFourRequest.displayName = 'proto.reference.CheckExistRefFourRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.GetByNomRefDigitRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.GetByNomRefDigitRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.GetByNomRefDigitRequest.displayName = 'proto.reference.GetByNomRefDigitRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.CheckExistRefFourResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.CheckExistRefFourResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.CheckExistRefFourResponse.displayName = 'proto.reference.CheckExistRefFourResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.GetByRefFourDitgitResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.reference.GetByRefFourDitgitResponse.repeatedFields_, null);
};
goog.inherits(proto.reference.GetByRefFourDitgitResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.GetByRefFourDitgitResponse.displayName = 'proto.reference.GetByRefFourDitgitResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.GetRefFourByNomRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.GetRefFourByNomRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.GetRefFourByNomRequest.displayName = 'proto.reference.GetRefFourByNomRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.ValidateRefFourRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.ValidateRefFourRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.ValidateRefFourRequest.displayName = 'proto.reference.ValidateRefFourRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.ValidateRefFourReponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.ValidateRefFourReponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.ValidateRefFourReponse.displayName = 'proto.reference.ValidateRefFourReponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.DeleteRefFourRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.DeleteRefFourRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.DeleteRefFourRequest.displayName = 'proto.reference.DeleteRefFourRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.DeleteRefFourReponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.DeleteRefFourReponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.DeleteRefFourReponse.displayName = 'proto.reference.DeleteRefFourReponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.AttenduForRefFourCreate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.AttenduForRefFourCreate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.AttenduForRefFourCreate.displayName = 'proto.reference.AttenduForRefFourCreate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.RefFourCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.reference.RefFourCreateRequest.repeatedFields_, null);
};
goog.inherits(proto.reference.RefFourCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.RefFourCreateRequest.displayName = 'proto.reference.RefFourCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.RefFourCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.reference.RefFourCreateResponse.repeatedFields_, null);
};
goog.inherits(proto.reference.RefFourCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.RefFourCreateResponse.displayName = 'proto.reference.RefFourCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.MetaData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.MetaData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.MetaData.displayName = 'proto.reference.MetaData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.GetAllResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.reference.GetAllResponse.repeatedFields_, null);
};
goog.inherits(proto.reference.GetAllResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.GetAllResponse.displayName = 'proto.reference.GetAllResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.ValidDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.ValidDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.ValidDeleteRequest.displayName = 'proto.reference.ValidDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.ValidDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.ValidDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.ValidDeleteResponse.displayName = 'proto.reference.ValidDeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.DeleteByIds = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.reference.DeleteByIds.repeatedFields_, null);
};
goog.inherits(proto.reference.DeleteByIds, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.DeleteByIds.displayName = 'proto.reference.DeleteByIds';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.UpdateReferenceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.UpdateReferenceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.UpdateReferenceRequest.displayName = 'proto.reference.UpdateReferenceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.UpdateReferenceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.UpdateReferenceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.UpdateReferenceResponse.displayName = 'proto.reference.UpdateReferenceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.DeleteRefByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.DeleteRefByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.DeleteRefByIdRequest.displayName = 'proto.reference.DeleteRefByIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.DeleteRefByIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.DeleteRefByIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.DeleteRefByIdResponse.displayName = 'proto.reference.DeleteRefByIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.GetAllReferenceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.GetAllReferenceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.GetAllReferenceRequest.displayName = 'proto.reference.GetAllReferenceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.CheckExistEanVarianteForConditonnametRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.CheckExistEanVarianteForConditonnametRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.CheckExistEanVarianteForConditonnametRequest.displayName = 'proto.reference.CheckExistEanVarianteForConditonnametRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.CheckExistEanVarianteForConditonnametResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.CheckExistEanVarianteForConditonnametResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.CheckExistEanVarianteForConditonnametResponse.displayName = 'proto.reference.CheckExistEanVarianteForConditonnametResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.HistoryChange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.HistoryChange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.HistoryChange.displayName = 'proto.reference.HistoryChange';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.RefHistory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.reference.RefHistory.repeatedFields_, null);
};
goog.inherits(proto.reference.RefHistory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.RefHistory.displayName = 'proto.reference.RefHistory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.GetHistoryByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.GetHistoryByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.GetHistoryByIdRequest.displayName = 'proto.reference.GetHistoryByIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.GetHistoryByIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.reference.GetHistoryByIdResponse.repeatedFields_, null);
};
goog.inherits(proto.reference.GetHistoryByIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.GetHistoryByIdResponse.displayName = 'proto.reference.GetHistoryByIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.ReferenceProduct = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.ReferenceProduct, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.ReferenceProduct.displayName = 'proto.reference.ReferenceProduct';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.UpdateBlockLotRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.UpdateBlockLotRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.UpdateBlockLotRequest.displayName = 'proto.reference.UpdateBlockLotRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reference.UpdateBlockLotResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reference.UpdateBlockLotResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reference.UpdateBlockLotResponse.displayName = 'proto.reference.UpdateBlockLotResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.reference.Reference.repeatedFields_ = [24,25,26,27,36,42,43,44,45,46,47,48,53];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.Reference.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.Reference.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.Reference} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.Reference.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updateAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    nom: jspb.Message.getFieldWithDefault(msg, 4, ""),
    libelleLong: jspb.Message.getFieldWithDefault(msg, 5, ""),
    languaLibelle: jspb.Message.getFieldWithDefault(msg, 6, ""),
    libelleCourt: jspb.Message.getFieldWithDefault(msg, 7, ""),
    marque: jspb.Message.getFieldWithDefault(msg, 8, ""),
    origine: jspb.Message.getFieldWithDefault(msg, 9, ""),
    famille: jspb.Message.getFieldWithDefault(msg, 10, ""),
    sousFamille: jspb.Message.getFieldWithDefault(msg, 11, ""),
    photo: jspb.Message.getFieldWithDefault(msg, 12, ""),
    qteVariable: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    dluo: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    dluoValue: jspb.Message.getFieldWithDefault(msg, 15, 0),
    dlv: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    dlvValue: jspb.Message.getFieldWithDefault(msg, 17, 0),
    gestion: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    blocageEntree: jspb.Message.getBooleanFieldWithDefault(msg, 19, false),
    blocageSortie: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
    variante: jspb.Message.getBooleanFieldWithDefault(msg, 21, false),
    alerteStock: jspb.Message.getFieldWithDefault(msg, 22, 0),
    niveauAlerte: jspb.Message.getFieldWithDefault(msg, 23, ""),
    conditionnementList: jspb.Message.toObjectList(msg.getConditionnementList(),
    proto_conditionnement_conditionnement_pb.Conditionnement.toObject, includeInstance),
    icpeList: jspb.Message.toObjectList(msg.getIcpeList(),
    proto.reference.ICPE.toObject, includeInstance),
    matieresdangereusesList: jspb.Message.toObjectList(msg.getMatieresdangereusesList(),
    proto.reference.Matieresdangereuses.toObject, includeInstance),
    refFournissersList: jspb.Message.toObjectList(msg.getRefFournissersList(),
    proto.reference.RefFournissers.toObject, includeInstance),
    specificites: (f = msg.getSpecificites()) && proto_specificites_specificites_pb.Specificites.toObject(includeInstance, f),
    refCharement: (f = msg.getRefCharement()) && proto.reference.Comment.toObject(includeInstance, f),
    refLivraison: (f = msg.getRefLivraison()) && proto.reference.Comment.toObject(includeInstance, f),
    refReception: (f = msg.getRefReception()) && proto.reference.Comment.toObject(includeInstance, f),
    clientCodeNom: jspb.Message.getFieldWithDefault(msg, 32, ""),
    dlc: jspb.Message.getBooleanFieldWithDefault(msg, 33, false),
    dlcValue: jspb.Message.getFieldWithDefault(msg, 34, 0),
    blockDel: jspb.Message.getBooleanFieldWithDefault(msg, 35, false),
    stockList: jspb.Message.toObjectList(msg.getStockList(),
    proto_stock_stock_pb.Stock.toObject, includeInstance),
    chrono: jspb.Message.getFieldWithDefault(msg, 37, ""),
    createdBy: jspb.Message.getFieldWithDefault(msg, 38, ""),
    createrId: jspb.Message.getFieldWithDefault(msg, 39, ""),
    modificationBy: jspb.Message.getFieldWithDefault(msg, 40, ""),
    modificationerId: jspb.Message.getFieldWithDefault(msg, 41, ""),
    mouvementsList: (f = jspb.Message.getRepeatedField(msg, 42)) == null ? undefined : f,
    etasList: (f = jspb.Message.getRepeatedField(msg, 43)) == null ? undefined : f,
    statusesList: (f = jspb.Message.getRepeatedField(msg, 44)) == null ? undefined : f,
    typesList: (f = jspb.Message.getRepeatedField(msg, 45)) == null ? undefined : f,
    cdnsList: (f = jspb.Message.getRepeatedField(msg, 46)) == null ? undefined : f,
    typeCdnsList: (f = jspb.Message.getRepeatedField(msg, 47)) == null ? undefined : f,
    niveausList: (f = jspb.Message.getRepeatedField(msg, 48)) == null ? undefined : f,
    quantite: jspb.Message.getFieldWithDefault(msg, 49, 0),
    sousQte: jspb.Message.getFieldWithDefault(msg, 50, 0),
    totalPieses: jspb.Message.getFieldWithDefault(msg, 51, 0),
    preBlockStatus: jspb.Message.getFieldWithDefault(msg, 52, ""),
    lotReferenceList: jspb.Message.toObjectList(msg.getLotReferenceList(),
    proto_lotreference_lotreference_pb.LotReference.toObject, includeInstance),
    clientId: jspb.Message.getFieldWithDefault(msg, 54, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.Reference}
 */
proto.reference.Reference.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.Reference;
  return proto.reference.Reference.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.Reference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.Reference}
 */
proto.reference.Reference.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNom(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLibelleLong(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguaLibelle(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLibelleCourt(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarque(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrigine(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setFamille(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setSousFamille(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoto(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setQteVariable(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDluo(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDluoValue(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDlv(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDlvValue(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGestion(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBlocageEntree(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBlocageSortie(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVariante(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAlerteStock(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setNiveauAlerte(value);
      break;
    case 24:
      var value = new proto_conditionnement_conditionnement_pb.Conditionnement;
      reader.readMessage(value,proto_conditionnement_conditionnement_pb.Conditionnement.deserializeBinaryFromReader);
      msg.addConditionnement(value);
      break;
    case 25:
      var value = new proto.reference.ICPE;
      reader.readMessage(value,proto.reference.ICPE.deserializeBinaryFromReader);
      msg.addIcpe(value);
      break;
    case 26:
      var value = new proto.reference.Matieresdangereuses;
      reader.readMessage(value,proto.reference.Matieresdangereuses.deserializeBinaryFromReader);
      msg.addMatieresdangereuses(value);
      break;
    case 27:
      var value = new proto.reference.RefFournissers;
      reader.readMessage(value,proto.reference.RefFournissers.deserializeBinaryFromReader);
      msg.addRefFournissers(value);
      break;
    case 28:
      var value = new proto_specificites_specificites_pb.Specificites;
      reader.readMessage(value,proto_specificites_specificites_pb.Specificites.deserializeBinaryFromReader);
      msg.setSpecificites(value);
      break;
    case 29:
      var value = new proto.reference.Comment;
      reader.readMessage(value,proto.reference.Comment.deserializeBinaryFromReader);
      msg.setRefCharement(value);
      break;
    case 30:
      var value = new proto.reference.Comment;
      reader.readMessage(value,proto.reference.Comment.deserializeBinaryFromReader);
      msg.setRefLivraison(value);
      break;
    case 31:
      var value = new proto.reference.Comment;
      reader.readMessage(value,proto.reference.Comment.deserializeBinaryFromReader);
      msg.setRefReception(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientCodeNom(value);
      break;
    case 33:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDlc(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDlcValue(value);
      break;
    case 35:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBlockDel(value);
      break;
    case 36:
      var value = new proto_stock_stock_pb.Stock;
      reader.readMessage(value,proto_stock_stock_pb.Stock.deserializeBinaryFromReader);
      msg.addStock(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setChrono(value);
      break;
    case 38:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 39:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreaterId(value);
      break;
    case 40:
      var value = /** @type {string} */ (reader.readString());
      msg.setModificationBy(value);
      break;
    case 41:
      var value = /** @type {string} */ (reader.readString());
      msg.setModificationerId(value);
      break;
    case 42:
      var value = /** @type {string} */ (reader.readString());
      msg.addMouvements(value);
      break;
    case 43:
      var value = /** @type {string} */ (reader.readString());
      msg.addEtas(value);
      break;
    case 44:
      var value = /** @type {string} */ (reader.readString());
      msg.addStatuses(value);
      break;
    case 45:
      var value = /** @type {string} */ (reader.readString());
      msg.addTypes(value);
      break;
    case 46:
      var value = /** @type {string} */ (reader.readString());
      msg.addCdns(value);
      break;
    case 47:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addTypeCdns(values[i]);
      }
      break;
    case 48:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addNiveaus(values[i]);
      }
      break;
    case 49:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQuantite(value);
      break;
    case 50:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSousQte(value);
      break;
    case 51:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalPieses(value);
      break;
    case 52:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreBlockStatus(value);
      break;
    case 53:
      var value = new proto_lotreference_lotreference_pb.LotReference;
      reader.readMessage(value,proto_lotreference_lotreference_pb.LotReference.deserializeBinaryFromReader);
      msg.addLotReference(value);
      break;
    case 54:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.Reference.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.Reference.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.Reference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.Reference.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreateAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUpdateAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getNom();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLibelleLong();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLanguaLibelle();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLibelleCourt();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getMarque();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getOrigine();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getFamille();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getSousFamille();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getPhoto();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getQteVariable();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getDluo();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getDluoValue();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getDlv();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getDlvValue();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getGestion();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getBlocageEntree();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
  f = message.getBlocageSortie();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getVariante();
  if (f) {
    writer.writeBool(
      21,
      f
    );
  }
  f = message.getAlerteStock();
  if (f !== 0) {
    writer.writeInt32(
      22,
      f
    );
  }
  f = message.getNiveauAlerte();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getConditionnementList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      24,
      f,
      proto_conditionnement_conditionnement_pb.Conditionnement.serializeBinaryToWriter
    );
  }
  f = message.getIcpeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      25,
      f,
      proto.reference.ICPE.serializeBinaryToWriter
    );
  }
  f = message.getMatieresdangereusesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      26,
      f,
      proto.reference.Matieresdangereuses.serializeBinaryToWriter
    );
  }
  f = message.getRefFournissersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      27,
      f,
      proto.reference.RefFournissers.serializeBinaryToWriter
    );
  }
  f = message.getSpecificites();
  if (f != null) {
    writer.writeMessage(
      28,
      f,
      proto_specificites_specificites_pb.Specificites.serializeBinaryToWriter
    );
  }
  f = message.getRefCharement();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      proto.reference.Comment.serializeBinaryToWriter
    );
  }
  f = message.getRefLivraison();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.reference.Comment.serializeBinaryToWriter
    );
  }
  f = message.getRefReception();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      proto.reference.Comment.serializeBinaryToWriter
    );
  }
  f = message.getClientCodeNom();
  if (f.length > 0) {
    writer.writeString(
      32,
      f
    );
  }
  f = message.getDlc();
  if (f) {
    writer.writeBool(
      33,
      f
    );
  }
  f = message.getDlcValue();
  if (f !== 0) {
    writer.writeInt32(
      34,
      f
    );
  }
  f = message.getBlockDel();
  if (f) {
    writer.writeBool(
      35,
      f
    );
  }
  f = message.getStockList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      36,
      f,
      proto_stock_stock_pb.Stock.serializeBinaryToWriter
    );
  }
  f = message.getChrono();
  if (f.length > 0) {
    writer.writeString(
      37,
      f
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      38,
      f
    );
  }
  f = message.getCreaterId();
  if (f.length > 0) {
    writer.writeString(
      39,
      f
    );
  }
  f = message.getModificationBy();
  if (f.length > 0) {
    writer.writeString(
      40,
      f
    );
  }
  f = message.getModificationerId();
  if (f.length > 0) {
    writer.writeString(
      41,
      f
    );
  }
  f = message.getMouvementsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      42,
      f
    );
  }
  f = message.getEtasList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      43,
      f
    );
  }
  f = message.getStatusesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      44,
      f
    );
  }
  f = message.getTypesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      45,
      f
    );
  }
  f = message.getCdnsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      46,
      f
    );
  }
  f = message.getTypeCdnsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      47,
      f
    );
  }
  f = message.getNiveausList();
  if (f.length > 0) {
    writer.writePackedInt64(
      48,
      f
    );
  }
  f = message.getQuantite();
  if (f !== 0) {
    writer.writeInt64(
      49,
      f
    );
  }
  f = message.getSousQte();
  if (f !== 0) {
    writer.writeInt64(
      50,
      f
    );
  }
  f = message.getTotalPieses();
  if (f !== 0) {
    writer.writeInt64(
      51,
      f
    );
  }
  f = message.getPreBlockStatus();
  if (f.length > 0) {
    writer.writeString(
      52,
      f
    );
  }
  f = message.getLotReferenceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      53,
      f,
      proto_lotreference_lotreference_pb.LotReference.serializeBinaryToWriter
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      54,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.reference.Reference.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 create_at = 2;
 * @return {number}
 */
proto.reference.Reference.prototype.getCreateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setCreateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 update_at = 3;
 * @return {number}
 */
proto.reference.Reference.prototype.getUpdateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setUpdateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string nom = 4;
 * @return {string}
 */
proto.reference.Reference.prototype.getNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setNom = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string libelle_long = 5;
 * @return {string}
 */
proto.reference.Reference.prototype.getLibelleLong = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setLibelleLong = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string langua_libelle = 6;
 * @return {string}
 */
proto.reference.Reference.prototype.getLanguaLibelle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setLanguaLibelle = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string libelle_court = 7;
 * @return {string}
 */
proto.reference.Reference.prototype.getLibelleCourt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setLibelleCourt = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string marque = 8;
 * @return {string}
 */
proto.reference.Reference.prototype.getMarque = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setMarque = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string origine = 9;
 * @return {string}
 */
proto.reference.Reference.prototype.getOrigine = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setOrigine = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string famille = 10;
 * @return {string}
 */
proto.reference.Reference.prototype.getFamille = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setFamille = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string sous_famille = 11;
 * @return {string}
 */
proto.reference.Reference.prototype.getSousFamille = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setSousFamille = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string photo = 12;
 * @return {string}
 */
proto.reference.Reference.prototype.getPhoto = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setPhoto = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional bool qte_variable = 13;
 * @return {boolean}
 */
proto.reference.Reference.prototype.getQteVariable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setQteVariable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool dluo = 14;
 * @return {boolean}
 */
proto.reference.Reference.prototype.getDluo = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setDluo = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional int32 dluo_value = 15;
 * @return {number}
 */
proto.reference.Reference.prototype.getDluoValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setDluoValue = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional bool dlv = 16;
 * @return {boolean}
 */
proto.reference.Reference.prototype.getDlv = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setDlv = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional int32 dlv_value = 17;
 * @return {number}
 */
proto.reference.Reference.prototype.getDlvValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setDlvValue = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional bool gestion = 18;
 * @return {boolean}
 */
proto.reference.Reference.prototype.getGestion = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setGestion = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional bool blocage_entree = 19;
 * @return {boolean}
 */
proto.reference.Reference.prototype.getBlocageEntree = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setBlocageEntree = function(value) {
  return jspb.Message.setProto3BooleanField(this, 19, value);
};


/**
 * optional bool blocage_sortie = 20;
 * @return {boolean}
 */
proto.reference.Reference.prototype.getBlocageSortie = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setBlocageSortie = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional bool variante = 21;
 * @return {boolean}
 */
proto.reference.Reference.prototype.getVariante = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setVariante = function(value) {
  return jspb.Message.setProto3BooleanField(this, 21, value);
};


/**
 * optional int32 alerte_stock = 22;
 * @return {number}
 */
proto.reference.Reference.prototype.getAlerteStock = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setAlerteStock = function(value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional string niveau_alerte = 23;
 * @return {string}
 */
proto.reference.Reference.prototype.getNiveauAlerte = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setNiveauAlerte = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * repeated conditionnement.Conditionnement conditionnement = 24;
 * @return {!Array<!proto.conditionnement.Conditionnement>}
 */
proto.reference.Reference.prototype.getConditionnementList = function() {
  return /** @type{!Array<!proto.conditionnement.Conditionnement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_conditionnement_conditionnement_pb.Conditionnement, 24));
};


/**
 * @param {!Array<!proto.conditionnement.Conditionnement>} value
 * @return {!proto.reference.Reference} returns this
*/
proto.reference.Reference.prototype.setConditionnementList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 24, value);
};


/**
 * @param {!proto.conditionnement.Conditionnement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.conditionnement.Conditionnement}
 */
proto.reference.Reference.prototype.addConditionnement = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 24, opt_value, proto.conditionnement.Conditionnement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.clearConditionnementList = function() {
  return this.setConditionnementList([]);
};


/**
 * repeated ICPE icpe = 25;
 * @return {!Array<!proto.reference.ICPE>}
 */
proto.reference.Reference.prototype.getIcpeList = function() {
  return /** @type{!Array<!proto.reference.ICPE>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.reference.ICPE, 25));
};


/**
 * @param {!Array<!proto.reference.ICPE>} value
 * @return {!proto.reference.Reference} returns this
*/
proto.reference.Reference.prototype.setIcpeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 25, value);
};


/**
 * @param {!proto.reference.ICPE=} opt_value
 * @param {number=} opt_index
 * @return {!proto.reference.ICPE}
 */
proto.reference.Reference.prototype.addIcpe = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 25, opt_value, proto.reference.ICPE, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.clearIcpeList = function() {
  return this.setIcpeList([]);
};


/**
 * repeated Matieresdangereuses matieresdangereuses = 26;
 * @return {!Array<!proto.reference.Matieresdangereuses>}
 */
proto.reference.Reference.prototype.getMatieresdangereusesList = function() {
  return /** @type{!Array<!proto.reference.Matieresdangereuses>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.reference.Matieresdangereuses, 26));
};


/**
 * @param {!Array<!proto.reference.Matieresdangereuses>} value
 * @return {!proto.reference.Reference} returns this
*/
proto.reference.Reference.prototype.setMatieresdangereusesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 26, value);
};


/**
 * @param {!proto.reference.Matieresdangereuses=} opt_value
 * @param {number=} opt_index
 * @return {!proto.reference.Matieresdangereuses}
 */
proto.reference.Reference.prototype.addMatieresdangereuses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 26, opt_value, proto.reference.Matieresdangereuses, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.clearMatieresdangereusesList = function() {
  return this.setMatieresdangereusesList([]);
};


/**
 * repeated RefFournissers ref_fournissers = 27;
 * @return {!Array<!proto.reference.RefFournissers>}
 */
proto.reference.Reference.prototype.getRefFournissersList = function() {
  return /** @type{!Array<!proto.reference.RefFournissers>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.reference.RefFournissers, 27));
};


/**
 * @param {!Array<!proto.reference.RefFournissers>} value
 * @return {!proto.reference.Reference} returns this
*/
proto.reference.Reference.prototype.setRefFournissersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 27, value);
};


/**
 * @param {!proto.reference.RefFournissers=} opt_value
 * @param {number=} opt_index
 * @return {!proto.reference.RefFournissers}
 */
proto.reference.Reference.prototype.addRefFournissers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 27, opt_value, proto.reference.RefFournissers, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.clearRefFournissersList = function() {
  return this.setRefFournissersList([]);
};


/**
 * optional specificites.Specificites specificites = 28;
 * @return {?proto.specificites.Specificites}
 */
proto.reference.Reference.prototype.getSpecificites = function() {
  return /** @type{?proto.specificites.Specificites} */ (
    jspb.Message.getWrapperField(this, proto_specificites_specificites_pb.Specificites, 28));
};


/**
 * @param {?proto.specificites.Specificites|undefined} value
 * @return {!proto.reference.Reference} returns this
*/
proto.reference.Reference.prototype.setSpecificites = function(value) {
  return jspb.Message.setWrapperField(this, 28, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.clearSpecificites = function() {
  return this.setSpecificites(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reference.Reference.prototype.hasSpecificites = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional Comment ref_charement = 29;
 * @return {?proto.reference.Comment}
 */
proto.reference.Reference.prototype.getRefCharement = function() {
  return /** @type{?proto.reference.Comment} */ (
    jspb.Message.getWrapperField(this, proto.reference.Comment, 29));
};


/**
 * @param {?proto.reference.Comment|undefined} value
 * @return {!proto.reference.Reference} returns this
*/
proto.reference.Reference.prototype.setRefCharement = function(value) {
  return jspb.Message.setWrapperField(this, 29, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.clearRefCharement = function() {
  return this.setRefCharement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reference.Reference.prototype.hasRefCharement = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional Comment ref_livraison = 30;
 * @return {?proto.reference.Comment}
 */
proto.reference.Reference.prototype.getRefLivraison = function() {
  return /** @type{?proto.reference.Comment} */ (
    jspb.Message.getWrapperField(this, proto.reference.Comment, 30));
};


/**
 * @param {?proto.reference.Comment|undefined} value
 * @return {!proto.reference.Reference} returns this
*/
proto.reference.Reference.prototype.setRefLivraison = function(value) {
  return jspb.Message.setWrapperField(this, 30, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.clearRefLivraison = function() {
  return this.setRefLivraison(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reference.Reference.prototype.hasRefLivraison = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional Comment ref_reception = 31;
 * @return {?proto.reference.Comment}
 */
proto.reference.Reference.prototype.getRefReception = function() {
  return /** @type{?proto.reference.Comment} */ (
    jspb.Message.getWrapperField(this, proto.reference.Comment, 31));
};


/**
 * @param {?proto.reference.Comment|undefined} value
 * @return {!proto.reference.Reference} returns this
*/
proto.reference.Reference.prototype.setRefReception = function(value) {
  return jspb.Message.setWrapperField(this, 31, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.clearRefReception = function() {
  return this.setRefReception(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reference.Reference.prototype.hasRefReception = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional string client_code_nom = 32;
 * @return {string}
 */
proto.reference.Reference.prototype.getClientCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setClientCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 32, value);
};


/**
 * optional bool dlc = 33;
 * @return {boolean}
 */
proto.reference.Reference.prototype.getDlc = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 33, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setDlc = function(value) {
  return jspb.Message.setProto3BooleanField(this, 33, value);
};


/**
 * optional int32 dlc_value = 34;
 * @return {number}
 */
proto.reference.Reference.prototype.getDlcValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 34, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setDlcValue = function(value) {
  return jspb.Message.setProto3IntField(this, 34, value);
};


/**
 * optional bool block_del = 35;
 * @return {boolean}
 */
proto.reference.Reference.prototype.getBlockDel = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 35, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setBlockDel = function(value) {
  return jspb.Message.setProto3BooleanField(this, 35, value);
};


/**
 * repeated stock.Stock stock = 36;
 * @return {!Array<!proto.stock.Stock>}
 */
proto.reference.Reference.prototype.getStockList = function() {
  return /** @type{!Array<!proto.stock.Stock>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_stock_stock_pb.Stock, 36));
};


/**
 * @param {!Array<!proto.stock.Stock>} value
 * @return {!proto.reference.Reference} returns this
*/
proto.reference.Reference.prototype.setStockList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 36, value);
};


/**
 * @param {!proto.stock.Stock=} opt_value
 * @param {number=} opt_index
 * @return {!proto.stock.Stock}
 */
proto.reference.Reference.prototype.addStock = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 36, opt_value, proto.stock.Stock, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.clearStockList = function() {
  return this.setStockList([]);
};


/**
 * optional string chrono = 37;
 * @return {string}
 */
proto.reference.Reference.prototype.getChrono = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setChrono = function(value) {
  return jspb.Message.setProto3StringField(this, 37, value);
};


/**
 * optional string created_by = 38;
 * @return {string}
 */
proto.reference.Reference.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 38, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setCreatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 38, value);
};


/**
 * optional string creater_id = 39;
 * @return {string}
 */
proto.reference.Reference.prototype.getCreaterId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 39, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setCreaterId = function(value) {
  return jspb.Message.setProto3StringField(this, 39, value);
};


/**
 * optional string modification_by = 40;
 * @return {string}
 */
proto.reference.Reference.prototype.getModificationBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 40, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setModificationBy = function(value) {
  return jspb.Message.setProto3StringField(this, 40, value);
};


/**
 * optional string modificationer_id = 41;
 * @return {string}
 */
proto.reference.Reference.prototype.getModificationerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 41, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setModificationerId = function(value) {
  return jspb.Message.setProto3StringField(this, 41, value);
};


/**
 * repeated string mouvements = 42;
 * @return {!Array<string>}
 */
proto.reference.Reference.prototype.getMouvementsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 42));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setMouvementsList = function(value) {
  return jspb.Message.setField(this, 42, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.addMouvements = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 42, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.clearMouvementsList = function() {
  return this.setMouvementsList([]);
};


/**
 * repeated string etas = 43;
 * @return {!Array<string>}
 */
proto.reference.Reference.prototype.getEtasList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 43));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setEtasList = function(value) {
  return jspb.Message.setField(this, 43, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.addEtas = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 43, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.clearEtasList = function() {
  return this.setEtasList([]);
};


/**
 * repeated string statuses = 44;
 * @return {!Array<string>}
 */
proto.reference.Reference.prototype.getStatusesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 44));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setStatusesList = function(value) {
  return jspb.Message.setField(this, 44, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.addStatuses = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 44, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.clearStatusesList = function() {
  return this.setStatusesList([]);
};


/**
 * repeated string types = 45;
 * @return {!Array<string>}
 */
proto.reference.Reference.prototype.getTypesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 45));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setTypesList = function(value) {
  return jspb.Message.setField(this, 45, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.addTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 45, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.clearTypesList = function() {
  return this.setTypesList([]);
};


/**
 * repeated string cdns = 46;
 * @return {!Array<string>}
 */
proto.reference.Reference.prototype.getCdnsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 46));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setCdnsList = function(value) {
  return jspb.Message.setField(this, 46, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.addCdns = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 46, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.clearCdnsList = function() {
  return this.setCdnsList([]);
};


/**
 * repeated int64 type_cdns = 47;
 * @return {!Array<number>}
 */
proto.reference.Reference.prototype.getTypeCdnsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 47));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setTypeCdnsList = function(value) {
  return jspb.Message.setField(this, 47, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.addTypeCdns = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 47, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.clearTypeCdnsList = function() {
  return this.setTypeCdnsList([]);
};


/**
 * repeated int64 niveaus = 48;
 * @return {!Array<number>}
 */
proto.reference.Reference.prototype.getNiveausList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 48));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setNiveausList = function(value) {
  return jspb.Message.setField(this, 48, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.addNiveaus = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 48, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.clearNiveausList = function() {
  return this.setNiveausList([]);
};


/**
 * optional int64 quantite = 49;
 * @return {number}
 */
proto.reference.Reference.prototype.getQuantite = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 49, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setQuantite = function(value) {
  return jspb.Message.setProto3IntField(this, 49, value);
};


/**
 * optional int64 sous_qte = 50;
 * @return {number}
 */
proto.reference.Reference.prototype.getSousQte = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 50, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setSousQte = function(value) {
  return jspb.Message.setProto3IntField(this, 50, value);
};


/**
 * optional int64 total_pieses = 51;
 * @return {number}
 */
proto.reference.Reference.prototype.getTotalPieses = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 51, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setTotalPieses = function(value) {
  return jspb.Message.setProto3IntField(this, 51, value);
};


/**
 * optional string pre_block_status = 52;
 * @return {string}
 */
proto.reference.Reference.prototype.getPreBlockStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 52, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setPreBlockStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 52, value);
};


/**
 * repeated lotreference.LotReference lot_reference = 53;
 * @return {!Array<!proto.lotreference.LotReference>}
 */
proto.reference.Reference.prototype.getLotReferenceList = function() {
  return /** @type{!Array<!proto.lotreference.LotReference>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_lotreference_lotreference_pb.LotReference, 53));
};


/**
 * @param {!Array<!proto.lotreference.LotReference>} value
 * @return {!proto.reference.Reference} returns this
*/
proto.reference.Reference.prototype.setLotReferenceList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 53, value);
};


/**
 * @param {!proto.lotreference.LotReference=} opt_value
 * @param {number=} opt_index
 * @return {!proto.lotreference.LotReference}
 */
proto.reference.Reference.prototype.addLotReference = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 53, opt_value, proto.lotreference.LotReference, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.clearLotReferenceList = function() {
  return this.setLotReferenceList([]);
};


/**
 * optional string client_id = 54;
 * @return {string}
 */
proto.reference.Reference.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 54, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.Reference} returns this
 */
proto.reference.Reference.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 54, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.Comment.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.Comment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.Comment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.Comment.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updateAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    referenceId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    comment: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.Comment}
 */
proto.reference.Comment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.Comment;
  return proto.reference.Comment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.Comment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.Comment}
 */
proto.reference.Comment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.Comment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.Comment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.Comment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.Comment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreateAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUpdateAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getReferenceId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.reference.Comment.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.Comment} returns this
 */
proto.reference.Comment.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 create_at = 2;
 * @return {number}
 */
proto.reference.Comment.prototype.getCreateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.Comment} returns this
 */
proto.reference.Comment.prototype.setCreateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 update_at = 3;
 * @return {number}
 */
proto.reference.Comment.prototype.getUpdateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.Comment} returns this
 */
proto.reference.Comment.prototype.setUpdateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string reference_id = 4;
 * @return {string}
 */
proto.reference.Comment.prototype.getReferenceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.Comment} returns this
 */
proto.reference.Comment.prototype.setReferenceId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string comment = 5;
 * @return {string}
 */
proto.reference.Comment.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.Comment} returns this
 */
proto.reference.Comment.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.RefFournissers.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.RefFournissers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.RefFournissers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.RefFournissers.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updateAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    referenceFournisser: jspb.Message.getFieldWithDefault(msg, 4, ""),
    refNom: jspb.Message.getFieldWithDefault(msg, 5, ""),
    fournisserId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    clientCodeNom: jspb.Message.getFieldWithDefault(msg, 7, ""),
    blocageEntree: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    attEnable: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    blockDel: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    referenceId: jspb.Message.getFieldWithDefault(msg, 11, ""),
    clientId: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.RefFournissers}
 */
proto.reference.RefFournissers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.RefFournissers;
  return proto.reference.RefFournissers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.RefFournissers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.RefFournissers}
 */
proto.reference.RefFournissers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceFournisser(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRefNom(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFournisserId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientCodeNom(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBlocageEntree(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAttEnable(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBlockDel(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceId(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.RefFournissers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.RefFournissers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.RefFournissers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.RefFournissers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreateAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUpdateAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getReferenceFournisser();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRefNom();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFournisserId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getClientCodeNom();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getBlocageEntree();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getAttEnable();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getBlockDel();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getReferenceId();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.reference.RefFournissers.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.RefFournissers} returns this
 */
proto.reference.RefFournissers.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 create_at = 2;
 * @return {number}
 */
proto.reference.RefFournissers.prototype.getCreateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.RefFournissers} returns this
 */
proto.reference.RefFournissers.prototype.setCreateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 update_at = 3;
 * @return {number}
 */
proto.reference.RefFournissers.prototype.getUpdateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.RefFournissers} returns this
 */
proto.reference.RefFournissers.prototype.setUpdateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string reference_fournisser = 4;
 * @return {string}
 */
proto.reference.RefFournissers.prototype.getReferenceFournisser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.RefFournissers} returns this
 */
proto.reference.RefFournissers.prototype.setReferenceFournisser = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string ref_nom = 5;
 * @return {string}
 */
proto.reference.RefFournissers.prototype.getRefNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.RefFournissers} returns this
 */
proto.reference.RefFournissers.prototype.setRefNom = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string fournisser_id = 6;
 * @return {string}
 */
proto.reference.RefFournissers.prototype.getFournisserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.RefFournissers} returns this
 */
proto.reference.RefFournissers.prototype.setFournisserId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string client_code_nom = 7;
 * @return {string}
 */
proto.reference.RefFournissers.prototype.getClientCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.RefFournissers} returns this
 */
proto.reference.RefFournissers.prototype.setClientCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool blocage_entree = 8;
 * @return {boolean}
 */
proto.reference.RefFournissers.prototype.getBlocageEntree = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reference.RefFournissers} returns this
 */
proto.reference.RefFournissers.prototype.setBlocageEntree = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool att_enable = 9;
 * @return {boolean}
 */
proto.reference.RefFournissers.prototype.getAttEnable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reference.RefFournissers} returns this
 */
proto.reference.RefFournissers.prototype.setAttEnable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool block_del = 10;
 * @return {boolean}
 */
proto.reference.RefFournissers.prototype.getBlockDel = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reference.RefFournissers} returns this
 */
proto.reference.RefFournissers.prototype.setBlockDel = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional string reference_id = 11;
 * @return {string}
 */
proto.reference.RefFournissers.prototype.getReferenceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.RefFournissers} returns this
 */
proto.reference.RefFournissers.prototype.setReferenceId = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string client_id = 12;
 * @return {string}
 */
proto.reference.RefFournissers.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.RefFournissers} returns this
 */
proto.reference.RefFournissers.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.Matieresdangereuses.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.Matieresdangereuses.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.Matieresdangereuses} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.Matieresdangereuses.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updateAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    code: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.Matieresdangereuses}
 */
proto.reference.Matieresdangereuses.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.Matieresdangereuses;
  return proto.reference.Matieresdangereuses.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.Matieresdangereuses} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.Matieresdangereuses}
 */
proto.reference.Matieresdangereuses.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.Matieresdangereuses.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.Matieresdangereuses.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.Matieresdangereuses} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.Matieresdangereuses.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreateAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUpdateAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.reference.Matieresdangereuses.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.Matieresdangereuses} returns this
 */
proto.reference.Matieresdangereuses.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 create_at = 2;
 * @return {number}
 */
proto.reference.Matieresdangereuses.prototype.getCreateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.Matieresdangereuses} returns this
 */
proto.reference.Matieresdangereuses.prototype.setCreateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 update_at = 3;
 * @return {number}
 */
proto.reference.Matieresdangereuses.prototype.getUpdateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.Matieresdangereuses} returns this
 */
proto.reference.Matieresdangereuses.prototype.setUpdateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string code = 4;
 * @return {string}
 */
proto.reference.Matieresdangereuses.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.Matieresdangereuses} returns this
 */
proto.reference.Matieresdangereuses.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.reference.Matieresdangereuses.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.Matieresdangereuses} returns this
 */
proto.reference.Matieresdangereuses.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.ICPE.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.ICPE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.ICPE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.ICPE.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updateAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    code: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    qteNv1: jspb.Message.getFieldWithDefault(msg, 6, 0),
    qteTotalRef: jspb.Message.getFieldWithDefault(msg, 7, 0),
    qteTotalCode: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.ICPE}
 */
proto.reference.ICPE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.ICPE;
  return proto.reference.ICPE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.ICPE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.ICPE}
 */
proto.reference.ICPE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQteNv1(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQteTotalRef(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQteTotalCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.ICPE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.ICPE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.ICPE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.ICPE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreateAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUpdateAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getQteNv1();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getQteTotalRef();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getQteTotalCode();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.reference.ICPE.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.ICPE} returns this
 */
proto.reference.ICPE.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 create_at = 2;
 * @return {number}
 */
proto.reference.ICPE.prototype.getCreateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.ICPE} returns this
 */
proto.reference.ICPE.prototype.setCreateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 update_at = 3;
 * @return {number}
 */
proto.reference.ICPE.prototype.getUpdateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.ICPE} returns this
 */
proto.reference.ICPE.prototype.setUpdateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string code = 4;
 * @return {string}
 */
proto.reference.ICPE.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.ICPE} returns this
 */
proto.reference.ICPE.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.reference.ICPE.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.ICPE} returns this
 */
proto.reference.ICPE.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 qte_nv1 = 6;
 * @return {number}
 */
proto.reference.ICPE.prototype.getQteNv1 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.ICPE} returns this
 */
proto.reference.ICPE.prototype.setQteNv1 = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 qte_total_ref = 7;
 * @return {number}
 */
proto.reference.ICPE.prototype.getQteTotalRef = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.ICPE} returns this
 */
proto.reference.ICPE.prototype.setQteTotalRef = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 qte_total_code = 8;
 * @return {number}
 */
proto.reference.ICPE.prototype.getQteTotalCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.ICPE} returns this
 */
proto.reference.ICPE.prototype.setQteTotalCode = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.Photo.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.Photo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.Photo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.Photo.toObject = function(includeInstance, msg) {
  var f, obj = {
    photo: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.Photo}
 */
proto.reference.Photo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.Photo;
  return proto.reference.Photo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.Photo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.Photo}
 */
proto.reference.Photo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoto(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.Photo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.Photo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.Photo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.Photo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPhoto();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string photo = 1;
 * @return {string}
 */
proto.reference.Photo.prototype.getPhoto = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.Photo} returns this
 */
proto.reference.Photo.prototype.setPhoto = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.CreateReferenceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.CreateReferenceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.CreateReferenceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.CreateReferenceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    entry: (f = msg.getEntry()) && proto.reference.Reference.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.CreateReferenceRequest}
 */
proto.reference.CreateReferenceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.CreateReferenceRequest;
  return proto.reference.CreateReferenceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.CreateReferenceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.CreateReferenceRequest}
 */
proto.reference.CreateReferenceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reference.Reference;
      reader.readMessage(value,proto.reference.Reference.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.CreateReferenceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.CreateReferenceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.CreateReferenceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.CreateReferenceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.reference.Reference.serializeBinaryToWriter
    );
  }
};


/**
 * optional Reference entry = 1;
 * @return {?proto.reference.Reference}
 */
proto.reference.CreateReferenceRequest.prototype.getEntry = function() {
  return /** @type{?proto.reference.Reference} */ (
    jspb.Message.getWrapperField(this, proto.reference.Reference, 1));
};


/**
 * @param {?proto.reference.Reference|undefined} value
 * @return {!proto.reference.CreateReferenceRequest} returns this
*/
proto.reference.CreateReferenceRequest.prototype.setEntry = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reference.CreateReferenceRequest} returns this
 */
proto.reference.CreateReferenceRequest.prototype.clearEntry = function() {
  return this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reference.CreateReferenceRequest.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.GetByNumRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.GetByNumRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.GetByNumRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.GetByNumRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    nom: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientCodeNom: jspb.Message.getFieldWithDefault(msg, 2, ""),
    clientId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.GetByNumRequest}
 */
proto.reference.GetByNumRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.GetByNumRequest;
  return proto.reference.GetByNumRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.GetByNumRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.GetByNumRequest}
 */
proto.reference.GetByNumRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNom(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientCodeNom(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.GetByNumRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.GetByNumRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.GetByNumRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.GetByNumRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientCodeNom();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string nom = 1;
 * @return {string}
 */
proto.reference.GetByNumRequest.prototype.getNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetByNumRequest} returns this
 */
proto.reference.GetByNumRequest.prototype.setNom = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string client_code_nom = 2;
 * @return {string}
 */
proto.reference.GetByNumRequest.prototype.getClientCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetByNumRequest} returns this
 */
proto.reference.GetByNumRequest.prototype.setClientCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string client_id = 3;
 * @return {string}
 */
proto.reference.GetByNumRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetByNumRequest} returns this
 */
proto.reference.GetByNumRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.GetByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.GetByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.GetByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.GetByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.GetByIdRequest}
 */
proto.reference.GetByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.GetByIdRequest;
  return proto.reference.GetByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.GetByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.GetByIdRequest}
 */
proto.reference.GetByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.GetByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.GetByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.GetByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.GetByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.reference.GetByIdRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetByIdRequest} returns this
 */
proto.reference.GetByIdRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.GetByDigit.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.GetByDigit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.GetByDigit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.GetByDigit.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.GetByDigit}
 */
proto.reference.GetByDigit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.GetByDigit;
  return proto.reference.GetByDigit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.GetByDigit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.GetByDigit}
 */
proto.reference.GetByDigit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.GetByDigit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.GetByDigit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.GetByDigit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.GetByDigit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string data = 1;
 * @return {string}
 */
proto.reference.GetByDigit.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetByDigit} returns this
 */
proto.reference.GetByDigit.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.GetAllRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.GetAllRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.GetAllRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.GetAllRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    clientCodeNom: jspb.Message.getFieldWithDefault(msg, 3, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    role: jspb.Message.getFieldWithDefault(msg, 5, ""),
    clientId: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.GetAllRequest}
 */
proto.reference.GetAllRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.GetAllRequest;
  return proto.reference.GetAllRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.GetAllRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.GetAllRequest}
 */
proto.reference.GetAllRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientCodeNom(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.GetAllRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.GetAllRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.GetAllRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.GetAllRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getClientCodeNom();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional int32 limit = 1;
 * @return {number}
 */
proto.reference.GetAllRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.GetAllRequest} returns this
 */
proto.reference.GetAllRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 offset = 2;
 * @return {number}
 */
proto.reference.GetAllRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.GetAllRequest} returns this
 */
proto.reference.GetAllRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string client_code_nom = 3;
 * @return {string}
 */
proto.reference.GetAllRequest.prototype.getClientCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllRequest} returns this
 */
proto.reference.GetAllRequest.prototype.setClientCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string user_id = 4;
 * @return {string}
 */
proto.reference.GetAllRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllRequest} returns this
 */
proto.reference.GetAllRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string role = 5;
 * @return {string}
 */
proto.reference.GetAllRequest.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllRequest} returns this
 */
proto.reference.GetAllRequest.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string client_id = 6;
 * @return {string}
 */
proto.reference.GetAllRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllRequest} returns this
 */
proto.reference.GetAllRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.CreateReferenceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.CreateReferenceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.CreateReferenceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.CreateReferenceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entry: (f = msg.getEntry()) && proto.reference.Reference.toObject(includeInstance, f),
    messageerror: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.CreateReferenceResponse}
 */
proto.reference.CreateReferenceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.CreateReferenceResponse;
  return proto.reference.CreateReferenceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.CreateReferenceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.CreateReferenceResponse}
 */
proto.reference.CreateReferenceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reference.Reference;
      reader.readMessage(value,proto.reference.Reference.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.CreateReferenceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.CreateReferenceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.CreateReferenceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.CreateReferenceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.reference.Reference.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Reference entry = 1;
 * @return {?proto.reference.Reference}
 */
proto.reference.CreateReferenceResponse.prototype.getEntry = function() {
  return /** @type{?proto.reference.Reference} */ (
    jspb.Message.getWrapperField(this, proto.reference.Reference, 1));
};


/**
 * @param {?proto.reference.Reference|undefined} value
 * @return {!proto.reference.CreateReferenceResponse} returns this
*/
proto.reference.CreateReferenceResponse.prototype.setEntry = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reference.CreateReferenceResponse} returns this
 */
proto.reference.CreateReferenceResponse.prototype.clearEntry = function() {
  return this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reference.CreateReferenceResponse.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string messageError = 2;
 * @return {string}
 */
proto.reference.CreateReferenceResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.CreateReferenceResponse} returns this
 */
proto.reference.CreateReferenceResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.CheckExistRefFourRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.CheckExistRefFourRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.CheckExistRefFourRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.CheckExistRefFourRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientCodeNom: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fournisserId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    referenceFournisser: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.CheckExistRefFourRequest}
 */
proto.reference.CheckExistRefFourRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.CheckExistRefFourRequest;
  return proto.reference.CheckExistRefFourRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.CheckExistRefFourRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.CheckExistRefFourRequest}
 */
proto.reference.CheckExistRefFourRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientCodeNom(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFournisserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceFournisser(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.CheckExistRefFourRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.CheckExistRefFourRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.CheckExistRefFourRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.CheckExistRefFourRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientCodeNom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFournisserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReferenceFournisser();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string client_code_nom = 1;
 * @return {string}
 */
proto.reference.CheckExistRefFourRequest.prototype.getClientCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.CheckExistRefFourRequest} returns this
 */
proto.reference.CheckExistRefFourRequest.prototype.setClientCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string fournisser_id = 2;
 * @return {string}
 */
proto.reference.CheckExistRefFourRequest.prototype.getFournisserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.CheckExistRefFourRequest} returns this
 */
proto.reference.CheckExistRefFourRequest.prototype.setFournisserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string reference_fournisser = 3;
 * @return {string}
 */
proto.reference.CheckExistRefFourRequest.prototype.getReferenceFournisser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.CheckExistRefFourRequest} returns this
 */
proto.reference.CheckExistRefFourRequest.prototype.setReferenceFournisser = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string client_id = 4;
 * @return {string}
 */
proto.reference.CheckExistRefFourRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.CheckExistRefFourRequest} returns this
 */
proto.reference.CheckExistRefFourRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.GetByNomRefDigitRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.GetByNomRefDigitRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.GetByNomRefDigitRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.GetByNomRefDigitRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientCodeNom: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fournisserId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nom: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.GetByNomRefDigitRequest}
 */
proto.reference.GetByNomRefDigitRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.GetByNomRefDigitRequest;
  return proto.reference.GetByNomRefDigitRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.GetByNomRefDigitRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.GetByNomRefDigitRequest}
 */
proto.reference.GetByNomRefDigitRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientCodeNom(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFournisserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNom(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.GetByNomRefDigitRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.GetByNomRefDigitRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.GetByNomRefDigitRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.GetByNomRefDigitRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientCodeNom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFournisserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNom();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string client_code_nom = 1;
 * @return {string}
 */
proto.reference.GetByNomRefDigitRequest.prototype.getClientCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetByNomRefDigitRequest} returns this
 */
proto.reference.GetByNomRefDigitRequest.prototype.setClientCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string fournisser_id = 2;
 * @return {string}
 */
proto.reference.GetByNomRefDigitRequest.prototype.getFournisserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetByNomRefDigitRequest} returns this
 */
proto.reference.GetByNomRefDigitRequest.prototype.setFournisserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string nom = 3;
 * @return {string}
 */
proto.reference.GetByNomRefDigitRequest.prototype.getNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetByNomRefDigitRequest} returns this
 */
proto.reference.GetByNomRefDigitRequest.prototype.setNom = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string client_id = 4;
 * @return {string}
 */
proto.reference.GetByNomRefDigitRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetByNomRefDigitRequest} returns this
 */
proto.reference.GetByNomRefDigitRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.CheckExistRefFourResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.CheckExistRefFourResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.CheckExistRefFourResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.CheckExistRefFourResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entry: (f = msg.getEntry()) && proto.reference.RefFournissers.toObject(includeInstance, f),
    messageerror: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.CheckExistRefFourResponse}
 */
proto.reference.CheckExistRefFourResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.CheckExistRefFourResponse;
  return proto.reference.CheckExistRefFourResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.CheckExistRefFourResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.CheckExistRefFourResponse}
 */
proto.reference.CheckExistRefFourResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reference.RefFournissers;
      reader.readMessage(value,proto.reference.RefFournissers.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.CheckExistRefFourResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.CheckExistRefFourResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.CheckExistRefFourResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.CheckExistRefFourResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.reference.RefFournissers.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional RefFournissers entry = 1;
 * @return {?proto.reference.RefFournissers}
 */
proto.reference.CheckExistRefFourResponse.prototype.getEntry = function() {
  return /** @type{?proto.reference.RefFournissers} */ (
    jspb.Message.getWrapperField(this, proto.reference.RefFournissers, 1));
};


/**
 * @param {?proto.reference.RefFournissers|undefined} value
 * @return {!proto.reference.CheckExistRefFourResponse} returns this
*/
proto.reference.CheckExistRefFourResponse.prototype.setEntry = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reference.CheckExistRefFourResponse} returns this
 */
proto.reference.CheckExistRefFourResponse.prototype.clearEntry = function() {
  return this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reference.CheckExistRefFourResponse.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string messageError = 2;
 * @return {string}
 */
proto.reference.CheckExistRefFourResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.CheckExistRefFourResponse} returns this
 */
proto.reference.CheckExistRefFourResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.reference.GetByRefFourDitgitResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.GetByRefFourDitgitResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.GetByRefFourDitgitResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.GetByRefFourDitgitResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.GetByRefFourDitgitResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto.reference.RefFournissers.toObject, includeInstance),
    messageerror: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.GetByRefFourDitgitResponse}
 */
proto.reference.GetByRefFourDitgitResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.GetByRefFourDitgitResponse;
  return proto.reference.GetByRefFourDitgitResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.GetByRefFourDitgitResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.GetByRefFourDitgitResponse}
 */
proto.reference.GetByRefFourDitgitResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reference.RefFournissers;
      reader.readMessage(value,proto.reference.RefFournissers.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.GetByRefFourDitgitResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.GetByRefFourDitgitResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.GetByRefFourDitgitResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.GetByRefFourDitgitResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.reference.RefFournissers.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated RefFournissers entry = 1;
 * @return {!Array<!proto.reference.RefFournissers>}
 */
proto.reference.GetByRefFourDitgitResponse.prototype.getEntryList = function() {
  return /** @type{!Array<!proto.reference.RefFournissers>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.reference.RefFournissers, 1));
};


/**
 * @param {!Array<!proto.reference.RefFournissers>} value
 * @return {!proto.reference.GetByRefFourDitgitResponse} returns this
*/
proto.reference.GetByRefFourDitgitResponse.prototype.setEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.reference.RefFournissers=} opt_value
 * @param {number=} opt_index
 * @return {!proto.reference.RefFournissers}
 */
proto.reference.GetByRefFourDitgitResponse.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.reference.RefFournissers, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reference.GetByRefFourDitgitResponse} returns this
 */
proto.reference.GetByRefFourDitgitResponse.prototype.clearEntryList = function() {
  return this.setEntryList([]);
};


/**
 * optional string messageError = 2;
 * @return {string}
 */
proto.reference.GetByRefFourDitgitResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetByRefFourDitgitResponse} returns this
 */
proto.reference.GetByRefFourDitgitResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.GetRefFourByNomRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.GetRefFourByNomRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.GetRefFourByNomRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.GetRefFourByNomRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    refNom: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientCodeNom: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fourId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.GetRefFourByNomRequest}
 */
proto.reference.GetRefFourByNomRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.GetRefFourByNomRequest;
  return proto.reference.GetRefFourByNomRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.GetRefFourByNomRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.GetRefFourByNomRequest}
 */
proto.reference.GetRefFourByNomRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRefNom(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientCodeNom(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFourId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.GetRefFourByNomRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.GetRefFourByNomRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.GetRefFourByNomRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.GetRefFourByNomRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRefNom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientCodeNom();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFourId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string ref_nom = 1;
 * @return {string}
 */
proto.reference.GetRefFourByNomRequest.prototype.getRefNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetRefFourByNomRequest} returns this
 */
proto.reference.GetRefFourByNomRequest.prototype.setRefNom = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string client_code_nom = 2;
 * @return {string}
 */
proto.reference.GetRefFourByNomRequest.prototype.getClientCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetRefFourByNomRequest} returns this
 */
proto.reference.GetRefFourByNomRequest.prototype.setClientCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string four_id = 3;
 * @return {string}
 */
proto.reference.GetRefFourByNomRequest.prototype.getFourId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetRefFourByNomRequest} returns this
 */
proto.reference.GetRefFourByNomRequest.prototype.setFourId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string client_id = 4;
 * @return {string}
 */
proto.reference.GetRefFourByNomRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetRefFourByNomRequest} returns this
 */
proto.reference.GetRefFourByNomRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.ValidateRefFourRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.ValidateRefFourRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.ValidateRefFourRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.ValidateRefFourRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    refNom: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientCodeNom: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fourId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    blockRelation: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    referenceFournisser: jspb.Message.getFieldWithDefault(msg, 5, ""),
    clientId: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.ValidateRefFourRequest}
 */
proto.reference.ValidateRefFourRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.ValidateRefFourRequest;
  return proto.reference.ValidateRefFourRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.ValidateRefFourRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.ValidateRefFourRequest}
 */
proto.reference.ValidateRefFourRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRefNom(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientCodeNom(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFourId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBlockRelation(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceFournisser(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.ValidateRefFourRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.ValidateRefFourRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.ValidateRefFourRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.ValidateRefFourRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRefNom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientCodeNom();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFourId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBlockRelation();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getReferenceFournisser();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string ref_nom = 1;
 * @return {string}
 */
proto.reference.ValidateRefFourRequest.prototype.getRefNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.ValidateRefFourRequest} returns this
 */
proto.reference.ValidateRefFourRequest.prototype.setRefNom = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string client_code_nom = 2;
 * @return {string}
 */
proto.reference.ValidateRefFourRequest.prototype.getClientCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.ValidateRefFourRequest} returns this
 */
proto.reference.ValidateRefFourRequest.prototype.setClientCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string four_id = 3;
 * @return {string}
 */
proto.reference.ValidateRefFourRequest.prototype.getFourId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.ValidateRefFourRequest} returns this
 */
proto.reference.ValidateRefFourRequest.prototype.setFourId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool block_relation = 4;
 * @return {boolean}
 */
proto.reference.ValidateRefFourRequest.prototype.getBlockRelation = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reference.ValidateRefFourRequest} returns this
 */
proto.reference.ValidateRefFourRequest.prototype.setBlockRelation = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string reference_fournisser = 5;
 * @return {string}
 */
proto.reference.ValidateRefFourRequest.prototype.getReferenceFournisser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.ValidateRefFourRequest} returns this
 */
proto.reference.ValidateRefFourRequest.prototype.setReferenceFournisser = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string client_id = 6;
 * @return {string}
 */
proto.reference.ValidateRefFourRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.ValidateRefFourRequest} returns this
 */
proto.reference.ValidateRefFourRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.ValidateRefFourReponse.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.ValidateRefFourReponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.ValidateRefFourReponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.ValidateRefFourReponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entry: (f = msg.getEntry()) && proto.reference.RefFournissers.toObject(includeInstance, f),
    messageerror: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.ValidateRefFourReponse}
 */
proto.reference.ValidateRefFourReponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.ValidateRefFourReponse;
  return proto.reference.ValidateRefFourReponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.ValidateRefFourReponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.ValidateRefFourReponse}
 */
proto.reference.ValidateRefFourReponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reference.RefFournissers;
      reader.readMessage(value,proto.reference.RefFournissers.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.ValidateRefFourReponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.ValidateRefFourReponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.ValidateRefFourReponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.ValidateRefFourReponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.reference.RefFournissers.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional RefFournissers entry = 1;
 * @return {?proto.reference.RefFournissers}
 */
proto.reference.ValidateRefFourReponse.prototype.getEntry = function() {
  return /** @type{?proto.reference.RefFournissers} */ (
    jspb.Message.getWrapperField(this, proto.reference.RefFournissers, 1));
};


/**
 * @param {?proto.reference.RefFournissers|undefined} value
 * @return {!proto.reference.ValidateRefFourReponse} returns this
*/
proto.reference.ValidateRefFourReponse.prototype.setEntry = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reference.ValidateRefFourReponse} returns this
 */
proto.reference.ValidateRefFourReponse.prototype.clearEntry = function() {
  return this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reference.ValidateRefFourReponse.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string messageError = 2;
 * @return {string}
 */
proto.reference.ValidateRefFourReponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.ValidateRefFourReponse} returns this
 */
proto.reference.ValidateRefFourReponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.DeleteRefFourRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.DeleteRefFourRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.DeleteRefFourRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.DeleteRefFourRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.DeleteRefFourRequest}
 */
proto.reference.DeleteRefFourRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.DeleteRefFourRequest;
  return proto.reference.DeleteRefFourRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.DeleteRefFourRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.DeleteRefFourRequest}
 */
proto.reference.DeleteRefFourRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.DeleteRefFourRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.DeleteRefFourRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.DeleteRefFourRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.DeleteRefFourRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.reference.DeleteRefFourRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.DeleteRefFourRequest} returns this
 */
proto.reference.DeleteRefFourRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.DeleteRefFourReponse.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.DeleteRefFourReponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.DeleteRefFourReponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.DeleteRefFourReponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entry: (f = msg.getEntry()) && proto.reference.RefFournissers.toObject(includeInstance, f),
    messageerror: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.DeleteRefFourReponse}
 */
proto.reference.DeleteRefFourReponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.DeleteRefFourReponse;
  return proto.reference.DeleteRefFourReponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.DeleteRefFourReponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.DeleteRefFourReponse}
 */
proto.reference.DeleteRefFourReponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reference.RefFournissers;
      reader.readMessage(value,proto.reference.RefFournissers.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.DeleteRefFourReponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.DeleteRefFourReponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.DeleteRefFourReponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.DeleteRefFourReponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.reference.RefFournissers.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional RefFournissers entry = 1;
 * @return {?proto.reference.RefFournissers}
 */
proto.reference.DeleteRefFourReponse.prototype.getEntry = function() {
  return /** @type{?proto.reference.RefFournissers} */ (
    jspb.Message.getWrapperField(this, proto.reference.RefFournissers, 1));
};


/**
 * @param {?proto.reference.RefFournissers|undefined} value
 * @return {!proto.reference.DeleteRefFourReponse} returns this
*/
proto.reference.DeleteRefFourReponse.prototype.setEntry = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reference.DeleteRefFourReponse} returns this
 */
proto.reference.DeleteRefFourReponse.prototype.clearEntry = function() {
  return this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reference.DeleteRefFourReponse.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string messageError = 2;
 * @return {string}
 */
proto.reference.DeleteRefFourReponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.DeleteRefFourReponse} returns this
 */
proto.reference.DeleteRefFourReponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.AttenduForRefFourCreate.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.AttenduForRefFourCreate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.AttenduForRefFourCreate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.AttenduForRefFourCreate.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bl: jspb.Message.getFieldWithDefault(msg, 2, ""),
    clientCodeNom: jspb.Message.getFieldWithDefault(msg, 3, ""),
    warehouseCodeNom: jspb.Message.getFieldWithDefault(msg, 4, ""),
    companyCodeNom: jspb.Message.getFieldWithDefault(msg, 5, ""),
    modificationerId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    clientId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    warehouseId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    companyId: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.AttenduForRefFourCreate}
 */
proto.reference.AttenduForRefFourCreate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.AttenduForRefFourCreate;
  return proto.reference.AttenduForRefFourCreate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.AttenduForRefFourCreate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.AttenduForRefFourCreate}
 */
proto.reference.AttenduForRefFourCreate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientCodeNom(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseCodeNom(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyCodeNom(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setModificationerId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.AttenduForRefFourCreate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.AttenduForRefFourCreate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.AttenduForRefFourCreate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.AttenduForRefFourCreate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClientCodeNom();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWarehouseCodeNom();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCompanyCodeNom();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getModificationerId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getWarehouseId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.reference.AttenduForRefFourCreate.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.AttenduForRefFourCreate} returns this
 */
proto.reference.AttenduForRefFourCreate.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string bl = 2;
 * @return {string}
 */
proto.reference.AttenduForRefFourCreate.prototype.getBl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.AttenduForRefFourCreate} returns this
 */
proto.reference.AttenduForRefFourCreate.prototype.setBl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string client_code_nom = 3;
 * @return {string}
 */
proto.reference.AttenduForRefFourCreate.prototype.getClientCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.AttenduForRefFourCreate} returns this
 */
proto.reference.AttenduForRefFourCreate.prototype.setClientCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string warehouse_code_nom = 4;
 * @return {string}
 */
proto.reference.AttenduForRefFourCreate.prototype.getWarehouseCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.AttenduForRefFourCreate} returns this
 */
proto.reference.AttenduForRefFourCreate.prototype.setWarehouseCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string company_code_nom = 5;
 * @return {string}
 */
proto.reference.AttenduForRefFourCreate.prototype.getCompanyCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.AttenduForRefFourCreate} returns this
 */
proto.reference.AttenduForRefFourCreate.prototype.setCompanyCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string modificationer_id = 6;
 * @return {string}
 */
proto.reference.AttenduForRefFourCreate.prototype.getModificationerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.AttenduForRefFourCreate} returns this
 */
proto.reference.AttenduForRefFourCreate.prototype.setModificationerId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string client_id = 7;
 * @return {string}
 */
proto.reference.AttenduForRefFourCreate.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.AttenduForRefFourCreate} returns this
 */
proto.reference.AttenduForRefFourCreate.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string warehouse_id = 8;
 * @return {string}
 */
proto.reference.AttenduForRefFourCreate.prototype.getWarehouseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.AttenduForRefFourCreate} returns this
 */
proto.reference.AttenduForRefFourCreate.prototype.setWarehouseId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string company_id = 9;
 * @return {string}
 */
proto.reference.AttenduForRefFourCreate.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.AttenduForRefFourCreate} returns this
 */
proto.reference.AttenduForRefFourCreate.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.reference.RefFourCreateRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.RefFourCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.RefFourCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.RefFourCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.RefFourCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    reffourarrayList: jspb.Message.toObjectList(msg.getReffourarrayList(),
    proto.reference.RefFournissers.toObject, includeInstance),
    attendu: (f = msg.getAttendu()) && proto.reference.AttenduForRefFourCreate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.RefFourCreateRequest}
 */
proto.reference.RefFourCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.RefFourCreateRequest;
  return proto.reference.RefFourCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.RefFourCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.RefFourCreateRequest}
 */
proto.reference.RefFourCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reference.RefFournissers;
      reader.readMessage(value,proto.reference.RefFournissers.deserializeBinaryFromReader);
      msg.addReffourarray(value);
      break;
    case 2:
      var value = new proto.reference.AttenduForRefFourCreate;
      reader.readMessage(value,proto.reference.AttenduForRefFourCreate.deserializeBinaryFromReader);
      msg.setAttendu(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.RefFourCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.RefFourCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.RefFourCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.RefFourCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReffourarrayList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.reference.RefFournissers.serializeBinaryToWriter
    );
  }
  f = message.getAttendu();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.reference.AttenduForRefFourCreate.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RefFournissers RefFourArray = 1;
 * @return {!Array<!proto.reference.RefFournissers>}
 */
proto.reference.RefFourCreateRequest.prototype.getReffourarrayList = function() {
  return /** @type{!Array<!proto.reference.RefFournissers>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.reference.RefFournissers, 1));
};


/**
 * @param {!Array<!proto.reference.RefFournissers>} value
 * @return {!proto.reference.RefFourCreateRequest} returns this
*/
proto.reference.RefFourCreateRequest.prototype.setReffourarrayList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.reference.RefFournissers=} opt_value
 * @param {number=} opt_index
 * @return {!proto.reference.RefFournissers}
 */
proto.reference.RefFourCreateRequest.prototype.addReffourarray = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.reference.RefFournissers, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reference.RefFourCreateRequest} returns this
 */
proto.reference.RefFourCreateRequest.prototype.clearReffourarrayList = function() {
  return this.setReffourarrayList([]);
};


/**
 * optional AttenduForRefFourCreate Attendu = 2;
 * @return {?proto.reference.AttenduForRefFourCreate}
 */
proto.reference.RefFourCreateRequest.prototype.getAttendu = function() {
  return /** @type{?proto.reference.AttenduForRefFourCreate} */ (
    jspb.Message.getWrapperField(this, proto.reference.AttenduForRefFourCreate, 2));
};


/**
 * @param {?proto.reference.AttenduForRefFourCreate|undefined} value
 * @return {!proto.reference.RefFourCreateRequest} returns this
*/
proto.reference.RefFourCreateRequest.prototype.setAttendu = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reference.RefFourCreateRequest} returns this
 */
proto.reference.RefFourCreateRequest.prototype.clearAttendu = function() {
  return this.setAttendu(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reference.RefFourCreateRequest.prototype.hasAttendu = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.reference.RefFourCreateResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.RefFourCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.RefFourCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.RefFourCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.RefFourCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto.reference.RefFournissers.toObject, includeInstance),
    messageerror: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.RefFourCreateResponse}
 */
proto.reference.RefFourCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.RefFourCreateResponse;
  return proto.reference.RefFourCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.RefFourCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.RefFourCreateResponse}
 */
proto.reference.RefFourCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reference.RefFournissers;
      reader.readMessage(value,proto.reference.RefFournissers.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.RefFourCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.RefFourCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.RefFourCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.RefFourCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.reference.RefFournissers.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated RefFournissers entry = 1;
 * @return {!Array<!proto.reference.RefFournissers>}
 */
proto.reference.RefFourCreateResponse.prototype.getEntryList = function() {
  return /** @type{!Array<!proto.reference.RefFournissers>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.reference.RefFournissers, 1));
};


/**
 * @param {!Array<!proto.reference.RefFournissers>} value
 * @return {!proto.reference.RefFourCreateResponse} returns this
*/
proto.reference.RefFourCreateResponse.prototype.setEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.reference.RefFournissers=} opt_value
 * @param {number=} opt_index
 * @return {!proto.reference.RefFournissers}
 */
proto.reference.RefFourCreateResponse.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.reference.RefFournissers, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reference.RefFourCreateResponse} returns this
 */
proto.reference.RefFourCreateResponse.prototype.clearEntryList = function() {
  return this.setEntryList([]);
};


/**
 * optional string messageError = 2;
 * @return {string}
 */
proto.reference.RefFourCreateResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.RefFourCreateResponse} returns this
 */
proto.reference.RefFourCreateResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.MetaData.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.MetaData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.MetaData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.MetaData.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    total: jspb.Message.getFieldWithDefault(msg, 4, 0),
    countHistory: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.MetaData}
 */
proto.reference.MetaData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.MetaData;
  return proto.reference.MetaData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.MetaData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.MetaData}
 */
proto.reference.MetaData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotal(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCountHistory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.MetaData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.MetaData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.MetaData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.MetaData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getCountHistory();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional int32 count = 1;
 * @return {number}
 */
proto.reference.MetaData.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.MetaData} returns this
 */
proto.reference.MetaData.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 offset = 2;
 * @return {number}
 */
proto.reference.MetaData.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.MetaData} returns this
 */
proto.reference.MetaData.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 limit = 3;
 * @return {number}
 */
proto.reference.MetaData.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.MetaData} returns this
 */
proto.reference.MetaData.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 total = 4;
 * @return {number}
 */
proto.reference.MetaData.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.MetaData} returns this
 */
proto.reference.MetaData.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 count_history = 5;
 * @return {number}
 */
proto.reference.MetaData.prototype.getCountHistory = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.MetaData} returns this
 */
proto.reference.MetaData.prototype.setCountHistory = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.reference.GetAllResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.GetAllResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.GetAllResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.GetAllResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.GetAllResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto.reference.Reference.toObject, includeInstance),
    metadata: (f = msg.getMetadata()) && proto.reference.MetaData.toObject(includeInstance, f),
    messageerror: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.GetAllResponse}
 */
proto.reference.GetAllResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.GetAllResponse;
  return proto.reference.GetAllResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.GetAllResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.GetAllResponse}
 */
proto.reference.GetAllResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reference.Reference;
      reader.readMessage(value,proto.reference.Reference.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    case 2:
      var value = new proto.reference.MetaData;
      reader.readMessage(value,proto.reference.MetaData.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.GetAllResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.GetAllResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.GetAllResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.GetAllResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.reference.Reference.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.reference.MetaData.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated Reference entry = 1;
 * @return {!Array<!proto.reference.Reference>}
 */
proto.reference.GetAllResponse.prototype.getEntryList = function() {
  return /** @type{!Array<!proto.reference.Reference>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.reference.Reference, 1));
};


/**
 * @param {!Array<!proto.reference.Reference>} value
 * @return {!proto.reference.GetAllResponse} returns this
*/
proto.reference.GetAllResponse.prototype.setEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.reference.Reference=} opt_value
 * @param {number=} opt_index
 * @return {!proto.reference.Reference}
 */
proto.reference.GetAllResponse.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.reference.Reference, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reference.GetAllResponse} returns this
 */
proto.reference.GetAllResponse.prototype.clearEntryList = function() {
  return this.setEntryList([]);
};


/**
 * optional MetaData metadata = 2;
 * @return {?proto.reference.MetaData}
 */
proto.reference.GetAllResponse.prototype.getMetadata = function() {
  return /** @type{?proto.reference.MetaData} */ (
    jspb.Message.getWrapperField(this, proto.reference.MetaData, 2));
};


/**
 * @param {?proto.reference.MetaData|undefined} value
 * @return {!proto.reference.GetAllResponse} returns this
*/
proto.reference.GetAllResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reference.GetAllResponse} returns this
 */
proto.reference.GetAllResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reference.GetAllResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string messageError = 3;
 * @return {string}
 */
proto.reference.GetAllResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllResponse} returns this
 */
proto.reference.GetAllResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.ValidDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.ValidDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.ValidDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.ValidDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.ValidDeleteRequest}
 */
proto.reference.ValidDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.ValidDeleteRequest;
  return proto.reference.ValidDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.ValidDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.ValidDeleteRequest}
 */
proto.reference.ValidDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.ValidDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.ValidDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.ValidDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.ValidDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.reference.ValidDeleteRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.ValidDeleteRequest} returns this
 */
proto.reference.ValidDeleteRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.ValidDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.ValidDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.ValidDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.ValidDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.ValidDeleteResponse}
 */
proto.reference.ValidDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.ValidDeleteResponse;
  return proto.reference.ValidDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.ValidDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.ValidDeleteResponse}
 */
proto.reference.ValidDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.ValidDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.ValidDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.ValidDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.ValidDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool status = 1;
 * @return {boolean}
 */
proto.reference.ValidDeleteResponse.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reference.ValidDeleteResponse} returns this
 */
proto.reference.ValidDeleteResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.reference.DeleteByIds.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.DeleteByIds.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.DeleteByIds.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.DeleteByIds} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.DeleteByIds.toObject = function(includeInstance, msg) {
  var f, obj = {
    idList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.DeleteByIds}
 */
proto.reference.DeleteByIds.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.DeleteByIds;
  return proto.reference.DeleteByIds.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.DeleteByIds} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.DeleteByIds}
 */
proto.reference.DeleteByIds.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.DeleteByIds.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.DeleteByIds.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.DeleteByIds} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.DeleteByIds.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string id = 1;
 * @return {!Array<string>}
 */
proto.reference.DeleteByIds.prototype.getIdList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.reference.DeleteByIds} returns this
 */
proto.reference.DeleteByIds.prototype.setIdList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.reference.DeleteByIds} returns this
 */
proto.reference.DeleteByIds.prototype.addId = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reference.DeleteByIds} returns this
 */
proto.reference.DeleteByIds.prototype.clearIdList = function() {
  return this.setIdList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.UpdateReferenceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.UpdateReferenceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.UpdateReferenceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.UpdateReferenceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    entry: (f = msg.getEntry()) && proto.reference.Reference.toObject(includeInstance, f),
    refFourDelete: (f = msg.getRefFourDelete()) && proto.reference.DeleteByIds.toObject(includeInstance, f),
    conditionnementDelete: (f = msg.getConditionnementDelete()) && proto.reference.DeleteByIds.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.UpdateReferenceRequest}
 */
proto.reference.UpdateReferenceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.UpdateReferenceRequest;
  return proto.reference.UpdateReferenceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.UpdateReferenceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.UpdateReferenceRequest}
 */
proto.reference.UpdateReferenceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reference.Reference;
      reader.readMessage(value,proto.reference.Reference.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    case 2:
      var value = new proto.reference.DeleteByIds;
      reader.readMessage(value,proto.reference.DeleteByIds.deserializeBinaryFromReader);
      msg.setRefFourDelete(value);
      break;
    case 3:
      var value = new proto.reference.DeleteByIds;
      reader.readMessage(value,proto.reference.DeleteByIds.deserializeBinaryFromReader);
      msg.setConditionnementDelete(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.UpdateReferenceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.UpdateReferenceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.UpdateReferenceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.UpdateReferenceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.reference.Reference.serializeBinaryToWriter
    );
  }
  f = message.getRefFourDelete();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.reference.DeleteByIds.serializeBinaryToWriter
    );
  }
  f = message.getConditionnementDelete();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.reference.DeleteByIds.serializeBinaryToWriter
    );
  }
};


/**
 * optional Reference entry = 1;
 * @return {?proto.reference.Reference}
 */
proto.reference.UpdateReferenceRequest.prototype.getEntry = function() {
  return /** @type{?proto.reference.Reference} */ (
    jspb.Message.getWrapperField(this, proto.reference.Reference, 1));
};


/**
 * @param {?proto.reference.Reference|undefined} value
 * @return {!proto.reference.UpdateReferenceRequest} returns this
*/
proto.reference.UpdateReferenceRequest.prototype.setEntry = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reference.UpdateReferenceRequest} returns this
 */
proto.reference.UpdateReferenceRequest.prototype.clearEntry = function() {
  return this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reference.UpdateReferenceRequest.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DeleteByIds ref_four_delete = 2;
 * @return {?proto.reference.DeleteByIds}
 */
proto.reference.UpdateReferenceRequest.prototype.getRefFourDelete = function() {
  return /** @type{?proto.reference.DeleteByIds} */ (
    jspb.Message.getWrapperField(this, proto.reference.DeleteByIds, 2));
};


/**
 * @param {?proto.reference.DeleteByIds|undefined} value
 * @return {!proto.reference.UpdateReferenceRequest} returns this
*/
proto.reference.UpdateReferenceRequest.prototype.setRefFourDelete = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reference.UpdateReferenceRequest} returns this
 */
proto.reference.UpdateReferenceRequest.prototype.clearRefFourDelete = function() {
  return this.setRefFourDelete(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reference.UpdateReferenceRequest.prototype.hasRefFourDelete = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DeleteByIds conditionnement_delete = 3;
 * @return {?proto.reference.DeleteByIds}
 */
proto.reference.UpdateReferenceRequest.prototype.getConditionnementDelete = function() {
  return /** @type{?proto.reference.DeleteByIds} */ (
    jspb.Message.getWrapperField(this, proto.reference.DeleteByIds, 3));
};


/**
 * @param {?proto.reference.DeleteByIds|undefined} value
 * @return {!proto.reference.UpdateReferenceRequest} returns this
*/
proto.reference.UpdateReferenceRequest.prototype.setConditionnementDelete = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reference.UpdateReferenceRequest} returns this
 */
proto.reference.UpdateReferenceRequest.prototype.clearConditionnementDelete = function() {
  return this.setConditionnementDelete(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reference.UpdateReferenceRequest.prototype.hasConditionnementDelete = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.UpdateReferenceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.UpdateReferenceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.UpdateReferenceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.UpdateReferenceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    messageError: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.UpdateReferenceResponse}
 */
proto.reference.UpdateReferenceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.UpdateReferenceResponse;
  return proto.reference.UpdateReferenceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.UpdateReferenceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.UpdateReferenceResponse}
 */
proto.reference.UpdateReferenceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.UpdateReferenceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.UpdateReferenceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.UpdateReferenceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.UpdateReferenceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessageError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool status = 1;
 * @return {boolean}
 */
proto.reference.UpdateReferenceResponse.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reference.UpdateReferenceResponse} returns this
 */
proto.reference.UpdateReferenceResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string message_error = 2;
 * @return {string}
 */
proto.reference.UpdateReferenceResponse.prototype.getMessageError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.UpdateReferenceResponse} returns this
 */
proto.reference.UpdateReferenceResponse.prototype.setMessageError = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.DeleteRefByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.DeleteRefByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.DeleteRefByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.DeleteRefByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modificationerId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.DeleteRefByIdRequest}
 */
proto.reference.DeleteRefByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.DeleteRefByIdRequest;
  return proto.reference.DeleteRefByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.DeleteRefByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.DeleteRefByIdRequest}
 */
proto.reference.DeleteRefByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModificationerId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.DeleteRefByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.DeleteRefByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.DeleteRefByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.DeleteRefByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModificationerId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.reference.DeleteRefByIdRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.DeleteRefByIdRequest} returns this
 */
proto.reference.DeleteRefByIdRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string modificationer_id = 2;
 * @return {string}
 */
proto.reference.DeleteRefByIdRequest.prototype.getModificationerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.DeleteRefByIdRequest} returns this
 */
proto.reference.DeleteRefByIdRequest.prototype.setModificationerId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.DeleteRefByIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.DeleteRefByIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.DeleteRefByIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.DeleteRefByIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    messageError: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.DeleteRefByIdResponse}
 */
proto.reference.DeleteRefByIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.DeleteRefByIdResponse;
  return proto.reference.DeleteRefByIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.DeleteRefByIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.DeleteRefByIdResponse}
 */
proto.reference.DeleteRefByIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.DeleteRefByIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.DeleteRefByIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.DeleteRefByIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.DeleteRefByIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessageError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool status = 1;
 * @return {boolean}
 */
proto.reference.DeleteRefByIdResponse.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reference.DeleteRefByIdResponse} returns this
 */
proto.reference.DeleteRefByIdResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string message_error = 2;
 * @return {string}
 */
proto.reference.DeleteRefByIdResponse.prototype.getMessageError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.DeleteRefByIdResponse} returns this
 */
proto.reference.DeleteRefByIdResponse.prototype.setMessageError = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.GetAllReferenceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.GetAllReferenceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.GetAllReferenceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.GetAllReferenceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    companyId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    warehouseId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    limit: jspb.Message.getFieldWithDefault(msg, 4, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 5, 0),
    bl: jspb.Message.getFieldWithDefault(msg, 10, ""),
    description: jspb.Message.getFieldWithDefault(msg, 11, ""),
    supplier: jspb.Message.getFieldWithDefault(msg, 12, ""),
    type: jspb.Message.getFieldWithDefault(msg, 13, ""),
    mouvement: jspb.Message.getFieldWithDefault(msg, 14, ""),
    eta: jspb.Message.getFieldWithDefault(msg, 15, ""),
    chrono: jspb.Message.getFieldWithDefault(msg, 16, ""),
    debut: jspb.Message.getFieldWithDefault(msg, 17, ""),
    fin: jspb.Message.getFieldWithDefault(msg, 18, ""),
    status: jspb.Message.getFieldWithDefault(msg, 19, ""),
    sscc: jspb.Message.getFieldWithDefault(msg, 20, ""),
    lot: jspb.Message.getFieldWithDefault(msg, 21, ""),
    cdn: jspb.Message.getFieldWithDefault(msg, 22, ""),
    zone: jspb.Message.getFieldWithDefault(msg, 23, ""),
    aisle: jspb.Message.getFieldWithDefault(msg, 24, ""),
    bay: jspb.Message.getFieldWithDefault(msg, 25, ""),
    level: jspb.Message.getFieldWithDefault(msg, 26, ""),
    typeCdn: jspb.Message.getFieldWithDefault(msg, 27, ""),
    emplacementsVide: jspb.Message.getBooleanFieldWithDefault(msg, 28, false),
    productNumber: jspb.Message.getFieldWithDefault(msg, 29, ""),
    sort: jspb.Message.getFieldWithDefault(msg, 30, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.GetAllReferenceRequest}
 */
proto.reference.GetAllReferenceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.GetAllReferenceRequest;
  return proto.reference.GetAllReferenceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.GetAllReferenceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.GetAllReferenceRequest}
 */
proto.reference.GetAllReferenceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setBl(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSupplier(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setMouvement(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setEta(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setChrono(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setDebut(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setFin(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setSscc(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setLot(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setCdn(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setZone(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setAisle(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setBay(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setLevel(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setTypeCdn(value);
      break;
    case 28:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEmplacementsVide(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductNumber(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setSort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.GetAllReferenceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.GetAllReferenceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.GetAllReferenceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.GetAllReferenceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getWarehouseId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getBl();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSupplier();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getMouvement();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getEta();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getChrono();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getDebut();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getFin();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getSscc();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getLot();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getCdn();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getZone();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getAisle();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getBay();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getLevel();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getTypeCdn();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getEmplacementsVide();
  if (f) {
    writer.writeBool(
      28,
      f
    );
  }
  f = message.getProductNumber();
  if (f.length > 0) {
    writer.writeString(
      29,
      f
    );
  }
  f = message.getSort();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
};


/**
 * optional string client_id = 1;
 * @return {string}
 */
proto.reference.GetAllReferenceRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllReferenceRequest} returns this
 */
proto.reference.GetAllReferenceRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string company_id = 2;
 * @return {string}
 */
proto.reference.GetAllReferenceRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllReferenceRequest} returns this
 */
proto.reference.GetAllReferenceRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string warehouse_id = 3;
 * @return {string}
 */
proto.reference.GetAllReferenceRequest.prototype.getWarehouseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllReferenceRequest} returns this
 */
proto.reference.GetAllReferenceRequest.prototype.setWarehouseId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 limit = 4;
 * @return {number}
 */
proto.reference.GetAllReferenceRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.GetAllReferenceRequest} returns this
 */
proto.reference.GetAllReferenceRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 offset = 5;
 * @return {number}
 */
proto.reference.GetAllReferenceRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.GetAllReferenceRequest} returns this
 */
proto.reference.GetAllReferenceRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string bl = 10;
 * @return {string}
 */
proto.reference.GetAllReferenceRequest.prototype.getBl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllReferenceRequest} returns this
 */
proto.reference.GetAllReferenceRequest.prototype.setBl = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string description = 11;
 * @return {string}
 */
proto.reference.GetAllReferenceRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllReferenceRequest} returns this
 */
proto.reference.GetAllReferenceRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string supplier = 12;
 * @return {string}
 */
proto.reference.GetAllReferenceRequest.prototype.getSupplier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllReferenceRequest} returns this
 */
proto.reference.GetAllReferenceRequest.prototype.setSupplier = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string type = 13;
 * @return {string}
 */
proto.reference.GetAllReferenceRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllReferenceRequest} returns this
 */
proto.reference.GetAllReferenceRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string mouvement = 14;
 * @return {string}
 */
proto.reference.GetAllReferenceRequest.prototype.getMouvement = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllReferenceRequest} returns this
 */
proto.reference.GetAllReferenceRequest.prototype.setMouvement = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string eta = 15;
 * @return {string}
 */
proto.reference.GetAllReferenceRequest.prototype.getEta = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllReferenceRequest} returns this
 */
proto.reference.GetAllReferenceRequest.prototype.setEta = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string chrono = 16;
 * @return {string}
 */
proto.reference.GetAllReferenceRequest.prototype.getChrono = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllReferenceRequest} returns this
 */
proto.reference.GetAllReferenceRequest.prototype.setChrono = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string debut = 17;
 * @return {string}
 */
proto.reference.GetAllReferenceRequest.prototype.getDebut = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllReferenceRequest} returns this
 */
proto.reference.GetAllReferenceRequest.prototype.setDebut = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string fin = 18;
 * @return {string}
 */
proto.reference.GetAllReferenceRequest.prototype.getFin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllReferenceRequest} returns this
 */
proto.reference.GetAllReferenceRequest.prototype.setFin = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string status = 19;
 * @return {string}
 */
proto.reference.GetAllReferenceRequest.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllReferenceRequest} returns this
 */
proto.reference.GetAllReferenceRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string sscc = 20;
 * @return {string}
 */
proto.reference.GetAllReferenceRequest.prototype.getSscc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllReferenceRequest} returns this
 */
proto.reference.GetAllReferenceRequest.prototype.setSscc = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string lot = 21;
 * @return {string}
 */
proto.reference.GetAllReferenceRequest.prototype.getLot = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllReferenceRequest} returns this
 */
proto.reference.GetAllReferenceRequest.prototype.setLot = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string cdn = 22;
 * @return {string}
 */
proto.reference.GetAllReferenceRequest.prototype.getCdn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllReferenceRequest} returns this
 */
proto.reference.GetAllReferenceRequest.prototype.setCdn = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string zone = 23;
 * @return {string}
 */
proto.reference.GetAllReferenceRequest.prototype.getZone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllReferenceRequest} returns this
 */
proto.reference.GetAllReferenceRequest.prototype.setZone = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string aisle = 24;
 * @return {string}
 */
proto.reference.GetAllReferenceRequest.prototype.getAisle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllReferenceRequest} returns this
 */
proto.reference.GetAllReferenceRequest.prototype.setAisle = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string bay = 25;
 * @return {string}
 */
proto.reference.GetAllReferenceRequest.prototype.getBay = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllReferenceRequest} returns this
 */
proto.reference.GetAllReferenceRequest.prototype.setBay = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string level = 26;
 * @return {string}
 */
proto.reference.GetAllReferenceRequest.prototype.getLevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllReferenceRequest} returns this
 */
proto.reference.GetAllReferenceRequest.prototype.setLevel = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional string type_cdn = 27;
 * @return {string}
 */
proto.reference.GetAllReferenceRequest.prototype.getTypeCdn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllReferenceRequest} returns this
 */
proto.reference.GetAllReferenceRequest.prototype.setTypeCdn = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional bool emplacements_vide = 28;
 * @return {boolean}
 */
proto.reference.GetAllReferenceRequest.prototype.getEmplacementsVide = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 28, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reference.GetAllReferenceRequest} returns this
 */
proto.reference.GetAllReferenceRequest.prototype.setEmplacementsVide = function(value) {
  return jspb.Message.setProto3BooleanField(this, 28, value);
};


/**
 * optional string product_number = 29;
 * @return {string}
 */
proto.reference.GetAllReferenceRequest.prototype.getProductNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllReferenceRequest} returns this
 */
proto.reference.GetAllReferenceRequest.prototype.setProductNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 29, value);
};


/**
 * optional string sort = 30;
 * @return {string}
 */
proto.reference.GetAllReferenceRequest.prototype.getSort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetAllReferenceRequest} returns this
 */
proto.reference.GetAllReferenceRequest.prototype.setSort = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.CheckExistEanVarianteForConditonnametRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.CheckExistEanVarianteForConditonnametRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.CheckExistEanVarianteForConditonnametRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.CheckExistEanVarianteForConditonnametRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ean: jspb.Message.getFieldWithDefault(msg, 1, ""),
    variante: jspb.Message.getFieldWithDefault(msg, 2, ""),
    id: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.CheckExistEanVarianteForConditonnametRequest}
 */
proto.reference.CheckExistEanVarianteForConditonnametRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.CheckExistEanVarianteForConditonnametRequest;
  return proto.reference.CheckExistEanVarianteForConditonnametRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.CheckExistEanVarianteForConditonnametRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.CheckExistEanVarianteForConditonnametRequest}
 */
proto.reference.CheckExistEanVarianteForConditonnametRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEan(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVariante(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.CheckExistEanVarianteForConditonnametRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.CheckExistEanVarianteForConditonnametRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.CheckExistEanVarianteForConditonnametRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.CheckExistEanVarianteForConditonnametRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEan();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVariante();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string ean = 1;
 * @return {string}
 */
proto.reference.CheckExistEanVarianteForConditonnametRequest.prototype.getEan = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.CheckExistEanVarianteForConditonnametRequest} returns this
 */
proto.reference.CheckExistEanVarianteForConditonnametRequest.prototype.setEan = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string variante = 2;
 * @return {string}
 */
proto.reference.CheckExistEanVarianteForConditonnametRequest.prototype.getVariante = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.CheckExistEanVarianteForConditonnametRequest} returns this
 */
proto.reference.CheckExistEanVarianteForConditonnametRequest.prototype.setVariante = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string id = 3;
 * @return {string}
 */
proto.reference.CheckExistEanVarianteForConditonnametRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.CheckExistEanVarianteForConditonnametRequest} returns this
 */
proto.reference.CheckExistEanVarianteForConditonnametRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.CheckExistEanVarianteForConditonnametResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.CheckExistEanVarianteForConditonnametResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.CheckExistEanVarianteForConditonnametResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.CheckExistEanVarianteForConditonnametResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entry: (f = msg.getEntry()) && proto_conditionnement_conditionnement_pb.Conditionnement.toObject(includeInstance, f),
    messageerror: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.CheckExistEanVarianteForConditonnametResponse}
 */
proto.reference.CheckExistEanVarianteForConditonnametResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.CheckExistEanVarianteForConditonnametResponse;
  return proto.reference.CheckExistEanVarianteForConditonnametResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.CheckExistEanVarianteForConditonnametResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.CheckExistEanVarianteForConditonnametResponse}
 */
proto.reference.CheckExistEanVarianteForConditonnametResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_conditionnement_conditionnement_pb.Conditionnement;
      reader.readMessage(value,proto_conditionnement_conditionnement_pb.Conditionnement.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.CheckExistEanVarianteForConditonnametResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.CheckExistEanVarianteForConditonnametResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.CheckExistEanVarianteForConditonnametResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.CheckExistEanVarianteForConditonnametResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_conditionnement_conditionnement_pb.Conditionnement.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional conditionnement.Conditionnement entry = 1;
 * @return {?proto.conditionnement.Conditionnement}
 */
proto.reference.CheckExistEanVarianteForConditonnametResponse.prototype.getEntry = function() {
  return /** @type{?proto.conditionnement.Conditionnement} */ (
    jspb.Message.getWrapperField(this, proto_conditionnement_conditionnement_pb.Conditionnement, 1));
};


/**
 * @param {?proto.conditionnement.Conditionnement|undefined} value
 * @return {!proto.reference.CheckExistEanVarianteForConditonnametResponse} returns this
*/
proto.reference.CheckExistEanVarianteForConditonnametResponse.prototype.setEntry = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reference.CheckExistEanVarianteForConditonnametResponse} returns this
 */
proto.reference.CheckExistEanVarianteForConditonnametResponse.prototype.clearEntry = function() {
  return this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reference.CheckExistEanVarianteForConditonnametResponse.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string messageError = 2;
 * @return {string}
 */
proto.reference.CheckExistEanVarianteForConditonnametResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.CheckExistEanVarianteForConditonnametResponse} returns this
 */
proto.reference.CheckExistEanVarianteForConditonnametResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.HistoryChange.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.HistoryChange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.HistoryChange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.HistoryChange.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    field: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: jspb.Message.getFieldWithDefault(msg, 3, ""),
    oldValue: jspb.Message.getFieldWithDefault(msg, 4, ""),
    newValue: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.HistoryChange}
 */
proto.reference.HistoryChange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.HistoryChange;
  return proto.reference.HistoryChange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.HistoryChange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.HistoryChange}
 */
proto.reference.HistoryChange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setField(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOldValue(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.HistoryChange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.HistoryChange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.HistoryChange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.HistoryChange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getField();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOldValue();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getNewValue();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string event_type = 1;
 * @return {string}
 */
proto.reference.HistoryChange.prototype.getEventType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.HistoryChange} returns this
 */
proto.reference.HistoryChange.prototype.setEventType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string field = 2;
 * @return {string}
 */
proto.reference.HistoryChange.prototype.getField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.HistoryChange} returns this
 */
proto.reference.HistoryChange.prototype.setField = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.reference.HistoryChange.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.HistoryChange} returns this
 */
proto.reference.HistoryChange.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string old_value = 4;
 * @return {string}
 */
proto.reference.HistoryChange.prototype.getOldValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.HistoryChange} returns this
 */
proto.reference.HistoryChange.prototype.setOldValue = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string new_value = 5;
 * @return {string}
 */
proto.reference.HistoryChange.prototype.getNewValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.HistoryChange} returns this
 */
proto.reference.HistoryChange.prototype.setNewValue = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.reference.RefHistory.repeatedFields_ = [18];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.RefHistory.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.RefHistory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.RefHistory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.RefHistory.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    movementType: jspb.Message.getFieldWithDefault(msg, 3, ""),
    movementState: jspb.Message.getFieldWithDefault(msg, 4, ""),
    code: jspb.Message.getFieldWithDefault(msg, 5, ""),
    objectType: jspb.Message.getFieldWithDefault(msg, 6, ""),
    objectId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    objectNumber: jspb.Message.getFieldWithDefault(msg, 8, ""),
    description: jspb.Message.getFieldWithDefault(msg, 9, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 10, ""),
    userName: jspb.Message.getFieldWithDefault(msg, 11, ""),
    clientCodeNom: jspb.Message.getFieldWithDefault(msg, 12, ""),
    companyCodeNom: jspb.Message.getFieldWithDefault(msg, 13, ""),
    warehouseCodeNom: jspb.Message.getFieldWithDefault(msg, 14, ""),
    chrono: jspb.Message.getFieldWithDefault(msg, 15, ""),
    action: jspb.Message.getFieldWithDefault(msg, 16, ""),
    eventType: jspb.Message.getFieldWithDefault(msg, 17, ""),
    changesList: jspb.Message.toObjectList(msg.getChangesList(),
    proto.reference.HistoryChange.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.RefHistory}
 */
proto.reference.RefHistory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.RefHistory;
  return proto.reference.RefHistory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.RefHistory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.RefHistory}
 */
proto.reference.RefHistory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMovementType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMovementState(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectType(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectNumber(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientCodeNom(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyCodeNom(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseCodeNom(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setChrono(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setAction(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventType(value);
      break;
    case 18:
      var value = new proto.reference.HistoryChange;
      reader.readMessage(value,proto.reference.HistoryChange.deserializeBinaryFromReader);
      msg.addChanges(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.RefHistory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.RefHistory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.RefHistory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.RefHistory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getMovementType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMovementState();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getObjectType();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getObjectId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getObjectNumber();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getClientCodeNom();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getCompanyCodeNom();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getWarehouseCodeNom();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getChrono();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getAction();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getEventType();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getChangesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      18,
      f,
      proto.reference.HistoryChange.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.reference.RefHistory.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.RefHistory} returns this
 */
proto.reference.RefHistory.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 created_at = 2;
 * @return {number}
 */
proto.reference.RefHistory.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.RefHistory} returns this
 */
proto.reference.RefHistory.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string movement_type = 3;
 * @return {string}
 */
proto.reference.RefHistory.prototype.getMovementType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.RefHistory} returns this
 */
proto.reference.RefHistory.prototype.setMovementType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string movement_state = 4;
 * @return {string}
 */
proto.reference.RefHistory.prototype.getMovementState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.RefHistory} returns this
 */
proto.reference.RefHistory.prototype.setMovementState = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string code = 5;
 * @return {string}
 */
proto.reference.RefHistory.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.RefHistory} returns this
 */
proto.reference.RefHistory.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string object_type = 6;
 * @return {string}
 */
proto.reference.RefHistory.prototype.getObjectType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.RefHistory} returns this
 */
proto.reference.RefHistory.prototype.setObjectType = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string object_id = 7;
 * @return {string}
 */
proto.reference.RefHistory.prototype.getObjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.RefHistory} returns this
 */
proto.reference.RefHistory.prototype.setObjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string object_number = 8;
 * @return {string}
 */
proto.reference.RefHistory.prototype.getObjectNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.RefHistory} returns this
 */
proto.reference.RefHistory.prototype.setObjectNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string description = 9;
 * @return {string}
 */
proto.reference.RefHistory.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.RefHistory} returns this
 */
proto.reference.RefHistory.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string user_id = 10;
 * @return {string}
 */
proto.reference.RefHistory.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.RefHistory} returns this
 */
proto.reference.RefHistory.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string user_name = 11;
 * @return {string}
 */
proto.reference.RefHistory.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.RefHistory} returns this
 */
proto.reference.RefHistory.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string client_code_nom = 12;
 * @return {string}
 */
proto.reference.RefHistory.prototype.getClientCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.RefHistory} returns this
 */
proto.reference.RefHistory.prototype.setClientCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string company_code_nom = 13;
 * @return {string}
 */
proto.reference.RefHistory.prototype.getCompanyCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.RefHistory} returns this
 */
proto.reference.RefHistory.prototype.setCompanyCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string warehouse_code_nom = 14;
 * @return {string}
 */
proto.reference.RefHistory.prototype.getWarehouseCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.RefHistory} returns this
 */
proto.reference.RefHistory.prototype.setWarehouseCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string chrono = 15;
 * @return {string}
 */
proto.reference.RefHistory.prototype.getChrono = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.RefHistory} returns this
 */
proto.reference.RefHistory.prototype.setChrono = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string action = 16;
 * @return {string}
 */
proto.reference.RefHistory.prototype.getAction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.RefHistory} returns this
 */
proto.reference.RefHistory.prototype.setAction = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string event_type = 17;
 * @return {string}
 */
proto.reference.RefHistory.prototype.getEventType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.RefHistory} returns this
 */
proto.reference.RefHistory.prototype.setEventType = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * repeated HistoryChange changes = 18;
 * @return {!Array<!proto.reference.HistoryChange>}
 */
proto.reference.RefHistory.prototype.getChangesList = function() {
  return /** @type{!Array<!proto.reference.HistoryChange>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.reference.HistoryChange, 18));
};


/**
 * @param {!Array<!proto.reference.HistoryChange>} value
 * @return {!proto.reference.RefHistory} returns this
*/
proto.reference.RefHistory.prototype.setChangesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 18, value);
};


/**
 * @param {!proto.reference.HistoryChange=} opt_value
 * @param {number=} opt_index
 * @return {!proto.reference.HistoryChange}
 */
proto.reference.RefHistory.prototype.addChanges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 18, opt_value, proto.reference.HistoryChange, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reference.RefHistory} returns this
 */
proto.reference.RefHistory.prototype.clearChangesList = function() {
  return this.setChangesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.GetHistoryByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.GetHistoryByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.GetHistoryByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.GetHistoryByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 3, 0),
    from: jspb.Message.getFieldWithDefault(msg, 4, 0),
    to: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.GetHistoryByIdRequest}
 */
proto.reference.GetHistoryByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.GetHistoryByIdRequest;
  return proto.reference.GetHistoryByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.GetHistoryByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.GetHistoryByIdRequest}
 */
proto.reference.GetHistoryByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFrom(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.GetHistoryByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.GetHistoryByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.GetHistoryByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.GetHistoryByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.reference.GetHistoryByIdRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetHistoryByIdRequest} returns this
 */
proto.reference.GetHistoryByIdRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 limit = 2;
 * @return {number}
 */
proto.reference.GetHistoryByIdRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.GetHistoryByIdRequest} returns this
 */
proto.reference.GetHistoryByIdRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 offset = 3;
 * @return {number}
 */
proto.reference.GetHistoryByIdRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.GetHistoryByIdRequest} returns this
 */
proto.reference.GetHistoryByIdRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 from = 4;
 * @return {number}
 */
proto.reference.GetHistoryByIdRequest.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.GetHistoryByIdRequest} returns this
 */
proto.reference.GetHistoryByIdRequest.prototype.setFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 to = 5;
 * @return {number}
 */
proto.reference.GetHistoryByIdRequest.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.reference.GetHistoryByIdRequest} returns this
 */
proto.reference.GetHistoryByIdRequest.prototype.setTo = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.reference.GetHistoryByIdResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.GetHistoryByIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.GetHistoryByIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.GetHistoryByIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.GetHistoryByIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto.reference.RefHistory.toObject, includeInstance),
    metadata: (f = msg.getMetadata()) && proto.reference.MetaData.toObject(includeInstance, f),
    messageerror: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.GetHistoryByIdResponse}
 */
proto.reference.GetHistoryByIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.GetHistoryByIdResponse;
  return proto.reference.GetHistoryByIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.GetHistoryByIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.GetHistoryByIdResponse}
 */
proto.reference.GetHistoryByIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reference.RefHistory;
      reader.readMessage(value,proto.reference.RefHistory.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    case 2:
      var value = new proto.reference.MetaData;
      reader.readMessage(value,proto.reference.MetaData.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.GetHistoryByIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.GetHistoryByIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.GetHistoryByIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.GetHistoryByIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.reference.RefHistory.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.reference.MetaData.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated RefHistory entry = 1;
 * @return {!Array<!proto.reference.RefHistory>}
 */
proto.reference.GetHistoryByIdResponse.prototype.getEntryList = function() {
  return /** @type{!Array<!proto.reference.RefHistory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.reference.RefHistory, 1));
};


/**
 * @param {!Array<!proto.reference.RefHistory>} value
 * @return {!proto.reference.GetHistoryByIdResponse} returns this
*/
proto.reference.GetHistoryByIdResponse.prototype.setEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.reference.RefHistory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.reference.RefHistory}
 */
proto.reference.GetHistoryByIdResponse.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.reference.RefHistory, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reference.GetHistoryByIdResponse} returns this
 */
proto.reference.GetHistoryByIdResponse.prototype.clearEntryList = function() {
  return this.setEntryList([]);
};


/**
 * optional MetaData metadata = 2;
 * @return {?proto.reference.MetaData}
 */
proto.reference.GetHistoryByIdResponse.prototype.getMetadata = function() {
  return /** @type{?proto.reference.MetaData} */ (
    jspb.Message.getWrapperField(this, proto.reference.MetaData, 2));
};


/**
 * @param {?proto.reference.MetaData|undefined} value
 * @return {!proto.reference.GetHistoryByIdResponse} returns this
*/
proto.reference.GetHistoryByIdResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reference.GetHistoryByIdResponse} returns this
 */
proto.reference.GetHistoryByIdResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reference.GetHistoryByIdResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string messageError = 3;
 * @return {string}
 */
proto.reference.GetHistoryByIdResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.GetHistoryByIdResponse} returns this
 */
proto.reference.GetHistoryByIdResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.ReferenceProduct.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.ReferenceProduct.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.ReferenceProduct} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.ReferenceProduct.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    blocageEntree: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    blocageSortie: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    preBlockStatus: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.ReferenceProduct}
 */
proto.reference.ReferenceProduct.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.ReferenceProduct;
  return proto.reference.ReferenceProduct.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.ReferenceProduct} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.ReferenceProduct}
 */
proto.reference.ReferenceProduct.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBlocageEntree(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBlocageSortie(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreBlockStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.ReferenceProduct.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.ReferenceProduct.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.ReferenceProduct} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.ReferenceProduct.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBlocageEntree();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getBlocageSortie();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getPreBlockStatus();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.reference.ReferenceProduct.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.ReferenceProduct} returns this
 */
proto.reference.ReferenceProduct.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool blocage_entree = 2;
 * @return {boolean}
 */
proto.reference.ReferenceProduct.prototype.getBlocageEntree = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reference.ReferenceProduct} returns this
 */
proto.reference.ReferenceProduct.prototype.setBlocageEntree = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool blocage_sortie = 3;
 * @return {boolean}
 */
proto.reference.ReferenceProduct.prototype.getBlocageSortie = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reference.ReferenceProduct} returns this
 */
proto.reference.ReferenceProduct.prototype.setBlocageSortie = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string pre_block_status = 4;
 * @return {string}
 */
proto.reference.ReferenceProduct.prototype.getPreBlockStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.ReferenceProduct} returns this
 */
proto.reference.ReferenceProduct.prototype.setPreBlockStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.UpdateBlockLotRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.UpdateBlockLotRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.UpdateBlockLotRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.UpdateBlockLotRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    refrenceId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    lotBlockStatus: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    motif: jspb.Message.getFieldWithDefault(msg, 3, ""),
    origine: jspb.Message.getFieldWithDefault(msg, 4, ""),
    companyId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    warehouseId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    clientId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    lot: jspb.Message.getFieldWithDefault(msg, 8, ""),
    usercode: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.UpdateBlockLotRequest}
 */
proto.reference.UpdateBlockLotRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.UpdateBlockLotRequest;
  return proto.reference.UpdateBlockLotRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.UpdateBlockLotRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.UpdateBlockLotRequest}
 */
proto.reference.UpdateBlockLotRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRefrenceId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLotBlockStatus(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMotif(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrigine(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLot(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsercode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.UpdateBlockLotRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.UpdateBlockLotRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.UpdateBlockLotRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.UpdateBlockLotRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRefrenceId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLotBlockStatus();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getMotif();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOrigine();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getWarehouseId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLot();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getUsercode();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string refrence_id = 1;
 * @return {string}
 */
proto.reference.UpdateBlockLotRequest.prototype.getRefrenceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.UpdateBlockLotRequest} returns this
 */
proto.reference.UpdateBlockLotRequest.prototype.setRefrenceId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool lot_block_status = 2;
 * @return {boolean}
 */
proto.reference.UpdateBlockLotRequest.prototype.getLotBlockStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reference.UpdateBlockLotRequest} returns this
 */
proto.reference.UpdateBlockLotRequest.prototype.setLotBlockStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string motif = 3;
 * @return {string}
 */
proto.reference.UpdateBlockLotRequest.prototype.getMotif = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.UpdateBlockLotRequest} returns this
 */
proto.reference.UpdateBlockLotRequest.prototype.setMotif = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string origine = 4;
 * @return {string}
 */
proto.reference.UpdateBlockLotRequest.prototype.getOrigine = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.UpdateBlockLotRequest} returns this
 */
proto.reference.UpdateBlockLotRequest.prototype.setOrigine = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string company_id = 5;
 * @return {string}
 */
proto.reference.UpdateBlockLotRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.UpdateBlockLotRequest} returns this
 */
proto.reference.UpdateBlockLotRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string warehouse_id = 6;
 * @return {string}
 */
proto.reference.UpdateBlockLotRequest.prototype.getWarehouseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.UpdateBlockLotRequest} returns this
 */
proto.reference.UpdateBlockLotRequest.prototype.setWarehouseId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string client_id = 7;
 * @return {string}
 */
proto.reference.UpdateBlockLotRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.UpdateBlockLotRequest} returns this
 */
proto.reference.UpdateBlockLotRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string lot = 8;
 * @return {string}
 */
proto.reference.UpdateBlockLotRequest.prototype.getLot = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.UpdateBlockLotRequest} returns this
 */
proto.reference.UpdateBlockLotRequest.prototype.setLot = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string usercode = 9;
 * @return {string}
 */
proto.reference.UpdateBlockLotRequest.prototype.getUsercode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.UpdateBlockLotRequest} returns this
 */
proto.reference.UpdateBlockLotRequest.prototype.setUsercode = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reference.UpdateBlockLotResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.reference.UpdateBlockLotResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reference.UpdateBlockLotResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.UpdateBlockLotResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    messageError: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reference.UpdateBlockLotResponse}
 */
proto.reference.UpdateBlockLotResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reference.UpdateBlockLotResponse;
  return proto.reference.UpdateBlockLotResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reference.UpdateBlockLotResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reference.UpdateBlockLotResponse}
 */
proto.reference.UpdateBlockLotResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reference.UpdateBlockLotResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reference.UpdateBlockLotResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reference.UpdateBlockLotResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reference.UpdateBlockLotResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessageError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.reference.UpdateBlockLotResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.UpdateBlockLotResponse} returns this
 */
proto.reference.UpdateBlockLotResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string message_error = 2;
 * @return {string}
 */
proto.reference.UpdateBlockLotResponse.prototype.getMessageError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reference.UpdateBlockLotResponse} returns this
 */
proto.reference.UpdateBlockLotResponse.prototype.setMessageError = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.reference);
