/**
 * @fileoverview gRPC-Web generated client stub for reference
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.21.12
// source: proto/reference/reference.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as proto_export_export_pb from '../../proto/export/export_pb'; // proto import: "proto/export/export.proto"
import * as proto_reference_reference_pb from '../../proto/reference/reference_pb'; // proto import: "proto/reference/reference.proto"


export class ReferenceServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreate = new grpcWeb.MethodDescriptor(
    '/reference.ReferenceService/Create',
    grpcWeb.MethodType.UNARY,
    proto_reference_reference_pb.CreateReferenceRequest,
    proto_reference_reference_pb.CreateReferenceResponse,
    (request: proto_reference_reference_pb.CreateReferenceRequest) => {
      return request.serializeBinary();
    },
    proto_reference_reference_pb.CreateReferenceResponse.deserializeBinary
  );

  create(
    request: proto_reference_reference_pb.CreateReferenceRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reference_reference_pb.CreateReferenceResponse>;

  create(
    request: proto_reference_reference_pb.CreateReferenceRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.CreateReferenceResponse) => void): grpcWeb.ClientReadableStream<proto_reference_reference_pb.CreateReferenceResponse>;

  create(
    request: proto_reference_reference_pb.CreateReferenceRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.CreateReferenceResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reference.ReferenceService/Create',
        request,
        metadata || {},
        this.methodDescriptorCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reference.ReferenceService/Create',
    request,
    metadata || {},
    this.methodDescriptorCreate);
  }

  methodDescriptorUpdateByID = new grpcWeb.MethodDescriptor(
    '/reference.ReferenceService/UpdateByID',
    grpcWeb.MethodType.UNARY,
    proto_reference_reference_pb.UpdateReferenceRequest,
    proto_reference_reference_pb.UpdateReferenceResponse,
    (request: proto_reference_reference_pb.UpdateReferenceRequest) => {
      return request.serializeBinary();
    },
    proto_reference_reference_pb.UpdateReferenceResponse.deserializeBinary
  );

  updateByID(
    request: proto_reference_reference_pb.UpdateReferenceRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reference_reference_pb.UpdateReferenceResponse>;

  updateByID(
    request: proto_reference_reference_pb.UpdateReferenceRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.UpdateReferenceResponse) => void): grpcWeb.ClientReadableStream<proto_reference_reference_pb.UpdateReferenceResponse>;

  updateByID(
    request: proto_reference_reference_pb.UpdateReferenceRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.UpdateReferenceResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reference.ReferenceService/UpdateByID',
        request,
        metadata || {},
        this.methodDescriptorUpdateByID,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reference.ReferenceService/UpdateByID',
    request,
    metadata || {},
    this.methodDescriptorUpdateByID);
  }

  methodDescriptorDeleteByID = new grpcWeb.MethodDescriptor(
    '/reference.ReferenceService/DeleteByID',
    grpcWeb.MethodType.UNARY,
    proto_reference_reference_pb.DeleteRefByIdRequest,
    proto_reference_reference_pb.DeleteRefByIdResponse,
    (request: proto_reference_reference_pb.DeleteRefByIdRequest) => {
      return request.serializeBinary();
    },
    proto_reference_reference_pb.DeleteRefByIdResponse.deserializeBinary
  );

  deleteByID(
    request: proto_reference_reference_pb.DeleteRefByIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reference_reference_pb.DeleteRefByIdResponse>;

  deleteByID(
    request: proto_reference_reference_pb.DeleteRefByIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.DeleteRefByIdResponse) => void): grpcWeb.ClientReadableStream<proto_reference_reference_pb.DeleteRefByIdResponse>;

  deleteByID(
    request: proto_reference_reference_pb.DeleteRefByIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.DeleteRefByIdResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reference.ReferenceService/DeleteByID',
        request,
        metadata || {},
        this.methodDescriptorDeleteByID,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reference.ReferenceService/DeleteByID',
    request,
    metadata || {},
    this.methodDescriptorDeleteByID);
  }

  methodDescriptorGetById = new grpcWeb.MethodDescriptor(
    '/reference.ReferenceService/GetById',
    grpcWeb.MethodType.UNARY,
    proto_reference_reference_pb.GetByIdRequest,
    proto_reference_reference_pb.CreateReferenceResponse,
    (request: proto_reference_reference_pb.GetByIdRequest) => {
      return request.serializeBinary();
    },
    proto_reference_reference_pb.CreateReferenceResponse.deserializeBinary
  );

  getById(
    request: proto_reference_reference_pb.GetByIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reference_reference_pb.CreateReferenceResponse>;

  getById(
    request: proto_reference_reference_pb.GetByIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.CreateReferenceResponse) => void): grpcWeb.ClientReadableStream<proto_reference_reference_pb.CreateReferenceResponse>;

  getById(
    request: proto_reference_reference_pb.GetByIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.CreateReferenceResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reference.ReferenceService/GetById',
        request,
        metadata || {},
        this.methodDescriptorGetById,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reference.ReferenceService/GetById',
    request,
    metadata || {},
    this.methodDescriptorGetById);
  }

  methodDescriptorGetByNum = new grpcWeb.MethodDescriptor(
    '/reference.ReferenceService/GetByNum',
    grpcWeb.MethodType.UNARY,
    proto_reference_reference_pb.GetByNumRequest,
    proto_reference_reference_pb.CreateReferenceResponse,
    (request: proto_reference_reference_pb.GetByNumRequest) => {
      return request.serializeBinary();
    },
    proto_reference_reference_pb.CreateReferenceResponse.deserializeBinary
  );

  getByNum(
    request: proto_reference_reference_pb.GetByNumRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reference_reference_pb.CreateReferenceResponse>;

  getByNum(
    request: proto_reference_reference_pb.GetByNumRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.CreateReferenceResponse) => void): grpcWeb.ClientReadableStream<proto_reference_reference_pb.CreateReferenceResponse>;

  getByNum(
    request: proto_reference_reference_pb.GetByNumRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.CreateReferenceResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reference.ReferenceService/GetByNum',
        request,
        metadata || {},
        this.methodDescriptorGetByNum,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reference.ReferenceService/GetByNum',
    request,
    metadata || {},
    this.methodDescriptorGetByNum);
  }

  methodDescriptorGetByNumForAtt = new grpcWeb.MethodDescriptor(
    '/reference.ReferenceService/GetByNumForAtt',
    grpcWeb.MethodType.UNARY,
    proto_reference_reference_pb.GetByNumRequest,
    proto_reference_reference_pb.CreateReferenceResponse,
    (request: proto_reference_reference_pb.GetByNumRequest) => {
      return request.serializeBinary();
    },
    proto_reference_reference_pb.CreateReferenceResponse.deserializeBinary
  );

  getByNumForAtt(
    request: proto_reference_reference_pb.GetByNumRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reference_reference_pb.CreateReferenceResponse>;

  getByNumForAtt(
    request: proto_reference_reference_pb.GetByNumRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.CreateReferenceResponse) => void): grpcWeb.ClientReadableStream<proto_reference_reference_pb.CreateReferenceResponse>;

  getByNumForAtt(
    request: proto_reference_reference_pb.GetByNumRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.CreateReferenceResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reference.ReferenceService/GetByNumForAtt',
        request,
        metadata || {},
        this.methodDescriptorGetByNumForAtt,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reference.ReferenceService/GetByNumForAtt',
    request,
    metadata || {},
    this.methodDescriptorGetByNumForAtt);
  }

  methodDescriptorGetAll = new grpcWeb.MethodDescriptor(
    '/reference.ReferenceService/GetAll',
    grpcWeb.MethodType.UNARY,
    proto_reference_reference_pb.GetAllRequest,
    proto_reference_reference_pb.GetAllResponse,
    (request: proto_reference_reference_pb.GetAllRequest) => {
      return request.serializeBinary();
    },
    proto_reference_reference_pb.GetAllResponse.deserializeBinary
  );

  getAll(
    request: proto_reference_reference_pb.GetAllRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reference_reference_pb.GetAllResponse>;

  getAll(
    request: proto_reference_reference_pb.GetAllRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.GetAllResponse) => void): grpcWeb.ClientReadableStream<proto_reference_reference_pb.GetAllResponse>;

  getAll(
    request: proto_reference_reference_pb.GetAllRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.GetAllResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reference.ReferenceService/GetAll',
        request,
        metadata || {},
        this.methodDescriptorGetAll,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reference.ReferenceService/GetAll',
    request,
    metadata || {},
    this.methodDescriptorGetAll);
  }

  methodDescriptorCheckExistRefFour = new grpcWeb.MethodDescriptor(
    '/reference.ReferenceService/CheckExistRefFour',
    grpcWeb.MethodType.UNARY,
    proto_reference_reference_pb.CheckExistRefFourRequest,
    proto_reference_reference_pb.CheckExistRefFourResponse,
    (request: proto_reference_reference_pb.CheckExistRefFourRequest) => {
      return request.serializeBinary();
    },
    proto_reference_reference_pb.CheckExistRefFourResponse.deserializeBinary
  );

  checkExistRefFour(
    request: proto_reference_reference_pb.CheckExistRefFourRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reference_reference_pb.CheckExistRefFourResponse>;

  checkExistRefFour(
    request: proto_reference_reference_pb.CheckExistRefFourRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.CheckExistRefFourResponse) => void): grpcWeb.ClientReadableStream<proto_reference_reference_pb.CheckExistRefFourResponse>;

  checkExistRefFour(
    request: proto_reference_reference_pb.CheckExistRefFourRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.CheckExistRefFourResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reference.ReferenceService/CheckExistRefFour',
        request,
        metadata || {},
        this.methodDescriptorCheckExistRefFour,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reference.ReferenceService/CheckExistRefFour',
    request,
    metadata || {},
    this.methodDescriptorCheckExistRefFour);
  }

  methodDescriptorCheckExistEanAndVarianteForConditionnement = new grpcWeb.MethodDescriptor(
    '/reference.ReferenceService/CheckExistEanAndVarianteForConditionnement',
    grpcWeb.MethodType.UNARY,
    proto_reference_reference_pb.CheckExistEanVarianteForConditonnametRequest,
    proto_reference_reference_pb.CheckExistEanVarianteForConditonnametResponse,
    (request: proto_reference_reference_pb.CheckExistEanVarianteForConditonnametRequest) => {
      return request.serializeBinary();
    },
    proto_reference_reference_pb.CheckExistEanVarianteForConditonnametResponse.deserializeBinary
  );

  checkExistEanAndVarianteForConditionnement(
    request: proto_reference_reference_pb.CheckExistEanVarianteForConditonnametRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reference_reference_pb.CheckExistEanVarianteForConditonnametResponse>;

  checkExistEanAndVarianteForConditionnement(
    request: proto_reference_reference_pb.CheckExistEanVarianteForConditonnametRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.CheckExistEanVarianteForConditonnametResponse) => void): grpcWeb.ClientReadableStream<proto_reference_reference_pb.CheckExistEanVarianteForConditonnametResponse>;

  checkExistEanAndVarianteForConditionnement(
    request: proto_reference_reference_pb.CheckExistEanVarianteForConditonnametRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.CheckExistEanVarianteForConditonnametResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reference.ReferenceService/CheckExistEanAndVarianteForConditionnement',
        request,
        metadata || {},
        this.methodDescriptorCheckExistEanAndVarianteForConditionnement,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reference.ReferenceService/CheckExistEanAndVarianteForConditionnement',
    request,
    metadata || {},
    this.methodDescriptorCheckExistEanAndVarianteForConditionnement);
  }

  methodDescriptorGetByRefFourDitgit = new grpcWeb.MethodDescriptor(
    '/reference.ReferenceService/GetByRefFourDitgit',
    grpcWeb.MethodType.UNARY,
    proto_reference_reference_pb.CheckExistRefFourRequest,
    proto_reference_reference_pb.GetByRefFourDitgitResponse,
    (request: proto_reference_reference_pb.CheckExistRefFourRequest) => {
      return request.serializeBinary();
    },
    proto_reference_reference_pb.GetByRefFourDitgitResponse.deserializeBinary
  );

  getByRefFourDitgit(
    request: proto_reference_reference_pb.CheckExistRefFourRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reference_reference_pb.GetByRefFourDitgitResponse>;

  getByRefFourDitgit(
    request: proto_reference_reference_pb.CheckExistRefFourRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.GetByRefFourDitgitResponse) => void): grpcWeb.ClientReadableStream<proto_reference_reference_pb.GetByRefFourDitgitResponse>;

  getByRefFourDitgit(
    request: proto_reference_reference_pb.CheckExistRefFourRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.GetByRefFourDitgitResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reference.ReferenceService/GetByRefFourDitgit',
        request,
        metadata || {},
        this.methodDescriptorGetByRefFourDitgit,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reference.ReferenceService/GetByRefFourDitgit',
    request,
    metadata || {},
    this.methodDescriptorGetByRefFourDitgit);
  }

  methodDescriptorGetByNomDigit = new grpcWeb.MethodDescriptor(
    '/reference.ReferenceService/GetByNomDigit',
    grpcWeb.MethodType.UNARY,
    proto_reference_reference_pb.GetByNomRefDigitRequest,
    proto_reference_reference_pb.GetByRefFourDitgitResponse,
    (request: proto_reference_reference_pb.GetByNomRefDigitRequest) => {
      return request.serializeBinary();
    },
    proto_reference_reference_pb.GetByRefFourDitgitResponse.deserializeBinary
  );

  getByNomDigit(
    request: proto_reference_reference_pb.GetByNomRefDigitRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reference_reference_pb.GetByRefFourDitgitResponse>;

  getByNomDigit(
    request: proto_reference_reference_pb.GetByNomRefDigitRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.GetByRefFourDitgitResponse) => void): grpcWeb.ClientReadableStream<proto_reference_reference_pb.GetByRefFourDitgitResponse>;

  getByNomDigit(
    request: proto_reference_reference_pb.GetByNomRefDigitRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.GetByRefFourDitgitResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reference.ReferenceService/GetByNomDigit',
        request,
        metadata || {},
        this.methodDescriptorGetByNomDigit,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reference.ReferenceService/GetByNomDigit',
    request,
    metadata || {},
    this.methodDescriptorGetByNomDigit);
  }

  methodDescriptorGetByIdForAtt = new grpcWeb.MethodDescriptor(
    '/reference.ReferenceService/GetByIdForAtt',
    grpcWeb.MethodType.UNARY,
    proto_reference_reference_pb.GetByIdRequest,
    proto_reference_reference_pb.CreateReferenceResponse,
    (request: proto_reference_reference_pb.GetByIdRequest) => {
      return request.serializeBinary();
    },
    proto_reference_reference_pb.CreateReferenceResponse.deserializeBinary
  );

  getByIdForAtt(
    request: proto_reference_reference_pb.GetByIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reference_reference_pb.CreateReferenceResponse>;

  getByIdForAtt(
    request: proto_reference_reference_pb.GetByIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.CreateReferenceResponse) => void): grpcWeb.ClientReadableStream<proto_reference_reference_pb.CreateReferenceResponse>;

  getByIdForAtt(
    request: proto_reference_reference_pb.GetByIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.CreateReferenceResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reference.ReferenceService/GetByIdForAtt',
        request,
        metadata || {},
        this.methodDescriptorGetByIdForAtt,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reference.ReferenceService/GetByIdForAtt',
    request,
    metadata || {},
    this.methodDescriptorGetByIdForAtt);
  }

  methodDescriptorGetRefFourByNom = new grpcWeb.MethodDescriptor(
    '/reference.ReferenceService/GetRefFourByNom',
    grpcWeb.MethodType.UNARY,
    proto_reference_reference_pb.GetRefFourByNomRequest,
    proto_reference_reference_pb.CreateReferenceResponse,
    (request: proto_reference_reference_pb.GetRefFourByNomRequest) => {
      return request.serializeBinary();
    },
    proto_reference_reference_pb.CreateReferenceResponse.deserializeBinary
  );

  getRefFourByNom(
    request: proto_reference_reference_pb.GetRefFourByNomRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reference_reference_pb.CreateReferenceResponse>;

  getRefFourByNom(
    request: proto_reference_reference_pb.GetRefFourByNomRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.CreateReferenceResponse) => void): grpcWeb.ClientReadableStream<proto_reference_reference_pb.CreateReferenceResponse>;

  getRefFourByNom(
    request: proto_reference_reference_pb.GetRefFourByNomRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.CreateReferenceResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reference.ReferenceService/GetRefFourByNom',
        request,
        metadata || {},
        this.methodDescriptorGetRefFourByNom,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reference.ReferenceService/GetRefFourByNom',
    request,
    metadata || {},
    this.methodDescriptorGetRefFourByNom);
  }

  methodDescriptorValidateRefFour = new grpcWeb.MethodDescriptor(
    '/reference.ReferenceService/ValidateRefFour',
    grpcWeb.MethodType.UNARY,
    proto_reference_reference_pb.ValidateRefFourRequest,
    proto_reference_reference_pb.ValidateRefFourReponse,
    (request: proto_reference_reference_pb.ValidateRefFourRequest) => {
      return request.serializeBinary();
    },
    proto_reference_reference_pb.ValidateRefFourReponse.deserializeBinary
  );

  validateRefFour(
    request: proto_reference_reference_pb.ValidateRefFourRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reference_reference_pb.ValidateRefFourReponse>;

  validateRefFour(
    request: proto_reference_reference_pb.ValidateRefFourRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.ValidateRefFourReponse) => void): grpcWeb.ClientReadableStream<proto_reference_reference_pb.ValidateRefFourReponse>;

  validateRefFour(
    request: proto_reference_reference_pb.ValidateRefFourRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.ValidateRefFourReponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reference.ReferenceService/ValidateRefFour',
        request,
        metadata || {},
        this.methodDescriptorValidateRefFour,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reference.ReferenceService/ValidateRefFour',
    request,
    metadata || {},
    this.methodDescriptorValidateRefFour);
  }

  methodDescriptorDeleteRefFour = new grpcWeb.MethodDescriptor(
    '/reference.ReferenceService/DeleteRefFour',
    grpcWeb.MethodType.UNARY,
    proto_reference_reference_pb.DeleteRefFourRequest,
    proto_reference_reference_pb.DeleteRefFourReponse,
    (request: proto_reference_reference_pb.DeleteRefFourRequest) => {
      return request.serializeBinary();
    },
    proto_reference_reference_pb.DeleteRefFourReponse.deserializeBinary
  );

  deleteRefFour(
    request: proto_reference_reference_pb.DeleteRefFourRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reference_reference_pb.DeleteRefFourReponse>;

  deleteRefFour(
    request: proto_reference_reference_pb.DeleteRefFourRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.DeleteRefFourReponse) => void): grpcWeb.ClientReadableStream<proto_reference_reference_pb.DeleteRefFourReponse>;

  deleteRefFour(
    request: proto_reference_reference_pb.DeleteRefFourRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.DeleteRefFourReponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reference.ReferenceService/DeleteRefFour',
        request,
        metadata || {},
        this.methodDescriptorDeleteRefFour,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reference.ReferenceService/DeleteRefFour',
    request,
    metadata || {},
    this.methodDescriptorDeleteRefFour);
  }

  methodDescriptorCreateRefFour = new grpcWeb.MethodDescriptor(
    '/reference.ReferenceService/CreateRefFour',
    grpcWeb.MethodType.UNARY,
    proto_reference_reference_pb.RefFourCreateRequest,
    proto_reference_reference_pb.RefFourCreateResponse,
    (request: proto_reference_reference_pb.RefFourCreateRequest) => {
      return request.serializeBinary();
    },
    proto_reference_reference_pb.RefFourCreateResponse.deserializeBinary
  );

  createRefFour(
    request: proto_reference_reference_pb.RefFourCreateRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reference_reference_pb.RefFourCreateResponse>;

  createRefFour(
    request: proto_reference_reference_pb.RefFourCreateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.RefFourCreateResponse) => void): grpcWeb.ClientReadableStream<proto_reference_reference_pb.RefFourCreateResponse>;

  createRefFour(
    request: proto_reference_reference_pb.RefFourCreateRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.RefFourCreateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reference.ReferenceService/CreateRefFour',
        request,
        metadata || {},
        this.methodDescriptorCreateRefFour,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reference.ReferenceService/CreateRefFour',
    request,
    metadata || {},
    this.methodDescriptorCreateRefFour);
  }

  methodDescriptorValidDeleteRefFour = new grpcWeb.MethodDescriptor(
    '/reference.ReferenceService/ValidDeleteRefFour',
    grpcWeb.MethodType.UNARY,
    proto_reference_reference_pb.ValidDeleteRequest,
    proto_reference_reference_pb.ValidDeleteResponse,
    (request: proto_reference_reference_pb.ValidDeleteRequest) => {
      return request.serializeBinary();
    },
    proto_reference_reference_pb.ValidDeleteResponse.deserializeBinary
  );

  validDeleteRefFour(
    request: proto_reference_reference_pb.ValidDeleteRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reference_reference_pb.ValidDeleteResponse>;

  validDeleteRefFour(
    request: proto_reference_reference_pb.ValidDeleteRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.ValidDeleteResponse) => void): grpcWeb.ClientReadableStream<proto_reference_reference_pb.ValidDeleteResponse>;

  validDeleteRefFour(
    request: proto_reference_reference_pb.ValidDeleteRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.ValidDeleteResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reference.ReferenceService/ValidDeleteRefFour',
        request,
        metadata || {},
        this.methodDescriptorValidDeleteRefFour,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reference.ReferenceService/ValidDeleteRefFour',
    request,
    metadata || {},
    this.methodDescriptorValidDeleteRefFour);
  }

  methodDescriptorValidDeleteCondition = new grpcWeb.MethodDescriptor(
    '/reference.ReferenceService/ValidDeleteCondition',
    grpcWeb.MethodType.UNARY,
    proto_reference_reference_pb.ValidDeleteRequest,
    proto_reference_reference_pb.ValidDeleteResponse,
    (request: proto_reference_reference_pb.ValidDeleteRequest) => {
      return request.serializeBinary();
    },
    proto_reference_reference_pb.ValidDeleteResponse.deserializeBinary
  );

  validDeleteCondition(
    request: proto_reference_reference_pb.ValidDeleteRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reference_reference_pb.ValidDeleteResponse>;

  validDeleteCondition(
    request: proto_reference_reference_pb.ValidDeleteRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.ValidDeleteResponse) => void): grpcWeb.ClientReadableStream<proto_reference_reference_pb.ValidDeleteResponse>;

  validDeleteCondition(
    request: proto_reference_reference_pb.ValidDeleteRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.ValidDeleteResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reference.ReferenceService/ValidDeleteCondition',
        request,
        metadata || {},
        this.methodDescriptorValidDeleteCondition,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reference.ReferenceService/ValidDeleteCondition',
    request,
    metadata || {},
    this.methodDescriptorValidDeleteCondition);
  }

  methodDescriptorValidDeleteRef = new grpcWeb.MethodDescriptor(
    '/reference.ReferenceService/ValidDeleteRef',
    grpcWeb.MethodType.UNARY,
    proto_reference_reference_pb.ValidDeleteRequest,
    proto_reference_reference_pb.ValidDeleteResponse,
    (request: proto_reference_reference_pb.ValidDeleteRequest) => {
      return request.serializeBinary();
    },
    proto_reference_reference_pb.ValidDeleteResponse.deserializeBinary
  );

  validDeleteRef(
    request: proto_reference_reference_pb.ValidDeleteRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reference_reference_pb.ValidDeleteResponse>;

  validDeleteRef(
    request: proto_reference_reference_pb.ValidDeleteRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.ValidDeleteResponse) => void): grpcWeb.ClientReadableStream<proto_reference_reference_pb.ValidDeleteResponse>;

  validDeleteRef(
    request: proto_reference_reference_pb.ValidDeleteRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.ValidDeleteResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reference.ReferenceService/ValidDeleteRef',
        request,
        metadata || {},
        this.methodDescriptorValidDeleteRef,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reference.ReferenceService/ValidDeleteRef',
    request,
    metadata || {},
    this.methodDescriptorValidDeleteRef);
  }

  methodDescriptorGetAllReference = new grpcWeb.MethodDescriptor(
    '/reference.ReferenceService/GetAllReference',
    grpcWeb.MethodType.UNARY,
    proto_reference_reference_pb.GetAllReferenceRequest,
    proto_reference_reference_pb.GetAllResponse,
    (request: proto_reference_reference_pb.GetAllReferenceRequest) => {
      return request.serializeBinary();
    },
    proto_reference_reference_pb.GetAllResponse.deserializeBinary
  );

  getAllReference(
    request: proto_reference_reference_pb.GetAllReferenceRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reference_reference_pb.GetAllResponse>;

  getAllReference(
    request: proto_reference_reference_pb.GetAllReferenceRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.GetAllResponse) => void): grpcWeb.ClientReadableStream<proto_reference_reference_pb.GetAllResponse>;

  getAllReference(
    request: proto_reference_reference_pb.GetAllReferenceRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.GetAllResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reference.ReferenceService/GetAllReference',
        request,
        metadata || {},
        this.methodDescriptorGetAllReference,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reference.ReferenceService/GetAllReference',
    request,
    metadata || {},
    this.methodDescriptorGetAllReference);
  }

  methodDescriptorGetHistoryById = new grpcWeb.MethodDescriptor(
    '/reference.ReferenceService/GetHistoryById',
    grpcWeb.MethodType.UNARY,
    proto_reference_reference_pb.GetHistoryByIdRequest,
    proto_reference_reference_pb.GetHistoryByIdResponse,
    (request: proto_reference_reference_pb.GetHistoryByIdRequest) => {
      return request.serializeBinary();
    },
    proto_reference_reference_pb.GetHistoryByIdResponse.deserializeBinary
  );

  getHistoryById(
    request: proto_reference_reference_pb.GetHistoryByIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reference_reference_pb.GetHistoryByIdResponse>;

  getHistoryById(
    request: proto_reference_reference_pb.GetHistoryByIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.GetHistoryByIdResponse) => void): grpcWeb.ClientReadableStream<proto_reference_reference_pb.GetHistoryByIdResponse>;

  getHistoryById(
    request: proto_reference_reference_pb.GetHistoryByIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.GetHistoryByIdResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reference.ReferenceService/GetHistoryById',
        request,
        metadata || {},
        this.methodDescriptorGetHistoryById,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reference.ReferenceService/GetHistoryById',
    request,
    metadata || {},
    this.methodDescriptorGetHistoryById);
  }

  methodDescriptorUpdateBlockLot = new grpcWeb.MethodDescriptor(
    '/reference.ReferenceService/UpdateBlockLot',
    grpcWeb.MethodType.UNARY,
    proto_reference_reference_pb.UpdateBlockLotRequest,
    proto_reference_reference_pb.UpdateBlockLotResponse,
    (request: proto_reference_reference_pb.UpdateBlockLotRequest) => {
      return request.serializeBinary();
    },
    proto_reference_reference_pb.UpdateBlockLotResponse.deserializeBinary
  );

  updateBlockLot(
    request: proto_reference_reference_pb.UpdateBlockLotRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reference_reference_pb.UpdateBlockLotResponse>;

  updateBlockLot(
    request: proto_reference_reference_pb.UpdateBlockLotRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.UpdateBlockLotResponse) => void): grpcWeb.ClientReadableStream<proto_reference_reference_pb.UpdateBlockLotResponse>;

  updateBlockLot(
    request: proto_reference_reference_pb.UpdateBlockLotRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reference_reference_pb.UpdateBlockLotResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reference.ReferenceService/UpdateBlockLot',
        request,
        metadata || {},
        this.methodDescriptorUpdateBlockLot,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reference.ReferenceService/UpdateBlockLot',
    request,
    metadata || {},
    this.methodDescriptorUpdateBlockLot);
  }

  methodDescriptorExportAllReferences = new grpcWeb.MethodDescriptor(
    '/reference.ReferenceService/ExportAllReferences',
    grpcWeb.MethodType.UNARY,
    proto_export_export_pb.ExportAllReferencesRequest,
    proto_export_export_pb.ExportResponse,
    (request: proto_export_export_pb.ExportAllReferencesRequest) => {
      return request.serializeBinary();
    },
    proto_export_export_pb.ExportResponse.deserializeBinary
  );

  exportAllReferences(
    request: proto_export_export_pb.ExportAllReferencesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_export_export_pb.ExportResponse>;

  exportAllReferences(
    request: proto_export_export_pb.ExportAllReferencesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_export_export_pb.ExportResponse) => void): grpcWeb.ClientReadableStream<proto_export_export_pb.ExportResponse>;

  exportAllReferences(
    request: proto_export_export_pb.ExportAllReferencesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_export_export_pb.ExportResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reference.ReferenceService/ExportAllReferences',
        request,
        metadata || {},
        this.methodDescriptorExportAllReferences,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reference.ReferenceService/ExportAllReferences',
    request,
    metadata || {},
    this.methodDescriptorExportAllReferences);
  }

}

