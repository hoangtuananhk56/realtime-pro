/**
 * @fileoverview gRPC-Web generated client stub for mission
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.21.12
// source: proto/mission/mission.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb'; // proto import: "google/protobuf/empty.proto"
import * as proto_mission_mission_pb from '../../proto/mission/mission_pb'; // proto import: "proto/mission/mission.proto"


export class MissionServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreate = new grpcWeb.MethodDescriptor(
    '/mission.MissionService/Create',
    grpcWeb.MethodType.UNARY,
    proto_mission_mission_pb.MissionRequest,
    proto_mission_mission_pb.MissionResponse,
    (request: proto_mission_mission_pb.MissionRequest) => {
      return request.serializeBinary();
    },
    proto_mission_mission_pb.MissionResponse.deserializeBinary
  );

  create(
    request: proto_mission_mission_pb.MissionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_mission_mission_pb.MissionResponse>;

  create(
    request: proto_mission_mission_pb.MissionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.MissionResponse) => void): grpcWeb.ClientReadableStream<proto_mission_mission_pb.MissionResponse>;

  create(
    request: proto_mission_mission_pb.MissionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.MissionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mission.MissionService/Create',
        request,
        metadata || {},
        this.methodDescriptorCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mission.MissionService/Create',
    request,
    metadata || {},
    this.methodDescriptorCreate);
  }

  methodDescriptorGetByID = new grpcWeb.MethodDescriptor(
    '/mission.MissionService/GetByID',
    grpcWeb.MethodType.UNARY,
    proto_mission_mission_pb.MissionIDRequest,
    proto_mission_mission_pb.MissionResponse,
    (request: proto_mission_mission_pb.MissionIDRequest) => {
      return request.serializeBinary();
    },
    proto_mission_mission_pb.MissionResponse.deserializeBinary
  );

  getByID(
    request: proto_mission_mission_pb.MissionIDRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_mission_mission_pb.MissionResponse>;

  getByID(
    request: proto_mission_mission_pb.MissionIDRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.MissionResponse) => void): grpcWeb.ClientReadableStream<proto_mission_mission_pb.MissionResponse>;

  getByID(
    request: proto_mission_mission_pb.MissionIDRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.MissionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mission.MissionService/GetByID',
        request,
        metadata || {},
        this.methodDescriptorGetByID,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mission.MissionService/GetByID',
    request,
    metadata || {},
    this.methodDescriptorGetByID);
  }

  methodDescriptorCheckEnterTruckNumber = new grpcWeb.MethodDescriptor(
    '/mission.MissionService/CheckEnterTruckNumber',
    grpcWeb.MethodType.UNARY,
    proto_mission_mission_pb.CheckEnterTruckNumberRequest,
    proto_mission_mission_pb.CheckEnterTruckNumberResponse,
    (request: proto_mission_mission_pb.CheckEnterTruckNumberRequest) => {
      return request.serializeBinary();
    },
    proto_mission_mission_pb.CheckEnterTruckNumberResponse.deserializeBinary
  );

  checkEnterTruckNumber(
    request: proto_mission_mission_pb.CheckEnterTruckNumberRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_mission_mission_pb.CheckEnterTruckNumberResponse>;

  checkEnterTruckNumber(
    request: proto_mission_mission_pb.CheckEnterTruckNumberRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.CheckEnterTruckNumberResponse) => void): grpcWeb.ClientReadableStream<proto_mission_mission_pb.CheckEnterTruckNumberResponse>;

  checkEnterTruckNumber(
    request: proto_mission_mission_pb.CheckEnterTruckNumberRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.CheckEnterTruckNumberResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mission.MissionService/CheckEnterTruckNumber',
        request,
        metadata || {},
        this.methodDescriptorCheckEnterTruckNumber,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mission.MissionService/CheckEnterTruckNumber',
    request,
    metadata || {},
    this.methodDescriptorCheckEnterTruckNumber);
  }

  methodDescriptorUpdateEnterTruckNumber = new grpcWeb.MethodDescriptor(
    '/mission.MissionService/UpdateEnterTruckNumber',
    grpcWeb.MethodType.UNARY,
    proto_mission_mission_pb.UpdateEnterTruckNumberRequest,
    proto_mission_mission_pb.UpdateEnterTruckNumberResponse,
    (request: proto_mission_mission_pb.UpdateEnterTruckNumberRequest) => {
      return request.serializeBinary();
    },
    proto_mission_mission_pb.UpdateEnterTruckNumberResponse.deserializeBinary
  );

  updateEnterTruckNumber(
    request: proto_mission_mission_pb.UpdateEnterTruckNumberRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_mission_mission_pb.UpdateEnterTruckNumberResponse>;

  updateEnterTruckNumber(
    request: proto_mission_mission_pb.UpdateEnterTruckNumberRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.UpdateEnterTruckNumberResponse) => void): grpcWeb.ClientReadableStream<proto_mission_mission_pb.UpdateEnterTruckNumberResponse>;

  updateEnterTruckNumber(
    request: proto_mission_mission_pb.UpdateEnterTruckNumberRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.UpdateEnterTruckNumberResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mission.MissionService/UpdateEnterTruckNumber',
        request,
        metadata || {},
        this.methodDescriptorUpdateEnterTruckNumber,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mission.MissionService/UpdateEnterTruckNumber',
    request,
    metadata || {},
    this.methodDescriptorUpdateEnterTruckNumber);
  }

  methodDescriptorCreateReapproMissionBySsccArray = new grpcWeb.MethodDescriptor(
    '/mission.MissionService/CreateReapproMissionBySsccArray',
    grpcWeb.MethodType.UNARY,
    proto_mission_mission_pb.CreateReapproMissionRequest,
    proto_mission_mission_pb.CreateReapproMissionResponse,
    (request: proto_mission_mission_pb.CreateReapproMissionRequest) => {
      return request.serializeBinary();
    },
    proto_mission_mission_pb.CreateReapproMissionResponse.deserializeBinary
  );

  createReapproMissionBySsccArray(
    request: proto_mission_mission_pb.CreateReapproMissionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_mission_mission_pb.CreateReapproMissionResponse>;

  createReapproMissionBySsccArray(
    request: proto_mission_mission_pb.CreateReapproMissionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.CreateReapproMissionResponse) => void): grpcWeb.ClientReadableStream<proto_mission_mission_pb.CreateReapproMissionResponse>;

  createReapproMissionBySsccArray(
    request: proto_mission_mission_pb.CreateReapproMissionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.CreateReapproMissionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mission.MissionService/CreateReapproMissionBySsccArray',
        request,
        metadata || {},
        this.methodDescriptorCreateReapproMissionBySsccArray,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mission.MissionService/CreateReapproMissionBySsccArray',
    request,
    metadata || {},
    this.methodDescriptorCreateReapproMissionBySsccArray);
  }

  methodDescriptorGetDashboardInformation = new grpcWeb.MethodDescriptor(
    '/mission.MissionService/GetDashboardInformation',
    grpcWeb.MethodType.UNARY,
    proto_mission_mission_pb.GetDashboardInformationRequest,
    proto_mission_mission_pb.GetDashboardInformationResponse,
    (request: proto_mission_mission_pb.GetDashboardInformationRequest) => {
      return request.serializeBinary();
    },
    proto_mission_mission_pb.GetDashboardInformationResponse.deserializeBinary
  );

  getDashboardInformation(
    request: proto_mission_mission_pb.GetDashboardInformationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_mission_mission_pb.GetDashboardInformationResponse>;

  getDashboardInformation(
    request: proto_mission_mission_pb.GetDashboardInformationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.GetDashboardInformationResponse) => void): grpcWeb.ClientReadableStream<proto_mission_mission_pb.GetDashboardInformationResponse>;

  getDashboardInformation(
    request: proto_mission_mission_pb.GetDashboardInformationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.GetDashboardInformationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mission.MissionService/GetDashboardInformation',
        request,
        metadata || {},
        this.methodDescriptorGetDashboardInformation,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mission.MissionService/GetDashboardInformation',
    request,
    metadata || {},
    this.methodDescriptorGetDashboardInformation);
  }

  methodDescriptorTerminateMission = new grpcWeb.MethodDescriptor(
    '/mission.MissionService/TerminateMission',
    grpcWeb.MethodType.UNARY,
    proto_mission_mission_pb.TerminateMissionRequest,
    google_protobuf_empty_pb.Empty,
    (request: proto_mission_mission_pb.TerminateMissionRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  terminateMission(
    request: proto_mission_mission_pb.TerminateMissionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  terminateMission(
    request: proto_mission_mission_pb.TerminateMissionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  terminateMission(
    request: proto_mission_mission_pb.TerminateMissionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mission.MissionService/TerminateMission',
        request,
        metadata || {},
        this.methodDescriptorTerminateMission,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mission.MissionService/TerminateMission',
    request,
    metadata || {},
    this.methodDescriptorTerminateMission);
  }

  methodDescriptorGetInterruptReasonMasterData = new grpcWeb.MethodDescriptor(
    '/mission.MissionService/GetInterruptReasonMasterData',
    grpcWeb.MethodType.UNARY,
    proto_mission_mission_pb.GetInterruptReasonMasterDataRequest,
    proto_mission_mission_pb.GetInterruptReasonMasterDataResponse,
    (request: proto_mission_mission_pb.GetInterruptReasonMasterDataRequest) => {
      return request.serializeBinary();
    },
    proto_mission_mission_pb.GetInterruptReasonMasterDataResponse.deserializeBinary
  );

  getInterruptReasonMasterData(
    request: proto_mission_mission_pb.GetInterruptReasonMasterDataRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_mission_mission_pb.GetInterruptReasonMasterDataResponse>;

  getInterruptReasonMasterData(
    request: proto_mission_mission_pb.GetInterruptReasonMasterDataRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.GetInterruptReasonMasterDataResponse) => void): grpcWeb.ClientReadableStream<proto_mission_mission_pb.GetInterruptReasonMasterDataResponse>;

  getInterruptReasonMasterData(
    request: proto_mission_mission_pb.GetInterruptReasonMasterDataRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.GetInterruptReasonMasterDataResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mission.MissionService/GetInterruptReasonMasterData',
        request,
        metadata || {},
        this.methodDescriptorGetInterruptReasonMasterData,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mission.MissionService/GetInterruptReasonMasterData',
    request,
    metadata || {},
    this.methodDescriptorGetInterruptReasonMasterData);
  }

  methodDescriptorCheckMissionMovement = new grpcWeb.MethodDescriptor(
    '/mission.MissionService/CheckMissionMovement',
    grpcWeb.MethodType.UNARY,
    proto_mission_mission_pb.CheckMissionMovementRequest,
    proto_mission_mission_pb.CheckMissionMovementResponse,
    (request: proto_mission_mission_pb.CheckMissionMovementRequest) => {
      return request.serializeBinary();
    },
    proto_mission_mission_pb.CheckMissionMovementResponse.deserializeBinary
  );

  checkMissionMovement(
    request: proto_mission_mission_pb.CheckMissionMovementRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_mission_mission_pb.CheckMissionMovementResponse>;

  checkMissionMovement(
    request: proto_mission_mission_pb.CheckMissionMovementRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.CheckMissionMovementResponse) => void): grpcWeb.ClientReadableStream<proto_mission_mission_pb.CheckMissionMovementResponse>;

  checkMissionMovement(
    request: proto_mission_mission_pb.CheckMissionMovementRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.CheckMissionMovementResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mission.MissionService/CheckMissionMovement',
        request,
        metadata || {},
        this.methodDescriptorCheckMissionMovement,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mission.MissionService/CheckMissionMovement',
    request,
    metadata || {},
    this.methodDescriptorCheckMissionMovement);
  }

  methodDescriptorCheckActionMovement = new grpcWeb.MethodDescriptor(
    '/mission.MissionService/CheckActionMovement',
    grpcWeb.MethodType.UNARY,
    proto_mission_mission_pb.CheckActionMovementRequest,
    proto_mission_mission_pb.CheckActionMovementResponse,
    (request: proto_mission_mission_pb.CheckActionMovementRequest) => {
      return request.serializeBinary();
    },
    proto_mission_mission_pb.CheckActionMovementResponse.deserializeBinary
  );

  checkActionMovement(
    request: proto_mission_mission_pb.CheckActionMovementRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_mission_mission_pb.CheckActionMovementResponse>;

  checkActionMovement(
    request: proto_mission_mission_pb.CheckActionMovementRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.CheckActionMovementResponse) => void): grpcWeb.ClientReadableStream<proto_mission_mission_pb.CheckActionMovementResponse>;

  checkActionMovement(
    request: proto_mission_mission_pb.CheckActionMovementRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.CheckActionMovementResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mission.MissionService/CheckActionMovement',
        request,
        metadata || {},
        this.methodDescriptorCheckActionMovement,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mission.MissionService/CheckActionMovement',
    request,
    metadata || {},
    this.methodDescriptorCheckActionMovement);
  }

  methodDescriptorGetMissionDetail = new grpcWeb.MethodDescriptor(
    '/mission.MissionService/GetMissionDetail',
    grpcWeb.MethodType.UNARY,
    proto_mission_mission_pb.GetMissionDetailRequest,
    proto_mission_mission_pb.GetMissionDetailResponse,
    (request: proto_mission_mission_pb.GetMissionDetailRequest) => {
      return request.serializeBinary();
    },
    proto_mission_mission_pb.GetMissionDetailResponse.deserializeBinary
  );

  getMissionDetail(
    request: proto_mission_mission_pb.GetMissionDetailRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_mission_mission_pb.GetMissionDetailResponse>;

  getMissionDetail(
    request: proto_mission_mission_pb.GetMissionDetailRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.GetMissionDetailResponse) => void): grpcWeb.ClientReadableStream<proto_mission_mission_pb.GetMissionDetailResponse>;

  getMissionDetail(
    request: proto_mission_mission_pb.GetMissionDetailRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.GetMissionDetailResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mission.MissionService/GetMissionDetail',
        request,
        metadata || {},
        this.methodDescriptorGetMissionDetail,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mission.MissionService/GetMissionDetail',
    request,
    metadata || {},
    this.methodDescriptorGetMissionDetail);
  }

  methodDescriptorCreateMissionMovement = new grpcWeb.MethodDescriptor(
    '/mission.MissionService/CreateMissionMovement',
    grpcWeb.MethodType.UNARY,
    proto_mission_mission_pb.CreateMissionMovementRequest,
    proto_mission_mission_pb.MissionResponse,
    (request: proto_mission_mission_pb.CreateMissionMovementRequest) => {
      return request.serializeBinary();
    },
    proto_mission_mission_pb.MissionResponse.deserializeBinary
  );

  createMissionMovement(
    request: proto_mission_mission_pb.CreateMissionMovementRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_mission_mission_pb.MissionResponse>;

  createMissionMovement(
    request: proto_mission_mission_pb.CreateMissionMovementRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.MissionResponse) => void): grpcWeb.ClientReadableStream<proto_mission_mission_pb.MissionResponse>;

  createMissionMovement(
    request: proto_mission_mission_pb.CreateMissionMovementRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.MissionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mission.MissionService/CreateMissionMovement',
        request,
        metadata || {},
        this.methodDescriptorCreateMissionMovement,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mission.MissionService/CreateMissionMovement',
    request,
    metadata || {},
    this.methodDescriptorCreateMissionMovement);
  }

  methodDescriptorUpdateSpecialMission = new grpcWeb.MethodDescriptor(
    '/mission.MissionService/UpdateSpecialMission',
    grpcWeb.MethodType.UNARY,
    proto_mission_mission_pb.UpdateSpecialMissionRequest,
    google_protobuf_empty_pb.Empty,
    (request: proto_mission_mission_pb.UpdateSpecialMissionRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  updateSpecialMission(
    request: proto_mission_mission_pb.UpdateSpecialMissionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  updateSpecialMission(
    request: proto_mission_mission_pb.UpdateSpecialMissionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  updateSpecialMission(
    request: proto_mission_mission_pb.UpdateSpecialMissionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mission.MissionService/UpdateSpecialMission',
        request,
        metadata || {},
        this.methodDescriptorUpdateSpecialMission,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mission.MissionService/UpdateSpecialMission',
    request,
    metadata || {},
    this.methodDescriptorUpdateSpecialMission);
  }

  methodDescriptorCreateMissionFiles = new grpcWeb.MethodDescriptor(
    '/mission.MissionService/CreateMissionFiles',
    grpcWeb.MethodType.UNARY,
    proto_mission_mission_pb.MissionFilesRequest,
    google_protobuf_empty_pb.Empty,
    (request: proto_mission_mission_pb.MissionFilesRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  createMissionFiles(
    request: proto_mission_mission_pb.MissionFilesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  createMissionFiles(
    request: proto_mission_mission_pb.MissionFilesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  createMissionFiles(
    request: proto_mission_mission_pb.MissionFilesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mission.MissionService/CreateMissionFiles',
        request,
        metadata || {},
        this.methodDescriptorCreateMissionFiles,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mission.MissionService/CreateMissionFiles',
    request,
    metadata || {},
    this.methodDescriptorCreateMissionFiles);
  }

  methodDescriptorDeleteMissionFiles = new grpcWeb.MethodDescriptor(
    '/mission.MissionService/DeleteMissionFiles',
    grpcWeb.MethodType.UNARY,
    proto_mission_mission_pb.MissionFilesRequest,
    google_protobuf_empty_pb.Empty,
    (request: proto_mission_mission_pb.MissionFilesRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  deleteMissionFiles(
    request: proto_mission_mission_pb.MissionFilesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  deleteMissionFiles(
    request: proto_mission_mission_pb.MissionFilesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  deleteMissionFiles(
    request: proto_mission_mission_pb.MissionFilesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mission.MissionService/DeleteMissionFiles',
        request,
        metadata || {},
        this.methodDescriptorDeleteMissionFiles,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mission.MissionService/DeleteMissionFiles',
    request,
    metadata || {},
    this.methodDescriptorDeleteMissionFiles);
  }

  methodDescriptorGetMissionAll = new grpcWeb.MethodDescriptor(
    '/mission.MissionService/GetMissionAll',
    grpcWeb.MethodType.UNARY,
    proto_mission_mission_pb.MissionAllRequest,
    proto_mission_mission_pb.MissionAllResponse,
    (request: proto_mission_mission_pb.MissionAllRequest) => {
      return request.serializeBinary();
    },
    proto_mission_mission_pb.MissionAllResponse.deserializeBinary
  );

  getMissionAll(
    request: proto_mission_mission_pb.MissionAllRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_mission_mission_pb.MissionAllResponse>;

  getMissionAll(
    request: proto_mission_mission_pb.MissionAllRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.MissionAllResponse) => void): grpcWeb.ClientReadableStream<proto_mission_mission_pb.MissionAllResponse>;

  getMissionAll(
    request: proto_mission_mission_pb.MissionAllRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.MissionAllResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mission.MissionService/GetMissionAll',
        request,
        metadata || {},
        this.methodDescriptorGetMissionAll,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mission.MissionService/GetMissionAll',
    request,
    metadata || {},
    this.methodDescriptorGetMissionAll);
  }

  methodDescriptorGetUtilisateurByFilter = new grpcWeb.MethodDescriptor(
    '/mission.MissionService/GetUtilisateurByFilter',
    grpcWeb.MethodType.UNARY,
    proto_mission_mission_pb.FilterUltilsateurResquest,
    proto_mission_mission_pb.FilterUtilisateurResponse,
    (request: proto_mission_mission_pb.FilterUltilsateurResquest) => {
      return request.serializeBinary();
    },
    proto_mission_mission_pb.FilterUtilisateurResponse.deserializeBinary
  );

  getUtilisateurByFilter(
    request: proto_mission_mission_pb.FilterUltilsateurResquest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_mission_mission_pb.FilterUtilisateurResponse>;

  getUtilisateurByFilter(
    request: proto_mission_mission_pb.FilterUltilsateurResquest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.FilterUtilisateurResponse) => void): grpcWeb.ClientReadableStream<proto_mission_mission_pb.FilterUtilisateurResponse>;

  getUtilisateurByFilter(
    request: proto_mission_mission_pb.FilterUltilsateurResquest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.FilterUtilisateurResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mission.MissionService/GetUtilisateurByFilter',
        request,
        metadata || {},
        this.methodDescriptorGetUtilisateurByFilter,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mission.MissionService/GetUtilisateurByFilter',
    request,
    metadata || {},
    this.methodDescriptorGetUtilisateurByFilter);
  }

  methodDescriptorGetMissionType = new grpcWeb.MethodDescriptor(
    '/mission.MissionService/GetMissionType',
    grpcWeb.MethodType.UNARY,
    proto_mission_mission_pb.GetMissionTypeRequest,
    proto_mission_mission_pb.GetMissionTypeResponse,
    (request: proto_mission_mission_pb.GetMissionTypeRequest) => {
      return request.serializeBinary();
    },
    proto_mission_mission_pb.GetMissionTypeResponse.deserializeBinary
  );

  getMissionType(
    request: proto_mission_mission_pb.GetMissionTypeRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_mission_mission_pb.GetMissionTypeResponse>;

  getMissionType(
    request: proto_mission_mission_pb.GetMissionTypeRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.GetMissionTypeResponse) => void): grpcWeb.ClientReadableStream<proto_mission_mission_pb.GetMissionTypeResponse>;

  getMissionType(
    request: proto_mission_mission_pb.GetMissionTypeRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.GetMissionTypeResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mission.MissionService/GetMissionType',
        request,
        metadata || {},
        this.methodDescriptorGetMissionType,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mission.MissionService/GetMissionType',
    request,
    metadata || {},
    this.methodDescriptorGetMissionType);
  }

  methodDescriptorGetProgressList = new grpcWeb.MethodDescriptor(
    '/mission.MissionService/GetProgressList',
    grpcWeb.MethodType.UNARY,
    proto_mission_mission_pb.GetProgressListRequest,
    proto_mission_mission_pb.GetProgressListResponse,
    (request: proto_mission_mission_pb.GetProgressListRequest) => {
      return request.serializeBinary();
    },
    proto_mission_mission_pb.GetProgressListResponse.deserializeBinary
  );

  getProgressList(
    request: proto_mission_mission_pb.GetProgressListRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_mission_mission_pb.GetProgressListResponse>;

  getProgressList(
    request: proto_mission_mission_pb.GetProgressListRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.GetProgressListResponse) => void): grpcWeb.ClientReadableStream<proto_mission_mission_pb.GetProgressListResponse>;

  getProgressList(
    request: proto_mission_mission_pb.GetProgressListRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.GetProgressListResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mission.MissionService/GetProgressList',
        request,
        metadata || {},
        this.methodDescriptorGetProgressList,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mission.MissionService/GetProgressList',
    request,
    metadata || {},
    this.methodDescriptorGetProgressList);
  }

  methodDescriptorGetScanedReservesByMissionId = new grpcWeb.MethodDescriptor(
    '/mission.MissionService/GetScanedReservesByMissionId',
    grpcWeb.MethodType.UNARY,
    proto_mission_mission_pb.GetScanedReservesByMissionIdRequest,
    proto_mission_mission_pb.GetScanedReservesByMissionIdResponse,
    (request: proto_mission_mission_pb.GetScanedReservesByMissionIdRequest) => {
      return request.serializeBinary();
    },
    proto_mission_mission_pb.GetScanedReservesByMissionIdResponse.deserializeBinary
  );

  getScanedReservesByMissionId(
    request: proto_mission_mission_pb.GetScanedReservesByMissionIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_mission_mission_pb.GetScanedReservesByMissionIdResponse>;

  getScanedReservesByMissionId(
    request: proto_mission_mission_pb.GetScanedReservesByMissionIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.GetScanedReservesByMissionIdResponse) => void): grpcWeb.ClientReadableStream<proto_mission_mission_pb.GetScanedReservesByMissionIdResponse>;

  getScanedReservesByMissionId(
    request: proto_mission_mission_pb.GetScanedReservesByMissionIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.GetScanedReservesByMissionIdResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mission.MissionService/GetScanedReservesByMissionId',
        request,
        metadata || {},
        this.methodDescriptorGetScanedReservesByMissionId,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mission.MissionService/GetScanedReservesByMissionId',
    request,
    metadata || {},
    this.methodDescriptorGetScanedReservesByMissionId);
  }

  methodDescriptorUpdateMission = new grpcWeb.MethodDescriptor(
    '/mission.MissionService/UpdateMission',
    grpcWeb.MethodType.UNARY,
    proto_mission_mission_pb.UpdatePatchMissionRequest,
    proto_mission_mission_pb.UpdatePatchMissionResponse,
    (request: proto_mission_mission_pb.UpdatePatchMissionRequest) => {
      return request.serializeBinary();
    },
    proto_mission_mission_pb.UpdatePatchMissionResponse.deserializeBinary
  );

  updateMission(
    request: proto_mission_mission_pb.UpdatePatchMissionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_mission_mission_pb.UpdatePatchMissionResponse>;

  updateMission(
    request: proto_mission_mission_pb.UpdatePatchMissionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.UpdatePatchMissionResponse) => void): grpcWeb.ClientReadableStream<proto_mission_mission_pb.UpdatePatchMissionResponse>;

  updateMission(
    request: proto_mission_mission_pb.UpdatePatchMissionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_mission_mission_pb.UpdatePatchMissionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mission.MissionService/UpdateMission',
        request,
        metadata || {},
        this.methodDescriptorUpdateMission,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mission.MissionService/UpdateMission',
    request,
    metadata || {},
    this.methodDescriptorUpdateMission);
  }

}

