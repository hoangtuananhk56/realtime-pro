// source: proto/commande/commande.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var proto_destinataire_destinataire_pb = require('../../proto/destinataire/destinataire_pb.js');
goog.object.extend(proto, proto_destinataire_destinataire_pb);
var proto_transporteur_transporteur_pb = require('../../proto/transporteur/transporteur_pb.js');
goog.object.extend(proto, proto_transporteur_transporteur_pb);
var proto_comarticle_comarticle_pb = require('../../proto/comarticle/comarticle_pb.js');
goog.object.extend(proto, proto_comarticle_comarticle_pb);
goog.exportSymbol('proto.commande.ClientCommande', null, global);
goog.exportSymbol('proto.commande.ComComment', null, global);
goog.exportSymbol('proto.commande.ComFile', null, global);
goog.exportSymbol('proto.commande.Commande', null, global);
goog.exportSymbol('proto.commande.MissionInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.commande.Commande = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.commande.Commande.repeatedFields_, null);
};
goog.inherits(proto.commande.Commande, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.commande.Commande.displayName = 'proto.commande.Commande';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.commande.MissionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.commande.MissionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.commande.MissionInfo.displayName = 'proto.commande.MissionInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.commande.ClientCommande = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.commande.ClientCommande, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.commande.ClientCommande.displayName = 'proto.commande.ClientCommande';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.commande.ComComment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.commande.ComComment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.commande.ComComment.displayName = 'proto.commande.ComComment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.commande.ComFile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.commande.ComFile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.commande.ComFile.displayName = 'proto.commande.ComFile';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.commande.Commande.repeatedFields_ = [8,39,44,53,54,55,56];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.commande.Commande.prototype.toObject = function(opt_includeInstance) {
  return proto.commande.Commande.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.commande.Commande} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.commande.Commande.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    nom: jspb.Message.getFieldWithDefault(msg, 4, ""),
    nomClient: jspb.Message.getFieldWithDefault(msg, 5, ""),
    photos: jspb.Message.getFieldWithDefault(msg, 6, 0),
    priorite: jspb.Message.getFieldWithDefault(msg, 7, 0),
    comArticleList: jspb.Message.toObjectList(msg.getComArticleList(),
    proto_comarticle_comarticle_pb.ComArticle.toObject, includeInstance),
    comPreparation: (f = msg.getComPreparation()) && proto.commande.ComComment.toObject(includeInstance, f),
    comLivraison: (f = msg.getComLivraison()) && proto.commande.ComComment.toObject(includeInstance, f),
    qteTotal: jspb.Message.getFieldWithDefault(msg, 11, 0),
    sousQteTotal: jspb.Message.getFieldWithDefault(msg, 12, 0),
    destinataireId: jspb.Message.getFieldWithDefault(msg, 13, ""),
    destinataire: (f = msg.getDestinataire()) && proto_destinataire_destinataire_pb.Destinataire.toObject(includeInstance, f),
    desAddresseId: jspb.Message.getFieldWithDefault(msg, 15, ""),
    desAddresse: (f = msg.getDesAddresse()) && proto_destinataire_destinataire_pb.DesAddresse.toObject(includeInstance, f),
    desContactId: jspb.Message.getFieldWithDefault(msg, 17, ""),
    desContact: (f = msg.getDesContact()) && proto_destinataire_destinataire_pb.DesContact.toObject(includeInstance, f),
    transporteurId: jspb.Message.getFieldWithDefault(msg, 19, ""),
    transporteur: (f = msg.getTransporteur()) && proto_transporteur_transporteur_pb.Transporteur.toObject(includeInstance, f),
    tranAddresseId: jspb.Message.getFieldWithDefault(msg, 21, ""),
    tranAddresse: (f = msg.getTranAddresse()) && proto_transporteur_transporteur_pb.TranAddresse.toObject(includeInstance, f),
    tranContactId: jspb.Message.getFieldWithDefault(msg, 23, ""),
    tranContact: (f = msg.getTranContact()) && proto_transporteur_transporteur_pb.TranContact.toObject(includeInstance, f),
    relayDetail: jspb.Message.getFieldWithDefault(msg, 25, ""),
    livraisonAt: jspb.Message.getFieldWithDefault(msg, 26, 0),
    chargementAt: jspb.Message.getFieldWithDefault(msg, 27, 0),
    imperatif: jspb.Message.getBooleanFieldWithDefault(msg, 28, false),
    companyId: jspb.Message.getFieldWithDefault(msg, 29, ""),
    warehouseId: jspb.Message.getFieldWithDefault(msg, 30, ""),
    clientId: jspb.Message.getFieldWithDefault(msg, 31, ""),
    createdBy: jspb.Message.getFieldWithDefault(msg, 32, ""),
    createrId: jspb.Message.getFieldWithDefault(msg, 33, ""),
    modificationBy: jspb.Message.getFieldWithDefault(msg, 34, ""),
    modificationerId: jspb.Message.getFieldWithDefault(msg, 35, ""),
    validationBy: jspb.Message.getFieldWithDefault(msg, 36, ""),
    validationerId: jspb.Message.getFieldWithDefault(msg, 37, ""),
    validationAt: jspb.Message.getFieldWithDefault(msg, 38, 0),
    comFileList: jspb.Message.toObjectList(msg.getComFileList(),
    proto.commande.ComFile.toObject, includeInstance),
    statusCode: jspb.Message.getFieldWithDefault(msg, 40, ""),
    assigneeId: jspb.Message.getFieldWithDefault(msg, 41, ""),
    assigneeBy: jspb.Message.getFieldWithDefault(msg, 42, ""),
    forceDlou: jspb.Message.getBooleanFieldWithDefault(msg, 43, false),
    missionList: jspb.Message.toObjectList(msg.getMissionList(),
    proto.commande.MissionInfo.toObject, includeInstance),
    canceledAt: jspb.Message.getFieldWithDefault(msg, 45, 0),
    scene: jspb.Message.getFieldWithDefault(msg, 46, ""),
    activeLot: jspb.Message.getBooleanFieldWithDefault(msg, 47, false),
    clientOb: (f = msg.getClientOb()) && proto.commande.ClientCommande.toObject(includeInstance, f),
    validTimes: jspb.Message.getFieldWithDefault(msg, 49, 0),
    type: jspb.Message.getFieldWithDefault(msg, 50, ""),
    mouvement: jspb.Message.getFieldWithDefault(msg, 51, ""),
    eta: jspb.Message.getFieldWithDefault(msg, 52, ""),
    ssccBlockList: (f = jspb.Message.getRepeatedField(msg, 53)) == null ? undefined : f,
    etasList: (f = jspb.Message.getRepeatedField(msg, 54)) == null ? undefined : f,
    typesList: (f = jspb.Message.getRepeatedField(msg, 55)) == null ? undefined : f,
    statusesList: (f = jspb.Message.getRepeatedField(msg, 56)) == null ? undefined : f,
    quantite: jspb.Message.getFieldWithDefault(msg, 57, 0),
    sousQte: jspb.Message.getFieldWithDefault(msg, 58, 0),
    totalPieses: jspb.Message.getFieldWithDefault(msg, 59, 0),
    chrono: jspb.Message.getFieldWithDefault(msg, 60, ""),
    loadingValidationTime: jspb.Message.getFieldWithDefault(msg, 61, 0),
    loadingValidationBy: jspb.Message.getFieldWithDefault(msg, 62, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.commande.Commande}
 */
proto.commande.Commande.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.commande.Commande;
  return proto.commande.Commande.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.commande.Commande} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.commande.Commande}
 */
proto.commande.Commande.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNom(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setNomClient(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPhotos(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriorite(value);
      break;
    case 8:
      var value = new proto_comarticle_comarticle_pb.ComArticle;
      reader.readMessage(value,proto_comarticle_comarticle_pb.ComArticle.deserializeBinaryFromReader);
      msg.addComArticle(value);
      break;
    case 9:
      var value = new proto.commande.ComComment;
      reader.readMessage(value,proto.commande.ComComment.deserializeBinaryFromReader);
      msg.setComPreparation(value);
      break;
    case 10:
      var value = new proto.commande.ComComment;
      reader.readMessage(value,proto.commande.ComComment.deserializeBinaryFromReader);
      msg.setComLivraison(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQteTotal(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSousQteTotal(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinataireId(value);
      break;
    case 14:
      var value = new proto_destinataire_destinataire_pb.Destinataire;
      reader.readMessage(value,proto_destinataire_destinataire_pb.Destinataire.deserializeBinaryFromReader);
      msg.setDestinataire(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setDesAddresseId(value);
      break;
    case 16:
      var value = new proto_destinataire_destinataire_pb.DesAddresse;
      reader.readMessage(value,proto_destinataire_destinataire_pb.DesAddresse.deserializeBinaryFromReader);
      msg.setDesAddresse(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setDesContactId(value);
      break;
    case 18:
      var value = new proto_destinataire_destinataire_pb.DesContact;
      reader.readMessage(value,proto_destinataire_destinataire_pb.DesContact.deserializeBinaryFromReader);
      msg.setDesContact(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransporteurId(value);
      break;
    case 20:
      var value = new proto_transporteur_transporteur_pb.Transporteur;
      reader.readMessage(value,proto_transporteur_transporteur_pb.Transporteur.deserializeBinaryFromReader);
      msg.setTransporteur(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setTranAddresseId(value);
      break;
    case 22:
      var value = new proto_transporteur_transporteur_pb.TranAddresse;
      reader.readMessage(value,proto_transporteur_transporteur_pb.TranAddresse.deserializeBinaryFromReader);
      msg.setTranAddresse(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setTranContactId(value);
      break;
    case 24:
      var value = new proto_transporteur_transporteur_pb.TranContact;
      reader.readMessage(value,proto_transporteur_transporteur_pb.TranContact.deserializeBinaryFromReader);
      msg.setTranContact(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setRelayDetail(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLivraisonAt(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setChargementAt(value);
      break;
    case 28:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setImperatif(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseId(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 33:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreaterId(value);
      break;
    case 34:
      var value = /** @type {string} */ (reader.readString());
      msg.setModificationBy(value);
      break;
    case 35:
      var value = /** @type {string} */ (reader.readString());
      msg.setModificationerId(value);
      break;
    case 36:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidationBy(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidationerId(value);
      break;
    case 38:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValidationAt(value);
      break;
    case 39:
      var value = new proto.commande.ComFile;
      reader.readMessage(value,proto.commande.ComFile.deserializeBinaryFromReader);
      msg.addComFile(value);
      break;
    case 40:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatusCode(value);
      break;
    case 41:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssigneeId(value);
      break;
    case 42:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssigneeBy(value);
      break;
    case 43:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceDlou(value);
      break;
    case 44:
      var value = new proto.commande.MissionInfo;
      reader.readMessage(value,proto.commande.MissionInfo.deserializeBinaryFromReader);
      msg.addMission(value);
      break;
    case 45:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCanceledAt(value);
      break;
    case 46:
      var value = /** @type {string} */ (reader.readString());
      msg.setScene(value);
      break;
    case 47:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActiveLot(value);
      break;
    case 48:
      var value = new proto.commande.ClientCommande;
      reader.readMessage(value,proto.commande.ClientCommande.deserializeBinaryFromReader);
      msg.setClientOb(value);
      break;
    case 49:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setValidTimes(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setMouvement(value);
      break;
    case 52:
      var value = /** @type {string} */ (reader.readString());
      msg.setEta(value);
      break;
    case 53:
      var value = /** @type {string} */ (reader.readString());
      msg.addSsccBlock(value);
      break;
    case 54:
      var value = /** @type {string} */ (reader.readString());
      msg.addEtas(value);
      break;
    case 55:
      var value = /** @type {string} */ (reader.readString());
      msg.addTypes(value);
      break;
    case 56:
      var value = /** @type {string} */ (reader.readString());
      msg.addStatuses(value);
      break;
    case 57:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQuantite(value);
      break;
    case 58:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSousQte(value);
      break;
    case 59:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalPieses(value);
      break;
    case 60:
      var value = /** @type {string} */ (reader.readString());
      msg.setChrono(value);
      break;
    case 61:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLoadingValidationTime(value);
      break;
    case 62:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoadingValidationBy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.commande.Commande.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.commande.Commande.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.commande.Commande} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.commande.Commande.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getNom();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getNomClient();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPhotos();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getPriorite();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getComArticleList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto_comarticle_comarticle_pb.ComArticle.serializeBinaryToWriter
    );
  }
  f = message.getComPreparation();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.commande.ComComment.serializeBinaryToWriter
    );
  }
  f = message.getComLivraison();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.commande.ComComment.serializeBinaryToWriter
    );
  }
  f = message.getQteTotal();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getSousQteTotal();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getDestinataireId();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getDestinataire();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto_destinataire_destinataire_pb.Destinataire.serializeBinaryToWriter
    );
  }
  f = message.getDesAddresseId();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getDesAddresse();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto_destinataire_destinataire_pb.DesAddresse.serializeBinaryToWriter
    );
  }
  f = message.getDesContactId();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getDesContact();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto_destinataire_destinataire_pb.DesContact.serializeBinaryToWriter
    );
  }
  f = message.getTransporteurId();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getTransporteur();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto_transporteur_transporteur_pb.Transporteur.serializeBinaryToWriter
    );
  }
  f = message.getTranAddresseId();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getTranAddresse();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto_transporteur_transporteur_pb.TranAddresse.serializeBinaryToWriter
    );
  }
  f = message.getTranContactId();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getTranContact();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto_transporteur_transporteur_pb.TranContact.serializeBinaryToWriter
    );
  }
  f = message.getRelayDetail();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getLivraisonAt();
  if (f !== 0) {
    writer.writeInt64(
      26,
      f
    );
  }
  f = message.getChargementAt();
  if (f !== 0) {
    writer.writeInt64(
      27,
      f
    );
  }
  f = message.getImperatif();
  if (f) {
    writer.writeBool(
      28,
      f
    );
  }
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      29,
      f
    );
  }
  f = message.getWarehouseId();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      32,
      f
    );
  }
  f = message.getCreaterId();
  if (f.length > 0) {
    writer.writeString(
      33,
      f
    );
  }
  f = message.getModificationBy();
  if (f.length > 0) {
    writer.writeString(
      34,
      f
    );
  }
  f = message.getModificationerId();
  if (f.length > 0) {
    writer.writeString(
      35,
      f
    );
  }
  f = message.getValidationBy();
  if (f.length > 0) {
    writer.writeString(
      36,
      f
    );
  }
  f = message.getValidationerId();
  if (f.length > 0) {
    writer.writeString(
      37,
      f
    );
  }
  f = message.getValidationAt();
  if (f !== 0) {
    writer.writeInt64(
      38,
      f
    );
  }
  f = message.getComFileList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      39,
      f,
      proto.commande.ComFile.serializeBinaryToWriter
    );
  }
  f = message.getStatusCode();
  if (f.length > 0) {
    writer.writeString(
      40,
      f
    );
  }
  f = message.getAssigneeId();
  if (f.length > 0) {
    writer.writeString(
      41,
      f
    );
  }
  f = message.getAssigneeBy();
  if (f.length > 0) {
    writer.writeString(
      42,
      f
    );
  }
  f = message.getForceDlou();
  if (f) {
    writer.writeBool(
      43,
      f
    );
  }
  f = message.getMissionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      44,
      f,
      proto.commande.MissionInfo.serializeBinaryToWriter
    );
  }
  f = message.getCanceledAt();
  if (f !== 0) {
    writer.writeInt64(
      45,
      f
    );
  }
  f = message.getScene();
  if (f.length > 0) {
    writer.writeString(
      46,
      f
    );
  }
  f = message.getActiveLot();
  if (f) {
    writer.writeBool(
      47,
      f
    );
  }
  f = message.getClientOb();
  if (f != null) {
    writer.writeMessage(
      48,
      f,
      proto.commande.ClientCommande.serializeBinaryToWriter
    );
  }
  f = message.getValidTimes();
  if (f !== 0) {
    writer.writeInt32(
      49,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
  f = message.getMouvement();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
  f = message.getEta();
  if (f.length > 0) {
    writer.writeString(
      52,
      f
    );
  }
  f = message.getSsccBlockList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      53,
      f
    );
  }
  f = message.getEtasList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      54,
      f
    );
  }
  f = message.getTypesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      55,
      f
    );
  }
  f = message.getStatusesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      56,
      f
    );
  }
  f = message.getQuantite();
  if (f !== 0) {
    writer.writeInt64(
      57,
      f
    );
  }
  f = message.getSousQte();
  if (f !== 0) {
    writer.writeInt64(
      58,
      f
    );
  }
  f = message.getTotalPieses();
  if (f !== 0) {
    writer.writeInt64(
      59,
      f
    );
  }
  f = message.getChrono();
  if (f.length > 0) {
    writer.writeString(
      60,
      f
    );
  }
  f = message.getLoadingValidationTime();
  if (f !== 0) {
    writer.writeInt64(
      61,
      f
    );
  }
  f = message.getLoadingValidationBy();
  if (f.length > 0) {
    writer.writeString(
      62,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.commande.Commande.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 created_at = 2;
 * @return {number}
 */
proto.commande.Commande.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 updated_at = 3;
 * @return {number}
 */
proto.commande.Commande.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string nom = 4;
 * @return {string}
 */
proto.commande.Commande.prototype.getNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setNom = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string nom_client = 5;
 * @return {string}
 */
proto.commande.Commande.prototype.getNomClient = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setNomClient = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 photos = 6;
 * @return {number}
 */
proto.commande.Commande.prototype.getPhotos = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setPhotos = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 priorite = 7;
 * @return {number}
 */
proto.commande.Commande.prototype.getPriorite = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setPriorite = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * repeated comarticle.ComArticle com_article = 8;
 * @return {!Array<!proto.comarticle.ComArticle>}
 */
proto.commande.Commande.prototype.getComArticleList = function() {
  return /** @type{!Array<!proto.comarticle.ComArticle>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_comarticle_comarticle_pb.ComArticle, 8));
};


/**
 * @param {!Array<!proto.comarticle.ComArticle>} value
 * @return {!proto.commande.Commande} returns this
*/
proto.commande.Commande.prototype.setComArticleList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.comarticle.ComArticle=} opt_value
 * @param {number=} opt_index
 * @return {!proto.comarticle.ComArticle}
 */
proto.commande.Commande.prototype.addComArticle = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.comarticle.ComArticle, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.clearComArticleList = function() {
  return this.setComArticleList([]);
};


/**
 * optional ComComment com_preparation = 9;
 * @return {?proto.commande.ComComment}
 */
proto.commande.Commande.prototype.getComPreparation = function() {
  return /** @type{?proto.commande.ComComment} */ (
    jspb.Message.getWrapperField(this, proto.commande.ComComment, 9));
};


/**
 * @param {?proto.commande.ComComment|undefined} value
 * @return {!proto.commande.Commande} returns this
*/
proto.commande.Commande.prototype.setComPreparation = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.clearComPreparation = function() {
  return this.setComPreparation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.commande.Commande.prototype.hasComPreparation = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ComComment com_livraison = 10;
 * @return {?proto.commande.ComComment}
 */
proto.commande.Commande.prototype.getComLivraison = function() {
  return /** @type{?proto.commande.ComComment} */ (
    jspb.Message.getWrapperField(this, proto.commande.ComComment, 10));
};


/**
 * @param {?proto.commande.ComComment|undefined} value
 * @return {!proto.commande.Commande} returns this
*/
proto.commande.Commande.prototype.setComLivraison = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.clearComLivraison = function() {
  return this.setComLivraison(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.commande.Commande.prototype.hasComLivraison = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int64 qte_total = 11;
 * @return {number}
 */
proto.commande.Commande.prototype.getQteTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setQteTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int64 sous_qte_total = 12;
 * @return {number}
 */
proto.commande.Commande.prototype.getSousQteTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setSousQteTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string destinataire_id = 13;
 * @return {string}
 */
proto.commande.Commande.prototype.getDestinataireId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setDestinataireId = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional destinataire.Destinataire destinataire = 14;
 * @return {?proto.destinataire.Destinataire}
 */
proto.commande.Commande.prototype.getDestinataire = function() {
  return /** @type{?proto.destinataire.Destinataire} */ (
    jspb.Message.getWrapperField(this, proto_destinataire_destinataire_pb.Destinataire, 14));
};


/**
 * @param {?proto.destinataire.Destinataire|undefined} value
 * @return {!proto.commande.Commande} returns this
*/
proto.commande.Commande.prototype.setDestinataire = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.clearDestinataire = function() {
  return this.setDestinataire(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.commande.Commande.prototype.hasDestinataire = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string des_addresse_id = 15;
 * @return {string}
 */
proto.commande.Commande.prototype.getDesAddresseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setDesAddresseId = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional destinataire.DesAddresse des_addresse = 16;
 * @return {?proto.destinataire.DesAddresse}
 */
proto.commande.Commande.prototype.getDesAddresse = function() {
  return /** @type{?proto.destinataire.DesAddresse} */ (
    jspb.Message.getWrapperField(this, proto_destinataire_destinataire_pb.DesAddresse, 16));
};


/**
 * @param {?proto.destinataire.DesAddresse|undefined} value
 * @return {!proto.commande.Commande} returns this
*/
proto.commande.Commande.prototype.setDesAddresse = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.clearDesAddresse = function() {
  return this.setDesAddresse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.commande.Commande.prototype.hasDesAddresse = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string des_contact_id = 17;
 * @return {string}
 */
proto.commande.Commande.prototype.getDesContactId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setDesContactId = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional destinataire.DesContact des_contact = 18;
 * @return {?proto.destinataire.DesContact}
 */
proto.commande.Commande.prototype.getDesContact = function() {
  return /** @type{?proto.destinataire.DesContact} */ (
    jspb.Message.getWrapperField(this, proto_destinataire_destinataire_pb.DesContact, 18));
};


/**
 * @param {?proto.destinataire.DesContact|undefined} value
 * @return {!proto.commande.Commande} returns this
*/
proto.commande.Commande.prototype.setDesContact = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.clearDesContact = function() {
  return this.setDesContact(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.commande.Commande.prototype.hasDesContact = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional string transporteur_id = 19;
 * @return {string}
 */
proto.commande.Commande.prototype.getTransporteurId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setTransporteurId = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional transporteur.Transporteur transporteur = 20;
 * @return {?proto.transporteur.Transporteur}
 */
proto.commande.Commande.prototype.getTransporteur = function() {
  return /** @type{?proto.transporteur.Transporteur} */ (
    jspb.Message.getWrapperField(this, proto_transporteur_transporteur_pb.Transporteur, 20));
};


/**
 * @param {?proto.transporteur.Transporteur|undefined} value
 * @return {!proto.commande.Commande} returns this
*/
proto.commande.Commande.prototype.setTransporteur = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.clearTransporteur = function() {
  return this.setTransporteur(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.commande.Commande.prototype.hasTransporteur = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional string tran_addresse_id = 21;
 * @return {string}
 */
proto.commande.Commande.prototype.getTranAddresseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setTranAddresseId = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional transporteur.TranAddresse tran_addresse = 22;
 * @return {?proto.transporteur.TranAddresse}
 */
proto.commande.Commande.prototype.getTranAddresse = function() {
  return /** @type{?proto.transporteur.TranAddresse} */ (
    jspb.Message.getWrapperField(this, proto_transporteur_transporteur_pb.TranAddresse, 22));
};


/**
 * @param {?proto.transporteur.TranAddresse|undefined} value
 * @return {!proto.commande.Commande} returns this
*/
proto.commande.Commande.prototype.setTranAddresse = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.clearTranAddresse = function() {
  return this.setTranAddresse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.commande.Commande.prototype.hasTranAddresse = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional string tran_contact_id = 23;
 * @return {string}
 */
proto.commande.Commande.prototype.getTranContactId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setTranContactId = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional transporteur.TranContact tran_contact = 24;
 * @return {?proto.transporteur.TranContact}
 */
proto.commande.Commande.prototype.getTranContact = function() {
  return /** @type{?proto.transporteur.TranContact} */ (
    jspb.Message.getWrapperField(this, proto_transporteur_transporteur_pb.TranContact, 24));
};


/**
 * @param {?proto.transporteur.TranContact|undefined} value
 * @return {!proto.commande.Commande} returns this
*/
proto.commande.Commande.prototype.setTranContact = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.clearTranContact = function() {
  return this.setTranContact(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.commande.Commande.prototype.hasTranContact = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional string relay_detail = 25;
 * @return {string}
 */
proto.commande.Commande.prototype.getRelayDetail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setRelayDetail = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional int64 livraison_at = 26;
 * @return {number}
 */
proto.commande.Commande.prototype.getLivraisonAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {number} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setLivraisonAt = function(value) {
  return jspb.Message.setProto3IntField(this, 26, value);
};


/**
 * optional int64 chargement_at = 27;
 * @return {number}
 */
proto.commande.Commande.prototype.getChargementAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/**
 * @param {number} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setChargementAt = function(value) {
  return jspb.Message.setProto3IntField(this, 27, value);
};


/**
 * optional bool imperatif = 28;
 * @return {boolean}
 */
proto.commande.Commande.prototype.getImperatif = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 28, false));
};


/**
 * @param {boolean} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setImperatif = function(value) {
  return jspb.Message.setProto3BooleanField(this, 28, value);
};


/**
 * optional string company_id = 29;
 * @return {string}
 */
proto.commande.Commande.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 29, value);
};


/**
 * optional string warehouse_id = 30;
 * @return {string}
 */
proto.commande.Commande.prototype.getWarehouseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setWarehouseId = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional string client_id = 31;
 * @return {string}
 */
proto.commande.Commande.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * optional string created_by = 32;
 * @return {string}
 */
proto.commande.Commande.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setCreatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 32, value);
};


/**
 * optional string creater_id = 33;
 * @return {string}
 */
proto.commande.Commande.prototype.getCreaterId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 33, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setCreaterId = function(value) {
  return jspb.Message.setProto3StringField(this, 33, value);
};


/**
 * optional string modification_by = 34;
 * @return {string}
 */
proto.commande.Commande.prototype.getModificationBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 34, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setModificationBy = function(value) {
  return jspb.Message.setProto3StringField(this, 34, value);
};


/**
 * optional string modificationer_id = 35;
 * @return {string}
 */
proto.commande.Commande.prototype.getModificationerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 35, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setModificationerId = function(value) {
  return jspb.Message.setProto3StringField(this, 35, value);
};


/**
 * optional string validation_by = 36;
 * @return {string}
 */
proto.commande.Commande.prototype.getValidationBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 36, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setValidationBy = function(value) {
  return jspb.Message.setProto3StringField(this, 36, value);
};


/**
 * optional string validationer_id = 37;
 * @return {string}
 */
proto.commande.Commande.prototype.getValidationerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setValidationerId = function(value) {
  return jspb.Message.setProto3StringField(this, 37, value);
};


/**
 * optional int64 validation_at = 38;
 * @return {number}
 */
proto.commande.Commande.prototype.getValidationAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 38, 0));
};


/**
 * @param {number} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setValidationAt = function(value) {
  return jspb.Message.setProto3IntField(this, 38, value);
};


/**
 * repeated ComFile com_file = 39;
 * @return {!Array<!proto.commande.ComFile>}
 */
proto.commande.Commande.prototype.getComFileList = function() {
  return /** @type{!Array<!proto.commande.ComFile>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.commande.ComFile, 39));
};


/**
 * @param {!Array<!proto.commande.ComFile>} value
 * @return {!proto.commande.Commande} returns this
*/
proto.commande.Commande.prototype.setComFileList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 39, value);
};


/**
 * @param {!proto.commande.ComFile=} opt_value
 * @param {number=} opt_index
 * @return {!proto.commande.ComFile}
 */
proto.commande.Commande.prototype.addComFile = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 39, opt_value, proto.commande.ComFile, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.clearComFileList = function() {
  return this.setComFileList([]);
};


/**
 * optional string status_code = 40;
 * @return {string}
 */
proto.commande.Commande.prototype.getStatusCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 40, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setStatusCode = function(value) {
  return jspb.Message.setProto3StringField(this, 40, value);
};


/**
 * optional string assignee_id = 41;
 * @return {string}
 */
proto.commande.Commande.prototype.getAssigneeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 41, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setAssigneeId = function(value) {
  return jspb.Message.setProto3StringField(this, 41, value);
};


/**
 * optional string assignee_by = 42;
 * @return {string}
 */
proto.commande.Commande.prototype.getAssigneeBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 42, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setAssigneeBy = function(value) {
  return jspb.Message.setProto3StringField(this, 42, value);
};


/**
 * optional bool force_dlou = 43;
 * @return {boolean}
 */
proto.commande.Commande.prototype.getForceDlou = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 43, false));
};


/**
 * @param {boolean} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setForceDlou = function(value) {
  return jspb.Message.setProto3BooleanField(this, 43, value);
};


/**
 * repeated MissionInfo mission = 44;
 * @return {!Array<!proto.commande.MissionInfo>}
 */
proto.commande.Commande.prototype.getMissionList = function() {
  return /** @type{!Array<!proto.commande.MissionInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.commande.MissionInfo, 44));
};


/**
 * @param {!Array<!proto.commande.MissionInfo>} value
 * @return {!proto.commande.Commande} returns this
*/
proto.commande.Commande.prototype.setMissionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 44, value);
};


/**
 * @param {!proto.commande.MissionInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.commande.MissionInfo}
 */
proto.commande.Commande.prototype.addMission = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 44, opt_value, proto.commande.MissionInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.clearMissionList = function() {
  return this.setMissionList([]);
};


/**
 * optional int64 canceled_at = 45;
 * @return {number}
 */
proto.commande.Commande.prototype.getCanceledAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 45, 0));
};


/**
 * @param {number} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setCanceledAt = function(value) {
  return jspb.Message.setProto3IntField(this, 45, value);
};


/**
 * optional string scene = 46;
 * @return {string}
 */
proto.commande.Commande.prototype.getScene = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 46, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setScene = function(value) {
  return jspb.Message.setProto3StringField(this, 46, value);
};


/**
 * optional bool active_lot = 47;
 * @return {boolean}
 */
proto.commande.Commande.prototype.getActiveLot = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 47, false));
};


/**
 * @param {boolean} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setActiveLot = function(value) {
  return jspb.Message.setProto3BooleanField(this, 47, value);
};


/**
 * optional ClientCommande client_ob = 48;
 * @return {?proto.commande.ClientCommande}
 */
proto.commande.Commande.prototype.getClientOb = function() {
  return /** @type{?proto.commande.ClientCommande} */ (
    jspb.Message.getWrapperField(this, proto.commande.ClientCommande, 48));
};


/**
 * @param {?proto.commande.ClientCommande|undefined} value
 * @return {!proto.commande.Commande} returns this
*/
proto.commande.Commande.prototype.setClientOb = function(value) {
  return jspb.Message.setWrapperField(this, 48, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.clearClientOb = function() {
  return this.setClientOb(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.commande.Commande.prototype.hasClientOb = function() {
  return jspb.Message.getField(this, 48) != null;
};


/**
 * optional int32 valid_times = 49;
 * @return {number}
 */
proto.commande.Commande.prototype.getValidTimes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 49, 0));
};


/**
 * @param {number} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setValidTimes = function(value) {
  return jspb.Message.setProto3IntField(this, 49, value);
};


/**
 * optional string type = 50;
 * @return {string}
 */
proto.commande.Commande.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};


/**
 * optional string mouvement = 51;
 * @return {string}
 */
proto.commande.Commande.prototype.getMouvement = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setMouvement = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};


/**
 * optional string eta = 52;
 * @return {string}
 */
proto.commande.Commande.prototype.getEta = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 52, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setEta = function(value) {
  return jspb.Message.setProto3StringField(this, 52, value);
};


/**
 * repeated string sscc_block = 53;
 * @return {!Array<string>}
 */
proto.commande.Commande.prototype.getSsccBlockList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 53));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setSsccBlockList = function(value) {
  return jspb.Message.setField(this, 53, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.addSsccBlock = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 53, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.clearSsccBlockList = function() {
  return this.setSsccBlockList([]);
};


/**
 * repeated string etas = 54;
 * @return {!Array<string>}
 */
proto.commande.Commande.prototype.getEtasList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 54));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setEtasList = function(value) {
  return jspb.Message.setField(this, 54, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.addEtas = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 54, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.clearEtasList = function() {
  return this.setEtasList([]);
};


/**
 * repeated string types = 55;
 * @return {!Array<string>}
 */
proto.commande.Commande.prototype.getTypesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 55));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setTypesList = function(value) {
  return jspb.Message.setField(this, 55, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.addTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 55, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.clearTypesList = function() {
  return this.setTypesList([]);
};


/**
 * repeated string statuses = 56;
 * @return {!Array<string>}
 */
proto.commande.Commande.prototype.getStatusesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 56));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setStatusesList = function(value) {
  return jspb.Message.setField(this, 56, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.addStatuses = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 56, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.clearStatusesList = function() {
  return this.setStatusesList([]);
};


/**
 * optional int64 quantite = 57;
 * @return {number}
 */
proto.commande.Commande.prototype.getQuantite = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 57, 0));
};


/**
 * @param {number} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setQuantite = function(value) {
  return jspb.Message.setProto3IntField(this, 57, value);
};


/**
 * optional int64 sous_qte = 58;
 * @return {number}
 */
proto.commande.Commande.prototype.getSousQte = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 58, 0));
};


/**
 * @param {number} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setSousQte = function(value) {
  return jspb.Message.setProto3IntField(this, 58, value);
};


/**
 * optional int64 total_pieses = 59;
 * @return {number}
 */
proto.commande.Commande.prototype.getTotalPieses = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 59, 0));
};


/**
 * @param {number} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setTotalPieses = function(value) {
  return jspb.Message.setProto3IntField(this, 59, value);
};


/**
 * optional string chrono = 60;
 * @return {string}
 */
proto.commande.Commande.prototype.getChrono = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 60, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setChrono = function(value) {
  return jspb.Message.setProto3StringField(this, 60, value);
};


/**
 * optional int64 loading_validation_time = 61;
 * @return {number}
 */
proto.commande.Commande.prototype.getLoadingValidationTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 61, 0));
};


/**
 * @param {number} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setLoadingValidationTime = function(value) {
  return jspb.Message.setProto3IntField(this, 61, value);
};


/**
 * optional string loading_validation_by = 62;
 * @return {string}
 */
proto.commande.Commande.prototype.getLoadingValidationBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 62, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.Commande} returns this
 */
proto.commande.Commande.prototype.setLoadingValidationBy = function(value) {
  return jspb.Message.setProto3StringField(this, 62, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.commande.MissionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.commande.MissionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.commande.MissionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.commande.MissionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    parentId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    modificationBy: jspb.Message.getFieldWithDefault(msg, 5, ""),
    modificationerId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    validationBy: jspb.Message.getFieldWithDefault(msg, 7, ""),
    validationerId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    validationTime: jspb.Message.getFieldWithDefault(msg, 9, 0),
    managerId: jspb.Message.getFieldWithDefault(msg, 10, ""),
    managerBy: jspb.Message.getFieldWithDefault(msg, 11, ""),
    assigneeId: jspb.Message.getFieldWithDefault(msg, 12, ""),
    assigneeBy: jspb.Message.getFieldWithDefault(msg, 13, ""),
    statusCode: jspb.Message.getFieldWithDefault(msg, 14, ""),
    loadingBl: jspb.Message.getFieldWithDefault(msg, 15, ""),
    priorite: jspb.Message.getFieldWithDefault(msg, 16, 0),
    companyCodeNom: jspb.Message.getFieldWithDefault(msg, 17, ""),
    warehouseCodeNom: jspb.Message.getFieldWithDefault(msg, 18, ""),
    clientCodeNom: jspb.Message.getFieldWithDefault(msg, 19, ""),
    nom: jspb.Message.getFieldWithDefault(msg, 20, ""),
    missionType: jspb.Message.getFieldWithDefault(msg, 21, 0),
    truckNumber: jspb.Message.getFieldWithDefault(msg, 22, ""),
    sscc: jspb.Message.getFieldWithDefault(msg, 23, ""),
    companyId: jspb.Message.getFieldWithDefault(msg, 24, ""),
    warehouseId: jspb.Message.getFieldWithDefault(msg, 25, ""),
    clientId: jspb.Message.getFieldWithDefault(msg, 26, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.commande.MissionInfo}
 */
proto.commande.MissionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.commande.MissionInfo;
  return proto.commande.MissionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.commande.MissionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.commande.MissionInfo}
 */
proto.commande.MissionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setModificationBy(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setModificationerId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidationBy(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidationerId(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValidationTime(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setManagerId(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setManagerBy(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssigneeId(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssigneeBy(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatusCode(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoadingBl(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriorite(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyCodeNom(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseCodeNom(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientCodeNom(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setNom(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMissionType(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setTruckNumber(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setSscc(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseId(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.commande.MissionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.commande.MissionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.commande.MissionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.commande.MissionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getParentId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getModificationBy();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getModificationerId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getValidationBy();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getValidationerId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getValidationTime();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getManagerId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getManagerBy();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getAssigneeId();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getAssigneeBy();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getStatusCode();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getLoadingBl();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getPriorite();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getCompanyCodeNom();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getWarehouseCodeNom();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getClientCodeNom();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getNom();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getMissionType();
  if (f !== 0) {
    writer.writeInt32(
      21,
      f
    );
  }
  f = message.getTruckNumber();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getSscc();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getWarehouseId();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.commande.MissionInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.MissionInfo} returns this
 */
proto.commande.MissionInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 created_at = 2;
 * @return {number}
 */
proto.commande.MissionInfo.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.commande.MissionInfo} returns this
 */
proto.commande.MissionInfo.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 updated_at = 3;
 * @return {number}
 */
proto.commande.MissionInfo.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.commande.MissionInfo} returns this
 */
proto.commande.MissionInfo.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string parent_id = 4;
 * @return {string}
 */
proto.commande.MissionInfo.prototype.getParentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.MissionInfo} returns this
 */
proto.commande.MissionInfo.prototype.setParentId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string modification_by = 5;
 * @return {string}
 */
proto.commande.MissionInfo.prototype.getModificationBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.MissionInfo} returns this
 */
proto.commande.MissionInfo.prototype.setModificationBy = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string modificationer_id = 6;
 * @return {string}
 */
proto.commande.MissionInfo.prototype.getModificationerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.MissionInfo} returns this
 */
proto.commande.MissionInfo.prototype.setModificationerId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string validation_by = 7;
 * @return {string}
 */
proto.commande.MissionInfo.prototype.getValidationBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.MissionInfo} returns this
 */
proto.commande.MissionInfo.prototype.setValidationBy = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string validationer_id = 8;
 * @return {string}
 */
proto.commande.MissionInfo.prototype.getValidationerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.MissionInfo} returns this
 */
proto.commande.MissionInfo.prototype.setValidationerId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int64 validation_time = 9;
 * @return {number}
 */
proto.commande.MissionInfo.prototype.getValidationTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.commande.MissionInfo} returns this
 */
proto.commande.MissionInfo.prototype.setValidationTime = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string manager_id = 10;
 * @return {string}
 */
proto.commande.MissionInfo.prototype.getManagerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.MissionInfo} returns this
 */
proto.commande.MissionInfo.prototype.setManagerId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string manager_by = 11;
 * @return {string}
 */
proto.commande.MissionInfo.prototype.getManagerBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.MissionInfo} returns this
 */
proto.commande.MissionInfo.prototype.setManagerBy = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string assignee_id = 12;
 * @return {string}
 */
proto.commande.MissionInfo.prototype.getAssigneeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.MissionInfo} returns this
 */
proto.commande.MissionInfo.prototype.setAssigneeId = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string assignee_by = 13;
 * @return {string}
 */
proto.commande.MissionInfo.prototype.getAssigneeBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.MissionInfo} returns this
 */
proto.commande.MissionInfo.prototype.setAssigneeBy = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string status_code = 14;
 * @return {string}
 */
proto.commande.MissionInfo.prototype.getStatusCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.MissionInfo} returns this
 */
proto.commande.MissionInfo.prototype.setStatusCode = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string loading_bl = 15;
 * @return {string}
 */
proto.commande.MissionInfo.prototype.getLoadingBl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.MissionInfo} returns this
 */
proto.commande.MissionInfo.prototype.setLoadingBl = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional int32 priorite = 16;
 * @return {number}
 */
proto.commande.MissionInfo.prototype.getPriorite = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.commande.MissionInfo} returns this
 */
proto.commande.MissionInfo.prototype.setPriorite = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional string company_code_nom = 17;
 * @return {string}
 */
proto.commande.MissionInfo.prototype.getCompanyCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.MissionInfo} returns this
 */
proto.commande.MissionInfo.prototype.setCompanyCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string warehouse_code_nom = 18;
 * @return {string}
 */
proto.commande.MissionInfo.prototype.getWarehouseCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.MissionInfo} returns this
 */
proto.commande.MissionInfo.prototype.setWarehouseCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string client_code_nom = 19;
 * @return {string}
 */
proto.commande.MissionInfo.prototype.getClientCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.MissionInfo} returns this
 */
proto.commande.MissionInfo.prototype.setClientCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string nom = 20;
 * @return {string}
 */
proto.commande.MissionInfo.prototype.getNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.MissionInfo} returns this
 */
proto.commande.MissionInfo.prototype.setNom = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional int32 mission_type = 21;
 * @return {number}
 */
proto.commande.MissionInfo.prototype.getMissionType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.commande.MissionInfo} returns this
 */
proto.commande.MissionInfo.prototype.setMissionType = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional string truck_number = 22;
 * @return {string}
 */
proto.commande.MissionInfo.prototype.getTruckNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.MissionInfo} returns this
 */
proto.commande.MissionInfo.prototype.setTruckNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string sscc = 23;
 * @return {string}
 */
proto.commande.MissionInfo.prototype.getSscc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.MissionInfo} returns this
 */
proto.commande.MissionInfo.prototype.setSscc = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string company_id = 24;
 * @return {string}
 */
proto.commande.MissionInfo.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.MissionInfo} returns this
 */
proto.commande.MissionInfo.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string warehouse_id = 25;
 * @return {string}
 */
proto.commande.MissionInfo.prototype.getWarehouseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.MissionInfo} returns this
 */
proto.commande.MissionInfo.prototype.setWarehouseId = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string client_id = 26;
 * @return {string}
 */
proto.commande.MissionInfo.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.MissionInfo} returns this
 */
proto.commande.MissionInfo.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.commande.ClientCommande.prototype.toObject = function(opt_includeInstance) {
  return proto.commande.ClientCommande.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.commande.ClientCommande} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.commande.ClientCommande.toObject = function(includeInstance, msg) {
  var f, obj = {
    nom: jspb.Message.getFieldWithDefault(msg, 1, ""),
    code: jspb.Message.getFieldWithDefault(msg, 2, ""),
    codeNom: jspb.Message.getFieldWithDefault(msg, 3, ""),
    fifo: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    fefo: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    moisDluoInput: jspb.Message.getFieldWithDefault(msg, 6, 0),
    moisDluoActivate: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.commande.ClientCommande}
 */
proto.commande.ClientCommande.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.commande.ClientCommande;
  return proto.commande.ClientCommande.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.commande.ClientCommande} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.commande.ClientCommande}
 */
proto.commande.ClientCommande.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNom(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodeNom(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFifo(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFefo(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMoisDluoInput(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMoisDluoActivate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.commande.ClientCommande.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.commande.ClientCommande.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.commande.ClientCommande} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.commande.ClientCommande.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCodeNom();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFifo();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getFefo();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getMoisDluoInput();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getMoisDluoActivate();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional string nom = 1;
 * @return {string}
 */
proto.commande.ClientCommande.prototype.getNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.ClientCommande} returns this
 */
proto.commande.ClientCommande.prototype.setNom = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.commande.ClientCommande.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.ClientCommande} returns this
 */
proto.commande.ClientCommande.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string code_nom = 3;
 * @return {string}
 */
proto.commande.ClientCommande.prototype.getCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.ClientCommande} returns this
 */
proto.commande.ClientCommande.prototype.setCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool fifo = 4;
 * @return {boolean}
 */
proto.commande.ClientCommande.prototype.getFifo = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.commande.ClientCommande} returns this
 */
proto.commande.ClientCommande.prototype.setFifo = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool fefo = 5;
 * @return {boolean}
 */
proto.commande.ClientCommande.prototype.getFefo = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.commande.ClientCommande} returns this
 */
proto.commande.ClientCommande.prototype.setFefo = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional int32 mois_dluo_input = 6;
 * @return {number}
 */
proto.commande.ClientCommande.prototype.getMoisDluoInput = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.commande.ClientCommande} returns this
 */
proto.commande.ClientCommande.prototype.setMoisDluoInput = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool mois_dluo_activate = 7;
 * @return {boolean}
 */
proto.commande.ClientCommande.prototype.getMoisDluoActivate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.commande.ClientCommande} returns this
 */
proto.commande.ClientCommande.prototype.setMoisDluoActivate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.commande.ComComment.prototype.toObject = function(opt_includeInstance) {
  return proto.commande.ComComment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.commande.ComComment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.commande.ComComment.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    commandeId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    comment: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.commande.ComComment}
 */
proto.commande.ComComment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.commande.ComComment;
  return proto.commande.ComComment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.commande.ComComment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.commande.ComComment}
 */
proto.commande.ComComment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommandeId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.commande.ComComment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.commande.ComComment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.commande.ComComment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.commande.ComComment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getCommandeId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.commande.ComComment.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.ComComment} returns this
 */
proto.commande.ComComment.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 created_at = 2;
 * @return {number}
 */
proto.commande.ComComment.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.commande.ComComment} returns this
 */
proto.commande.ComComment.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 updated_at = 3;
 * @return {number}
 */
proto.commande.ComComment.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.commande.ComComment} returns this
 */
proto.commande.ComComment.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string commande_id = 4;
 * @return {string}
 */
proto.commande.ComComment.prototype.getCommandeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.ComComment} returns this
 */
proto.commande.ComComment.prototype.setCommandeId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string comment = 5;
 * @return {string}
 */
proto.commande.ComComment.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.ComComment} returns this
 */
proto.commande.ComComment.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.commande.ComFile.prototype.toObject = function(opt_includeInstance) {
  return proto.commande.ComFile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.commande.ComFile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.commande.ComFile.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    commandeId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    description: jspb.Message.getFieldWithDefault(msg, 6, ""),
    path: jspb.Message.getFieldWithDefault(msg, 7, ""),
    source: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.commande.ComFile}
 */
proto.commande.ComFile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.commande.ComFile;
  return proto.commande.ComFile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.commande.ComFile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.commande.ComFile}
 */
proto.commande.ComFile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommandeId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.commande.ComFile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.commande.ComFile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.commande.ComFile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.commande.ComFile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCommandeId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.commande.ComFile.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.ComFile} returns this
 */
proto.commande.ComFile.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 created_at = 2;
 * @return {number}
 */
proto.commande.ComFile.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.commande.ComFile} returns this
 */
proto.commande.ComFile.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 updated_at = 3;
 * @return {number}
 */
proto.commande.ComFile.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.commande.ComFile} returns this
 */
proto.commande.ComFile.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.commande.ComFile.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.ComFile} returns this
 */
proto.commande.ComFile.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string commande_id = 5;
 * @return {string}
 */
proto.commande.ComFile.prototype.getCommandeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.ComFile} returns this
 */
proto.commande.ComFile.prototype.setCommandeId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.commande.ComFile.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.ComFile} returns this
 */
proto.commande.ComFile.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string path = 7;
 * @return {string}
 */
proto.commande.ComFile.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.ComFile} returns this
 */
proto.commande.ComFile.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string source = 8;
 * @return {string}
 */
proto.commande.ComFile.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.commande.ComFile} returns this
 */
proto.commande.ComFile.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


goog.object.extend(exports, proto.commande);
