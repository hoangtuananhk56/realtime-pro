/**
 * @fileoverview gRPC-Web generated client stub for reserve
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.21.12
// source: proto/reserve/reserve.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as proto_reserve_reserve_pb from '../../proto/reserve/reserve_pb'; // proto import: "proto/reserve/reserve.proto"


export class ReserveServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateManyReserveType = new grpcWeb.MethodDescriptor(
    '/reserve.ReserveService/CreateManyReserveType',
    grpcWeb.MethodType.UNARY,
    proto_reserve_reserve_pb.CreateManyReserveTypeRequest,
    proto_reserve_reserve_pb.CreateManyReserveTypeResponse,
    (request: proto_reserve_reserve_pb.CreateManyReserveTypeRequest) => {
      return request.serializeBinary();
    },
    proto_reserve_reserve_pb.CreateManyReserveTypeResponse.deserializeBinary
  );

  createManyReserveType(
    request: proto_reserve_reserve_pb.CreateManyReserveTypeRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reserve_reserve_pb.CreateManyReserveTypeResponse>;

  createManyReserveType(
    request: proto_reserve_reserve_pb.CreateManyReserveTypeRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reserve_reserve_pb.CreateManyReserveTypeResponse) => void): grpcWeb.ClientReadableStream<proto_reserve_reserve_pb.CreateManyReserveTypeResponse>;

  createManyReserveType(
    request: proto_reserve_reserve_pb.CreateManyReserveTypeRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reserve_reserve_pb.CreateManyReserveTypeResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reserve.ReserveService/CreateManyReserveType',
        request,
        metadata || {},
        this.methodDescriptorCreateManyReserveType,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reserve.ReserveService/CreateManyReserveType',
    request,
    metadata || {},
    this.methodDescriptorCreateManyReserveType);
  }

  methodDescriptorCreateManyReserve = new grpcWeb.MethodDescriptor(
    '/reserve.ReserveService/CreateManyReserve',
    grpcWeb.MethodType.UNARY,
    proto_reserve_reserve_pb.CreateManyReserveRequest,
    proto_reserve_reserve_pb.CreateManyReserveResponse,
    (request: proto_reserve_reserve_pb.CreateManyReserveRequest) => {
      return request.serializeBinary();
    },
    proto_reserve_reserve_pb.CreateManyReserveResponse.deserializeBinary
  );

  createManyReserve(
    request: proto_reserve_reserve_pb.CreateManyReserveRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reserve_reserve_pb.CreateManyReserveResponse>;

  createManyReserve(
    request: proto_reserve_reserve_pb.CreateManyReserveRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reserve_reserve_pb.CreateManyReserveResponse) => void): grpcWeb.ClientReadableStream<proto_reserve_reserve_pb.CreateManyReserveResponse>;

  createManyReserve(
    request: proto_reserve_reserve_pb.CreateManyReserveRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reserve_reserve_pb.CreateManyReserveResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reserve.ReserveService/CreateManyReserve',
        request,
        metadata || {},
        this.methodDescriptorCreateManyReserve,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reserve.ReserveService/CreateManyReserve',
    request,
    metadata || {},
    this.methodDescriptorCreateManyReserve);
  }

  methodDescriptorGetReserveTypeForMission = new grpcWeb.MethodDescriptor(
    '/reserve.ReserveService/GetReserveTypeForMission',
    grpcWeb.MethodType.UNARY,
    proto_reserve_reserve_pb.GetReserveTypeForMissionRequest,
    proto_reserve_reserve_pb.GetReserveTypeForMissionResponse,
    (request: proto_reserve_reserve_pb.GetReserveTypeForMissionRequest) => {
      return request.serializeBinary();
    },
    proto_reserve_reserve_pb.GetReserveTypeForMissionResponse.deserializeBinary
  );

  getReserveTypeForMission(
    request: proto_reserve_reserve_pb.GetReserveTypeForMissionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reserve_reserve_pb.GetReserveTypeForMissionResponse>;

  getReserveTypeForMission(
    request: proto_reserve_reserve_pb.GetReserveTypeForMissionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reserve_reserve_pb.GetReserveTypeForMissionResponse) => void): grpcWeb.ClientReadableStream<proto_reserve_reserve_pb.GetReserveTypeForMissionResponse>;

  getReserveTypeForMission(
    request: proto_reserve_reserve_pb.GetReserveTypeForMissionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reserve_reserve_pb.GetReserveTypeForMissionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reserve.ReserveService/GetReserveTypeForMission',
        request,
        metadata || {},
        this.methodDescriptorGetReserveTypeForMission,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reserve.ReserveService/GetReserveTypeForMission',
    request,
    metadata || {},
    this.methodDescriptorGetReserveTypeForMission);
  }

  methodDescriptorGetReserveForMission = new grpcWeb.MethodDescriptor(
    '/reserve.ReserveService/GetReserveForMission',
    grpcWeb.MethodType.UNARY,
    proto_reserve_reserve_pb.GetReserveForMissionRequest,
    proto_reserve_reserve_pb.GetReserveForMissionResponse,
    (request: proto_reserve_reserve_pb.GetReserveForMissionRequest) => {
      return request.serializeBinary();
    },
    proto_reserve_reserve_pb.GetReserveForMissionResponse.deserializeBinary
  );

  getReserveForMission(
    request: proto_reserve_reserve_pb.GetReserveForMissionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reserve_reserve_pb.GetReserveForMissionResponse>;

  getReserveForMission(
    request: proto_reserve_reserve_pb.GetReserveForMissionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reserve_reserve_pb.GetReserveForMissionResponse) => void): grpcWeb.ClientReadableStream<proto_reserve_reserve_pb.GetReserveForMissionResponse>;

  getReserveForMission(
    request: proto_reserve_reserve_pb.GetReserveForMissionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reserve_reserve_pb.GetReserveForMissionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reserve.ReserveService/GetReserveForMission',
        request,
        metadata || {},
        this.methodDescriptorGetReserveForMission,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reserve.ReserveService/GetReserveForMission',
    request,
    metadata || {},
    this.methodDescriptorGetReserveForMission);
  }

  methodDescriptorValidQtyBySSCC = new grpcWeb.MethodDescriptor(
    '/reserve.ReserveService/ValidQtyBySSCC',
    grpcWeb.MethodType.UNARY,
    proto_reserve_reserve_pb.ValidQtyRequest,
    proto_reserve_reserve_pb.ValidQtyResponse,
    (request: proto_reserve_reserve_pb.ValidQtyRequest) => {
      return request.serializeBinary();
    },
    proto_reserve_reserve_pb.ValidQtyResponse.deserializeBinary
  );

  validQtyBySSCC(
    request: proto_reserve_reserve_pb.ValidQtyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reserve_reserve_pb.ValidQtyResponse>;

  validQtyBySSCC(
    request: proto_reserve_reserve_pb.ValidQtyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reserve_reserve_pb.ValidQtyResponse) => void): grpcWeb.ClientReadableStream<proto_reserve_reserve_pb.ValidQtyResponse>;

  validQtyBySSCC(
    request: proto_reserve_reserve_pb.ValidQtyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reserve_reserve_pb.ValidQtyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reserve.ReserveService/ValidQtyBySSCC',
        request,
        metadata || {},
        this.methodDescriptorValidQtyBySSCC,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reserve.ReserveService/ValidQtyBySSCC',
    request,
    metadata || {},
    this.methodDescriptorValidQtyBySSCC);
  }

  methodDescriptorDeleteAllReserveByAttenduInfo = new grpcWeb.MethodDescriptor(
    '/reserve.ReserveService/DeleteAllReserveByAttenduInfo',
    grpcWeb.MethodType.UNARY,
    proto_reserve_reserve_pb.DeleteAllReserveByAttenduInfoRequest,
    proto_reserve_reserve_pb.DeleteAllReserveByAttenduInfoResponse,
    (request: proto_reserve_reserve_pb.DeleteAllReserveByAttenduInfoRequest) => {
      return request.serializeBinary();
    },
    proto_reserve_reserve_pb.DeleteAllReserveByAttenduInfoResponse.deserializeBinary
  );

  deleteAllReserveByAttenduInfo(
    request: proto_reserve_reserve_pb.DeleteAllReserveByAttenduInfoRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reserve_reserve_pb.DeleteAllReserveByAttenduInfoResponse>;

  deleteAllReserveByAttenduInfo(
    request: proto_reserve_reserve_pb.DeleteAllReserveByAttenduInfoRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reserve_reserve_pb.DeleteAllReserveByAttenduInfoResponse) => void): grpcWeb.ClientReadableStream<proto_reserve_reserve_pb.DeleteAllReserveByAttenduInfoResponse>;

  deleteAllReserveByAttenduInfo(
    request: proto_reserve_reserve_pb.DeleteAllReserveByAttenduInfoRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reserve_reserve_pb.DeleteAllReserveByAttenduInfoResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reserve.ReserveService/DeleteAllReserveByAttenduInfo',
        request,
        metadata || {},
        this.methodDescriptorDeleteAllReserveByAttenduInfo,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reserve.ReserveService/DeleteAllReserveByAttenduInfo',
    request,
    metadata || {},
    this.methodDescriptorDeleteAllReserveByAttenduInfo);
  }

  methodDescriptorGetReserveOnAttendu = new grpcWeb.MethodDescriptor(
    '/reserve.ReserveService/GetReserveOnAttendu',
    grpcWeb.MethodType.UNARY,
    proto_reserve_reserve_pb.ReserveOnAttenduRequest,
    proto_reserve_reserve_pb.ReserveOnAttenduResponse,
    (request: proto_reserve_reserve_pb.ReserveOnAttenduRequest) => {
      return request.serializeBinary();
    },
    proto_reserve_reserve_pb.ReserveOnAttenduResponse.deserializeBinary
  );

  getReserveOnAttendu(
    request: proto_reserve_reserve_pb.ReserveOnAttenduRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reserve_reserve_pb.ReserveOnAttenduResponse>;

  getReserveOnAttendu(
    request: proto_reserve_reserve_pb.ReserveOnAttenduRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reserve_reserve_pb.ReserveOnAttenduResponse) => void): grpcWeb.ClientReadableStream<proto_reserve_reserve_pb.ReserveOnAttenduResponse>;

  getReserveOnAttendu(
    request: proto_reserve_reserve_pb.ReserveOnAttenduRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reserve_reserve_pb.ReserveOnAttenduResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reserve.ReserveService/GetReserveOnAttendu',
        request,
        metadata || {},
        this.methodDescriptorGetReserveOnAttendu,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reserve.ReserveService/GetReserveOnAttendu',
    request,
    metadata || {},
    this.methodDescriptorGetReserveOnAttendu);
  }

  methodDescriptorUpdateUnblock = new grpcWeb.MethodDescriptor(
    '/reserve.ReserveService/UpdateUnblock',
    grpcWeb.MethodType.UNARY,
    proto_reserve_reserve_pb.UpdateReserveRequest,
    proto_reserve_reserve_pb.UpdateReserveResponse,
    (request: proto_reserve_reserve_pb.UpdateReserveRequest) => {
      return request.serializeBinary();
    },
    proto_reserve_reserve_pb.UpdateReserveResponse.deserializeBinary
  );

  updateUnblock(
    request: proto_reserve_reserve_pb.UpdateReserveRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reserve_reserve_pb.UpdateReserveResponse>;

  updateUnblock(
    request: proto_reserve_reserve_pb.UpdateReserveRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reserve_reserve_pb.UpdateReserveResponse) => void): grpcWeb.ClientReadableStream<proto_reserve_reserve_pb.UpdateReserveResponse>;

  updateUnblock(
    request: proto_reserve_reserve_pb.UpdateReserveRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reserve_reserve_pb.UpdateReserveResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reserve.ReserveService/UpdateUnblock',
        request,
        metadata || {},
        this.methodDescriptorUpdateUnblock,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reserve.ReserveService/UpdateUnblock',
    request,
    metadata || {},
    this.methodDescriptorUpdateUnblock);
  }

  methodDescriptorUpdateReserves = new grpcWeb.MethodDescriptor(
    '/reserve.ReserveService/UpdateReserves',
    grpcWeb.MethodType.UNARY,
    proto_reserve_reserve_pb.UpdateReservesRequest,
    proto_reserve_reserve_pb.UpdateReservesResponse,
    (request: proto_reserve_reserve_pb.UpdateReservesRequest) => {
      return request.serializeBinary();
    },
    proto_reserve_reserve_pb.UpdateReservesResponse.deserializeBinary
  );

  updateReserves(
    request: proto_reserve_reserve_pb.UpdateReservesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_reserve_reserve_pb.UpdateReservesResponse>;

  updateReserves(
    request: proto_reserve_reserve_pb.UpdateReservesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_reserve_reserve_pb.UpdateReservesResponse) => void): grpcWeb.ClientReadableStream<proto_reserve_reserve_pb.UpdateReservesResponse>;

  updateReserves(
    request: proto_reserve_reserve_pb.UpdateReservesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_reserve_reserve_pb.UpdateReservesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reserve.ReserveService/UpdateReserves',
        request,
        metadata || {},
        this.methodDescriptorUpdateReserves,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reserve.ReserveService/UpdateReserves',
    request,
    metadata || {},
    this.methodDescriptorUpdateReserves);
  }

}

