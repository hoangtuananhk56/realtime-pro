// source: proto/reserve/reserve.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.reserve.CheckPutAwayLocationInfo', null, global);
goog.exportSymbol('proto.reserve.CreateManyReserveRequest', null, global);
goog.exportSymbol('proto.reserve.CreateManyReserveResponse', null, global);
goog.exportSymbol('proto.reserve.CreateManyReserveTypeRequest', null, global);
goog.exportSymbol('proto.reserve.CreateManyReserveTypeResponse', null, global);
goog.exportSymbol('proto.reserve.DeleteAllReserveByAttenduInfoRequest', null, global);
goog.exportSymbol('proto.reserve.DeleteAllReserveByAttenduInfoResponse', null, global);
goog.exportSymbol('proto.reserve.GetReserveForMissionRequest', null, global);
goog.exportSymbol('proto.reserve.GetReserveForMissionResponse', null, global);
goog.exportSymbol('proto.reserve.GetReserveTypeForMissionRequest', null, global);
goog.exportSymbol('proto.reserve.GetReserveTypeForMissionResponse', null, global);
goog.exportSymbol('proto.reserve.LocationDTO', null, global);
goog.exportSymbol('proto.reserve.MetaData', null, global);
goog.exportSymbol('proto.reserve.Reserve', null, global);
goog.exportSymbol('proto.reserve.ReserveOnAttenduDTO', null, global);
goog.exportSymbol('proto.reserve.ReserveOnAttenduRequest', null, global);
goog.exportSymbol('proto.reserve.ReserveOnAttenduResponse', null, global);
goog.exportSymbol('proto.reserve.ReserveType', null, global);
goog.exportSymbol('proto.reserve.UpdateReserveRequest', null, global);
goog.exportSymbol('proto.reserve.UpdateReserveResponse', null, global);
goog.exportSymbol('proto.reserve.UpdateReservesRequest', null, global);
goog.exportSymbol('proto.reserve.UpdateReservesResponse', null, global);
goog.exportSymbol('proto.reserve.ValidQtyRequest', null, global);
goog.exportSymbol('proto.reserve.ValidQtyResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reserve.Reserve = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.reserve.Reserve.repeatedFields_, null);
};
goog.inherits(proto.reserve.Reserve, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reserve.Reserve.displayName = 'proto.reserve.Reserve';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reserve.ReserveType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reserve.ReserveType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reserve.ReserveType.displayName = 'proto.reserve.ReserveType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reserve.GetReserveTypeForMissionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reserve.GetReserveTypeForMissionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reserve.GetReserveTypeForMissionRequest.displayName = 'proto.reserve.GetReserveTypeForMissionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reserve.GetReserveForMissionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reserve.GetReserveForMissionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reserve.GetReserveForMissionRequest.displayName = 'proto.reserve.GetReserveForMissionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reserve.MetaData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reserve.MetaData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reserve.MetaData.displayName = 'proto.reserve.MetaData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reserve.GetReserveTypeForMissionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.reserve.GetReserveTypeForMissionResponse.repeatedFields_, null);
};
goog.inherits(proto.reserve.GetReserveTypeForMissionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reserve.GetReserveTypeForMissionResponse.displayName = 'proto.reserve.GetReserveTypeForMissionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reserve.GetReserveForMissionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.reserve.GetReserveForMissionResponse.repeatedFields_, null);
};
goog.inherits(proto.reserve.GetReserveForMissionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reserve.GetReserveForMissionResponse.displayName = 'proto.reserve.GetReserveForMissionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reserve.CreateManyReserveTypeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.reserve.CreateManyReserveTypeRequest.repeatedFields_, null);
};
goog.inherits(proto.reserve.CreateManyReserveTypeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reserve.CreateManyReserveTypeRequest.displayName = 'proto.reserve.CreateManyReserveTypeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reserve.CreateManyReserveTypeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.reserve.CreateManyReserveTypeResponse.repeatedFields_, null);
};
goog.inherits(proto.reserve.CreateManyReserveTypeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reserve.CreateManyReserveTypeResponse.displayName = 'proto.reserve.CreateManyReserveTypeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reserve.CreateManyReserveRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.reserve.CreateManyReserveRequest.repeatedFields_, null);
};
goog.inherits(proto.reserve.CreateManyReserveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reserve.CreateManyReserveRequest.displayName = 'proto.reserve.CreateManyReserveRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reserve.CheckPutAwayLocationInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.reserve.CheckPutAwayLocationInfo.repeatedFields_, null);
};
goog.inherits(proto.reserve.CheckPutAwayLocationInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reserve.CheckPutAwayLocationInfo.displayName = 'proto.reserve.CheckPutAwayLocationInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reserve.LocationDTO = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reserve.LocationDTO, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reserve.LocationDTO.displayName = 'proto.reserve.LocationDTO';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reserve.CreateManyReserveResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.reserve.CreateManyReserveResponse.repeatedFields_, null);
};
goog.inherits(proto.reserve.CreateManyReserveResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reserve.CreateManyReserveResponse.displayName = 'proto.reserve.CreateManyReserveResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reserve.ValidQtyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reserve.ValidQtyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reserve.ValidQtyRequest.displayName = 'proto.reserve.ValidQtyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reserve.ValidQtyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reserve.ValidQtyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reserve.ValidQtyResponse.displayName = 'proto.reserve.ValidQtyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reserve.DeleteAllReserveByAttenduInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reserve.DeleteAllReserveByAttenduInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reserve.DeleteAllReserveByAttenduInfoRequest.displayName = 'proto.reserve.DeleteAllReserveByAttenduInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reserve.DeleteAllReserveByAttenduInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reserve.DeleteAllReserveByAttenduInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reserve.DeleteAllReserveByAttenduInfoResponse.displayName = 'proto.reserve.DeleteAllReserveByAttenduInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reserve.ReserveOnAttenduDTO = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.reserve.ReserveOnAttenduDTO.repeatedFields_, null);
};
goog.inherits(proto.reserve.ReserveOnAttenduDTO, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reserve.ReserveOnAttenduDTO.displayName = 'proto.reserve.ReserveOnAttenduDTO';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reserve.ReserveOnAttenduResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.reserve.ReserveOnAttenduResponse.repeatedFields_, null);
};
goog.inherits(proto.reserve.ReserveOnAttenduResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reserve.ReserveOnAttenduResponse.displayName = 'proto.reserve.ReserveOnAttenduResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reserve.ReserveOnAttenduRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reserve.ReserveOnAttenduRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reserve.ReserveOnAttenduRequest.displayName = 'proto.reserve.ReserveOnAttenduRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reserve.UpdateReserveRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reserve.UpdateReserveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reserve.UpdateReserveRequest.displayName = 'proto.reserve.UpdateReserveRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reserve.UpdateReserveResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reserve.UpdateReserveResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reserve.UpdateReserveResponse.displayName = 'proto.reserve.UpdateReserveResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reserve.UpdateReservesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.reserve.UpdateReservesRequest.repeatedFields_, null);
};
goog.inherits(proto.reserve.UpdateReservesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reserve.UpdateReservesRequest.displayName = 'proto.reserve.UpdateReservesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reserve.UpdateReservesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.reserve.UpdateReservesResponse.repeatedFields_, null);
};
goog.inherits(proto.reserve.UpdateReservesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reserve.UpdateReservesResponse.displayName = 'proto.reserve.UpdateReservesResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.reserve.Reserve.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reserve.Reserve.prototype.toObject = function(opt_includeInstance) {
  return proto.reserve.Reserve.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reserve.Reserve} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.Reserve.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    reserveTypeId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    reserveTypeName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    attenduId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    sscc: jspb.Message.getFieldWithDefault(msg, 7, ""),
    quantity: jspb.Message.getFieldWithDefault(msg, 8, 0),
    isTakePhotos: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    isInputNumber: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    imagesList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    isBlock: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    comment: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reserve.Reserve}
 */
proto.reserve.Reserve.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reserve.Reserve;
  return proto.reserve.Reserve.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reserve.Reserve} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reserve.Reserve}
 */
proto.reserve.Reserve.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setReserveTypeId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setReserveTypeName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttenduId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSscc(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuantity(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsTakePhotos(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsInputNumber(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addImages(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsBlock(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reserve.Reserve.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reserve.Reserve.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reserve.Reserve} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.Reserve.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getReserveTypeId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getReserveTypeName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAttenduId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSscc();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getIsTakePhotos();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getIsInputNumber();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getImagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getIsBlock();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.reserve.Reserve.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.Reserve} returns this
 */
proto.reserve.Reserve.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 created_at = 2;
 * @return {number}
 */
proto.reserve.Reserve.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.reserve.Reserve} returns this
 */
proto.reserve.Reserve.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 updated_at = 3;
 * @return {number}
 */
proto.reserve.Reserve.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.reserve.Reserve} returns this
 */
proto.reserve.Reserve.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string reserve_type_id = 4;
 * @return {string}
 */
proto.reserve.Reserve.prototype.getReserveTypeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.Reserve} returns this
 */
proto.reserve.Reserve.prototype.setReserveTypeId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string reserve_type_name = 5;
 * @return {string}
 */
proto.reserve.Reserve.prototype.getReserveTypeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.Reserve} returns this
 */
proto.reserve.Reserve.prototype.setReserveTypeName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string attendu_id = 6;
 * @return {string}
 */
proto.reserve.Reserve.prototype.getAttenduId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.Reserve} returns this
 */
proto.reserve.Reserve.prototype.setAttenduId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string sscc = 7;
 * @return {string}
 */
proto.reserve.Reserve.prototype.getSscc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.Reserve} returns this
 */
proto.reserve.Reserve.prototype.setSscc = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 quantity = 8;
 * @return {number}
 */
proto.reserve.Reserve.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.reserve.Reserve} returns this
 */
proto.reserve.Reserve.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bool is_take_photos = 9;
 * @return {boolean}
 */
proto.reserve.Reserve.prototype.getIsTakePhotos = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reserve.Reserve} returns this
 */
proto.reserve.Reserve.prototype.setIsTakePhotos = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool is_input_number = 10;
 * @return {boolean}
 */
proto.reserve.Reserve.prototype.getIsInputNumber = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reserve.Reserve} returns this
 */
proto.reserve.Reserve.prototype.setIsInputNumber = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * repeated string images = 11;
 * @return {!Array<string>}
 */
proto.reserve.Reserve.prototype.getImagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.reserve.Reserve} returns this
 */
proto.reserve.Reserve.prototype.setImagesList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.reserve.Reserve} returns this
 */
proto.reserve.Reserve.prototype.addImages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reserve.Reserve} returns this
 */
proto.reserve.Reserve.prototype.clearImagesList = function() {
  return this.setImagesList([]);
};


/**
 * optional bool is_block = 12;
 * @return {boolean}
 */
proto.reserve.Reserve.prototype.getIsBlock = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reserve.Reserve} returns this
 */
proto.reserve.Reserve.prototype.setIsBlock = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional string comment = 13;
 * @return {string}
 */
proto.reserve.Reserve.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.Reserve} returns this
 */
proto.reserve.Reserve.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reserve.ReserveType.prototype.toObject = function(opt_includeInstance) {
  return proto.reserve.ReserveType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reserve.ReserveType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.ReserveType.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    companyCodeNom: jspb.Message.getFieldWithDefault(msg, 5, ""),
    warehouseCodeNom: jspb.Message.getFieldWithDefault(msg, 6, ""),
    clientCodeNom: jspb.Message.getFieldWithDefault(msg, 7, ""),
    isTakePhotos: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    isInputNumber: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    isDeductQty: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    companyId: jspb.Message.getFieldWithDefault(msg, 11, ""),
    warehouseId: jspb.Message.getFieldWithDefault(msg, 12, ""),
    clientId: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reserve.ReserveType}
 */
proto.reserve.ReserveType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reserve.ReserveType;
  return proto.reserve.ReserveType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reserve.ReserveType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reserve.ReserveType}
 */
proto.reserve.ReserveType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyCodeNom(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseCodeNom(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientCodeNom(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsTakePhotos(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsInputNumber(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDeductQty(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseId(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reserve.ReserveType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reserve.ReserveType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reserve.ReserveType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.ReserveType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCompanyCodeNom();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getWarehouseCodeNom();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getClientCodeNom();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIsTakePhotos();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getIsInputNumber();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getIsDeductQty();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getWarehouseId();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.reserve.ReserveType.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.ReserveType} returns this
 */
proto.reserve.ReserveType.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 created_at = 2;
 * @return {number}
 */
proto.reserve.ReserveType.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.reserve.ReserveType} returns this
 */
proto.reserve.ReserveType.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 updated_at = 3;
 * @return {number}
 */
proto.reserve.ReserveType.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.reserve.ReserveType} returns this
 */
proto.reserve.ReserveType.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.reserve.ReserveType.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.ReserveType} returns this
 */
proto.reserve.ReserveType.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string company_code_nom = 5;
 * @return {string}
 */
proto.reserve.ReserveType.prototype.getCompanyCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.ReserveType} returns this
 */
proto.reserve.ReserveType.prototype.setCompanyCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string warehouse_code_nom = 6;
 * @return {string}
 */
proto.reserve.ReserveType.prototype.getWarehouseCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.ReserveType} returns this
 */
proto.reserve.ReserveType.prototype.setWarehouseCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string client_code_nom = 7;
 * @return {string}
 */
proto.reserve.ReserveType.prototype.getClientCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.ReserveType} returns this
 */
proto.reserve.ReserveType.prototype.setClientCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool is_take_photos = 8;
 * @return {boolean}
 */
proto.reserve.ReserveType.prototype.getIsTakePhotos = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reserve.ReserveType} returns this
 */
proto.reserve.ReserveType.prototype.setIsTakePhotos = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool is_input_number = 9;
 * @return {boolean}
 */
proto.reserve.ReserveType.prototype.getIsInputNumber = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reserve.ReserveType} returns this
 */
proto.reserve.ReserveType.prototype.setIsInputNumber = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool is_deduct_qty = 10;
 * @return {boolean}
 */
proto.reserve.ReserveType.prototype.getIsDeductQty = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reserve.ReserveType} returns this
 */
proto.reserve.ReserveType.prototype.setIsDeductQty = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional string company_id = 11;
 * @return {string}
 */
proto.reserve.ReserveType.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.ReserveType} returns this
 */
proto.reserve.ReserveType.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string warehouse_id = 12;
 * @return {string}
 */
proto.reserve.ReserveType.prototype.getWarehouseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.ReserveType} returns this
 */
proto.reserve.ReserveType.prototype.setWarehouseId = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string client_id = 13;
 * @return {string}
 */
proto.reserve.ReserveType.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.ReserveType} returns this
 */
proto.reserve.ReserveType.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reserve.GetReserveTypeForMissionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reserve.GetReserveTypeForMissionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reserve.GetReserveTypeForMissionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.GetReserveTypeForMissionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    companyCodeNom: jspb.Message.getFieldWithDefault(msg, 3, ""),
    warehouseCodeNom: jspb.Message.getFieldWithDefault(msg, 4, ""),
    clientCodeNom: jspb.Message.getFieldWithDefault(msg, 5, ""),
    attenduId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    sscc: jspb.Message.getFieldWithDefault(msg, 7, ""),
    companyId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    warehouseId: jspb.Message.getFieldWithDefault(msg, 9, ""),
    clientId: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reserve.GetReserveTypeForMissionRequest}
 */
proto.reserve.GetReserveTypeForMissionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reserve.GetReserveTypeForMissionRequest;
  return proto.reserve.GetReserveTypeForMissionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reserve.GetReserveTypeForMissionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reserve.GetReserveTypeForMissionRequest}
 */
proto.reserve.GetReserveTypeForMissionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyCodeNom(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseCodeNom(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientCodeNom(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttenduId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSscc(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseId(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reserve.GetReserveTypeForMissionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reserve.GetReserveTypeForMissionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reserve.GetReserveTypeForMissionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.GetReserveTypeForMissionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCompanyCodeNom();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWarehouseCodeNom();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getClientCodeNom();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAttenduId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSscc();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getWarehouseId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional int32 limit = 1;
 * @return {number}
 */
proto.reserve.GetReserveTypeForMissionRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.reserve.GetReserveTypeForMissionRequest} returns this
 */
proto.reserve.GetReserveTypeForMissionRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 offset = 2;
 * @return {number}
 */
proto.reserve.GetReserveTypeForMissionRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.reserve.GetReserveTypeForMissionRequest} returns this
 */
proto.reserve.GetReserveTypeForMissionRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string company_code_nom = 3;
 * @return {string}
 */
proto.reserve.GetReserveTypeForMissionRequest.prototype.getCompanyCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.GetReserveTypeForMissionRequest} returns this
 */
proto.reserve.GetReserveTypeForMissionRequest.prototype.setCompanyCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string warehouse_code_nom = 4;
 * @return {string}
 */
proto.reserve.GetReserveTypeForMissionRequest.prototype.getWarehouseCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.GetReserveTypeForMissionRequest} returns this
 */
proto.reserve.GetReserveTypeForMissionRequest.prototype.setWarehouseCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string client_code_nom = 5;
 * @return {string}
 */
proto.reserve.GetReserveTypeForMissionRequest.prototype.getClientCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.GetReserveTypeForMissionRequest} returns this
 */
proto.reserve.GetReserveTypeForMissionRequest.prototype.setClientCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string attendu_id = 6;
 * @return {string}
 */
proto.reserve.GetReserveTypeForMissionRequest.prototype.getAttenduId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.GetReserveTypeForMissionRequest} returns this
 */
proto.reserve.GetReserveTypeForMissionRequest.prototype.setAttenduId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string sscc = 7;
 * @return {string}
 */
proto.reserve.GetReserveTypeForMissionRequest.prototype.getSscc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.GetReserveTypeForMissionRequest} returns this
 */
proto.reserve.GetReserveTypeForMissionRequest.prototype.setSscc = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string company_id = 8;
 * @return {string}
 */
proto.reserve.GetReserveTypeForMissionRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.GetReserveTypeForMissionRequest} returns this
 */
proto.reserve.GetReserveTypeForMissionRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string warehouse_id = 9;
 * @return {string}
 */
proto.reserve.GetReserveTypeForMissionRequest.prototype.getWarehouseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.GetReserveTypeForMissionRequest} returns this
 */
proto.reserve.GetReserveTypeForMissionRequest.prototype.setWarehouseId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string client_id = 10;
 * @return {string}
 */
proto.reserve.GetReserveTypeForMissionRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.GetReserveTypeForMissionRequest} returns this
 */
proto.reserve.GetReserveTypeForMissionRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reserve.GetReserveForMissionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reserve.GetReserveForMissionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reserve.GetReserveForMissionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.GetReserveForMissionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    attenduId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    sscc: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reserve.GetReserveForMissionRequest}
 */
proto.reserve.GetReserveForMissionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reserve.GetReserveForMissionRequest;
  return proto.reserve.GetReserveForMissionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reserve.GetReserveForMissionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reserve.GetReserveForMissionRequest}
 */
proto.reserve.GetReserveForMissionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttenduId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSscc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reserve.GetReserveForMissionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reserve.GetReserveForMissionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reserve.GetReserveForMissionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.GetReserveForMissionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getAttenduId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSscc();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int32 limit = 1;
 * @return {number}
 */
proto.reserve.GetReserveForMissionRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.reserve.GetReserveForMissionRequest} returns this
 */
proto.reserve.GetReserveForMissionRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 offset = 2;
 * @return {number}
 */
proto.reserve.GetReserveForMissionRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.reserve.GetReserveForMissionRequest} returns this
 */
proto.reserve.GetReserveForMissionRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string attendu_id = 3;
 * @return {string}
 */
proto.reserve.GetReserveForMissionRequest.prototype.getAttenduId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.GetReserveForMissionRequest} returns this
 */
proto.reserve.GetReserveForMissionRequest.prototype.setAttenduId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string sscc = 4;
 * @return {string}
 */
proto.reserve.GetReserveForMissionRequest.prototype.getSscc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.GetReserveForMissionRequest} returns this
 */
proto.reserve.GetReserveForMissionRequest.prototype.setSscc = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reserve.MetaData.prototype.toObject = function(opt_includeInstance) {
  return proto.reserve.MetaData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reserve.MetaData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.MetaData.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    total: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reserve.MetaData}
 */
proto.reserve.MetaData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reserve.MetaData;
  return proto.reserve.MetaData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reserve.MetaData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reserve.MetaData}
 */
proto.reserve.MetaData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reserve.MetaData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reserve.MetaData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reserve.MetaData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.MetaData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional int64 count = 1;
 * @return {number}
 */
proto.reserve.MetaData.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.reserve.MetaData} returns this
 */
proto.reserve.MetaData.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.reserve.MetaData.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.reserve.MetaData} returns this
 */
proto.reserve.MetaData.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 limit = 3;
 * @return {number}
 */
proto.reserve.MetaData.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.reserve.MetaData} returns this
 */
proto.reserve.MetaData.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 total = 4;
 * @return {number}
 */
proto.reserve.MetaData.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.reserve.MetaData} returns this
 */
proto.reserve.MetaData.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.reserve.GetReserveTypeForMissionResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reserve.GetReserveTypeForMissionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.reserve.GetReserveTypeForMissionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reserve.GetReserveTypeForMissionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.GetReserveTypeForMissionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto.reserve.ReserveType.toObject, includeInstance),
    metadata: (f = msg.getMetadata()) && proto.reserve.MetaData.toObject(includeInstance, f),
    messageerror: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reserve.GetReserveTypeForMissionResponse}
 */
proto.reserve.GetReserveTypeForMissionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reserve.GetReserveTypeForMissionResponse;
  return proto.reserve.GetReserveTypeForMissionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reserve.GetReserveTypeForMissionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reserve.GetReserveTypeForMissionResponse}
 */
proto.reserve.GetReserveTypeForMissionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reserve.ReserveType;
      reader.readMessage(value,proto.reserve.ReserveType.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    case 2:
      var value = new proto.reserve.MetaData;
      reader.readMessage(value,proto.reserve.MetaData.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reserve.GetReserveTypeForMissionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reserve.GetReserveTypeForMissionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reserve.GetReserveTypeForMissionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.GetReserveTypeForMissionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.reserve.ReserveType.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.reserve.MetaData.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated ReserveType entry = 1;
 * @return {!Array<!proto.reserve.ReserveType>}
 */
proto.reserve.GetReserveTypeForMissionResponse.prototype.getEntryList = function() {
  return /** @type{!Array<!proto.reserve.ReserveType>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.reserve.ReserveType, 1));
};


/**
 * @param {!Array<!proto.reserve.ReserveType>} value
 * @return {!proto.reserve.GetReserveTypeForMissionResponse} returns this
*/
proto.reserve.GetReserveTypeForMissionResponse.prototype.setEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.reserve.ReserveType=} opt_value
 * @param {number=} opt_index
 * @return {!proto.reserve.ReserveType}
 */
proto.reserve.GetReserveTypeForMissionResponse.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.reserve.ReserveType, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reserve.GetReserveTypeForMissionResponse} returns this
 */
proto.reserve.GetReserveTypeForMissionResponse.prototype.clearEntryList = function() {
  return this.setEntryList([]);
};


/**
 * optional MetaData metadata = 2;
 * @return {?proto.reserve.MetaData}
 */
proto.reserve.GetReserveTypeForMissionResponse.prototype.getMetadata = function() {
  return /** @type{?proto.reserve.MetaData} */ (
    jspb.Message.getWrapperField(this, proto.reserve.MetaData, 2));
};


/**
 * @param {?proto.reserve.MetaData|undefined} value
 * @return {!proto.reserve.GetReserveTypeForMissionResponse} returns this
*/
proto.reserve.GetReserveTypeForMissionResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reserve.GetReserveTypeForMissionResponse} returns this
 */
proto.reserve.GetReserveTypeForMissionResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reserve.GetReserveTypeForMissionResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string messageError = 3;
 * @return {string}
 */
proto.reserve.GetReserveTypeForMissionResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.GetReserveTypeForMissionResponse} returns this
 */
proto.reserve.GetReserveTypeForMissionResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.reserve.GetReserveForMissionResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reserve.GetReserveForMissionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.reserve.GetReserveForMissionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reserve.GetReserveForMissionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.GetReserveForMissionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto.reserve.Reserve.toObject, includeInstance),
    metadata: (f = msg.getMetadata()) && proto.reserve.MetaData.toObject(includeInstance, f),
    messageerror: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reserve.GetReserveForMissionResponse}
 */
proto.reserve.GetReserveForMissionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reserve.GetReserveForMissionResponse;
  return proto.reserve.GetReserveForMissionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reserve.GetReserveForMissionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reserve.GetReserveForMissionResponse}
 */
proto.reserve.GetReserveForMissionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reserve.Reserve;
      reader.readMessage(value,proto.reserve.Reserve.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    case 2:
      var value = new proto.reserve.MetaData;
      reader.readMessage(value,proto.reserve.MetaData.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reserve.GetReserveForMissionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reserve.GetReserveForMissionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reserve.GetReserveForMissionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.GetReserveForMissionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.reserve.Reserve.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.reserve.MetaData.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated Reserve entry = 1;
 * @return {!Array<!proto.reserve.Reserve>}
 */
proto.reserve.GetReserveForMissionResponse.prototype.getEntryList = function() {
  return /** @type{!Array<!proto.reserve.Reserve>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.reserve.Reserve, 1));
};


/**
 * @param {!Array<!proto.reserve.Reserve>} value
 * @return {!proto.reserve.GetReserveForMissionResponse} returns this
*/
proto.reserve.GetReserveForMissionResponse.prototype.setEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.reserve.Reserve=} opt_value
 * @param {number=} opt_index
 * @return {!proto.reserve.Reserve}
 */
proto.reserve.GetReserveForMissionResponse.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.reserve.Reserve, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reserve.GetReserveForMissionResponse} returns this
 */
proto.reserve.GetReserveForMissionResponse.prototype.clearEntryList = function() {
  return this.setEntryList([]);
};


/**
 * optional MetaData metadata = 2;
 * @return {?proto.reserve.MetaData}
 */
proto.reserve.GetReserveForMissionResponse.prototype.getMetadata = function() {
  return /** @type{?proto.reserve.MetaData} */ (
    jspb.Message.getWrapperField(this, proto.reserve.MetaData, 2));
};


/**
 * @param {?proto.reserve.MetaData|undefined} value
 * @return {!proto.reserve.GetReserveForMissionResponse} returns this
*/
proto.reserve.GetReserveForMissionResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reserve.GetReserveForMissionResponse} returns this
 */
proto.reserve.GetReserveForMissionResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reserve.GetReserveForMissionResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string messageError = 3;
 * @return {string}
 */
proto.reserve.GetReserveForMissionResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.GetReserveForMissionResponse} returns this
 */
proto.reserve.GetReserveForMissionResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.reserve.CreateManyReserveTypeRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reserve.CreateManyReserveTypeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reserve.CreateManyReserveTypeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reserve.CreateManyReserveTypeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.CreateManyReserveTypeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto.reserve.ReserveType.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reserve.CreateManyReserveTypeRequest}
 */
proto.reserve.CreateManyReserveTypeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reserve.CreateManyReserveTypeRequest;
  return proto.reserve.CreateManyReserveTypeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reserve.CreateManyReserveTypeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reserve.CreateManyReserveTypeRequest}
 */
proto.reserve.CreateManyReserveTypeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reserve.ReserveType;
      reader.readMessage(value,proto.reserve.ReserveType.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reserve.CreateManyReserveTypeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reserve.CreateManyReserveTypeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reserve.CreateManyReserveTypeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.CreateManyReserveTypeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.reserve.ReserveType.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ReserveType entry = 1;
 * @return {!Array<!proto.reserve.ReserveType>}
 */
proto.reserve.CreateManyReserveTypeRequest.prototype.getEntryList = function() {
  return /** @type{!Array<!proto.reserve.ReserveType>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.reserve.ReserveType, 1));
};


/**
 * @param {!Array<!proto.reserve.ReserveType>} value
 * @return {!proto.reserve.CreateManyReserveTypeRequest} returns this
*/
proto.reserve.CreateManyReserveTypeRequest.prototype.setEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.reserve.ReserveType=} opt_value
 * @param {number=} opt_index
 * @return {!proto.reserve.ReserveType}
 */
proto.reserve.CreateManyReserveTypeRequest.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.reserve.ReserveType, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reserve.CreateManyReserveTypeRequest} returns this
 */
proto.reserve.CreateManyReserveTypeRequest.prototype.clearEntryList = function() {
  return this.setEntryList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.reserve.CreateManyReserveTypeResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reserve.CreateManyReserveTypeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.reserve.CreateManyReserveTypeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reserve.CreateManyReserveTypeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.CreateManyReserveTypeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto.reserve.ReserveType.toObject, includeInstance),
    messageerror: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reserve.CreateManyReserveTypeResponse}
 */
proto.reserve.CreateManyReserveTypeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reserve.CreateManyReserveTypeResponse;
  return proto.reserve.CreateManyReserveTypeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reserve.CreateManyReserveTypeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reserve.CreateManyReserveTypeResponse}
 */
proto.reserve.CreateManyReserveTypeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reserve.ReserveType;
      reader.readMessage(value,proto.reserve.ReserveType.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reserve.CreateManyReserveTypeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reserve.CreateManyReserveTypeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reserve.CreateManyReserveTypeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.CreateManyReserveTypeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.reserve.ReserveType.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated ReserveType entry = 1;
 * @return {!Array<!proto.reserve.ReserveType>}
 */
proto.reserve.CreateManyReserveTypeResponse.prototype.getEntryList = function() {
  return /** @type{!Array<!proto.reserve.ReserveType>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.reserve.ReserveType, 1));
};


/**
 * @param {!Array<!proto.reserve.ReserveType>} value
 * @return {!proto.reserve.CreateManyReserveTypeResponse} returns this
*/
proto.reserve.CreateManyReserveTypeResponse.prototype.setEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.reserve.ReserveType=} opt_value
 * @param {number=} opt_index
 * @return {!proto.reserve.ReserveType}
 */
proto.reserve.CreateManyReserveTypeResponse.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.reserve.ReserveType, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reserve.CreateManyReserveTypeResponse} returns this
 */
proto.reserve.CreateManyReserveTypeResponse.prototype.clearEntryList = function() {
  return this.setEntryList([]);
};


/**
 * optional string messageError = 2;
 * @return {string}
 */
proto.reserve.CreateManyReserveTypeResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.CreateManyReserveTypeResponse} returns this
 */
proto.reserve.CreateManyReserveTypeResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.reserve.CreateManyReserveRequest.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reserve.CreateManyReserveRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reserve.CreateManyReserveRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reserve.CreateManyReserveRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.CreateManyReserveRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto.reserve.Reserve.toObject, includeInstance),
    attfilepathsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    locationInfo: (f = msg.getLocationInfo()) && proto.reserve.CheckPutAwayLocationInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reserve.CreateManyReserveRequest}
 */
proto.reserve.CreateManyReserveRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reserve.CreateManyReserveRequest;
  return proto.reserve.CreateManyReserveRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reserve.CreateManyReserveRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reserve.CreateManyReserveRequest}
 */
proto.reserve.CreateManyReserveRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reserve.Reserve;
      reader.readMessage(value,proto.reserve.Reserve.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addAttfilepaths(value);
      break;
    case 3:
      var value = new proto.reserve.CheckPutAwayLocationInfo;
      reader.readMessage(value,proto.reserve.CheckPutAwayLocationInfo.deserializeBinaryFromReader);
      msg.setLocationInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reserve.CreateManyReserveRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reserve.CreateManyReserveRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reserve.CreateManyReserveRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.CreateManyReserveRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.reserve.Reserve.serializeBinaryToWriter
    );
  }
  f = message.getAttfilepathsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getLocationInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.reserve.CheckPutAwayLocationInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Reserve entry = 1;
 * @return {!Array<!proto.reserve.Reserve>}
 */
proto.reserve.CreateManyReserveRequest.prototype.getEntryList = function() {
  return /** @type{!Array<!proto.reserve.Reserve>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.reserve.Reserve, 1));
};


/**
 * @param {!Array<!proto.reserve.Reserve>} value
 * @return {!proto.reserve.CreateManyReserveRequest} returns this
*/
proto.reserve.CreateManyReserveRequest.prototype.setEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.reserve.Reserve=} opt_value
 * @param {number=} opt_index
 * @return {!proto.reserve.Reserve}
 */
proto.reserve.CreateManyReserveRequest.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.reserve.Reserve, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reserve.CreateManyReserveRequest} returns this
 */
proto.reserve.CreateManyReserveRequest.prototype.clearEntryList = function() {
  return this.setEntryList([]);
};


/**
 * repeated string attFilePaths = 2;
 * @return {!Array<string>}
 */
proto.reserve.CreateManyReserveRequest.prototype.getAttfilepathsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.reserve.CreateManyReserveRequest} returns this
 */
proto.reserve.CreateManyReserveRequest.prototype.setAttfilepathsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.reserve.CreateManyReserveRequest} returns this
 */
proto.reserve.CreateManyReserveRequest.prototype.addAttfilepaths = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reserve.CreateManyReserveRequest} returns this
 */
proto.reserve.CreateManyReserveRequest.prototype.clearAttfilepathsList = function() {
  return this.setAttfilepathsList([]);
};


/**
 * optional CheckPutAwayLocationInfo location_info = 3;
 * @return {?proto.reserve.CheckPutAwayLocationInfo}
 */
proto.reserve.CreateManyReserveRequest.prototype.getLocationInfo = function() {
  return /** @type{?proto.reserve.CheckPutAwayLocationInfo} */ (
    jspb.Message.getWrapperField(this, proto.reserve.CheckPutAwayLocationInfo, 3));
};


/**
 * @param {?proto.reserve.CheckPutAwayLocationInfo|undefined} value
 * @return {!proto.reserve.CreateManyReserveRequest} returns this
*/
proto.reserve.CreateManyReserveRequest.prototype.setLocationInfo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reserve.CreateManyReserveRequest} returns this
 */
proto.reserve.CreateManyReserveRequest.prototype.clearLocationInfo = function() {
  return this.setLocationInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reserve.CreateManyReserveRequest.prototype.hasLocationInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.reserve.CheckPutAwayLocationInfo.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reserve.CheckPutAwayLocationInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.reserve.CheckPutAwayLocationInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reserve.CheckPutAwayLocationInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.CheckPutAwayLocationInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    barCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    attProductionIdList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    entryDate: jspb.Message.getFieldWithDefault(msg, 4, 0),
    isAuto: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    isAnomaly: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reserve.CheckPutAwayLocationInfo}
 */
proto.reserve.CheckPutAwayLocationInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reserve.CheckPutAwayLocationInfo;
  return proto.reserve.CheckPutAwayLocationInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reserve.CheckPutAwayLocationInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reserve.CheckPutAwayLocationInfo}
 */
proto.reserve.CheckPutAwayLocationInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addAttProductionId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEntryDate(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAuto(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAnomaly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reserve.CheckPutAwayLocationInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reserve.CheckPutAwayLocationInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reserve.CheckPutAwayLocationInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.CheckPutAwayLocationInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBarCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAttProductionIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getEntryDate();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getIsAuto();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getIsAnomaly();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string bar_code = 1;
 * @return {string}
 */
proto.reserve.CheckPutAwayLocationInfo.prototype.getBarCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.CheckPutAwayLocationInfo} returns this
 */
proto.reserve.CheckPutAwayLocationInfo.prototype.setBarCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.reserve.CheckPutAwayLocationInfo.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.CheckPutAwayLocationInfo} returns this
 */
proto.reserve.CheckPutAwayLocationInfo.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string att_production_id = 3;
 * @return {!Array<string>}
 */
proto.reserve.CheckPutAwayLocationInfo.prototype.getAttProductionIdList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.reserve.CheckPutAwayLocationInfo} returns this
 */
proto.reserve.CheckPutAwayLocationInfo.prototype.setAttProductionIdList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.reserve.CheckPutAwayLocationInfo} returns this
 */
proto.reserve.CheckPutAwayLocationInfo.prototype.addAttProductionId = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reserve.CheckPutAwayLocationInfo} returns this
 */
proto.reserve.CheckPutAwayLocationInfo.prototype.clearAttProductionIdList = function() {
  return this.setAttProductionIdList([]);
};


/**
 * optional int64 entry_date = 4;
 * @return {number}
 */
proto.reserve.CheckPutAwayLocationInfo.prototype.getEntryDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.reserve.CheckPutAwayLocationInfo} returns this
 */
proto.reserve.CheckPutAwayLocationInfo.prototype.setEntryDate = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool is_auto = 5;
 * @return {boolean}
 */
proto.reserve.CheckPutAwayLocationInfo.prototype.getIsAuto = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reserve.CheckPutAwayLocationInfo} returns this
 */
proto.reserve.CheckPutAwayLocationInfo.prototype.setIsAuto = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool is_anomaly = 6;
 * @return {boolean}
 */
proto.reserve.CheckPutAwayLocationInfo.prototype.getIsAnomaly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reserve.CheckPutAwayLocationInfo} returns this
 */
proto.reserve.CheckPutAwayLocationInfo.prototype.setIsAnomaly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reserve.LocationDTO.prototype.toObject = function(opt_includeInstance) {
  return proto.reserve.LocationDTO.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reserve.LocationDTO} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.LocationDTO.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    zoneId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    aisle: jspb.Message.getFieldWithDefault(msg, 4, ""),
    bay: jspb.Message.getFieldWithDefault(msg, 5, ""),
    zoneCode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    level: jspb.Message.getFieldWithDefault(msg, 7, 0),
    entryBlock: jspb.Message.getFieldWithDefault(msg, 8, ""),
    code: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reserve.LocationDTO}
 */
proto.reserve.LocationDTO.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reserve.LocationDTO;
  return proto.reserve.LocationDTO.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reserve.LocationDTO} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reserve.LocationDTO}
 */
proto.reserve.LocationDTO.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setZoneId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAisle(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBay(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setZoneCode(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLevel(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntryBlock(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reserve.LocationDTO.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reserve.LocationDTO.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reserve.LocationDTO} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.LocationDTO.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getZoneId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAisle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBay();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getZoneCode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLevel();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getEntryBlock();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.reserve.LocationDTO.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.LocationDTO} returns this
 */
proto.reserve.LocationDTO.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string zone_id = 2;
 * @return {string}
 */
proto.reserve.LocationDTO.prototype.getZoneId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.LocationDTO} returns this
 */
proto.reserve.LocationDTO.prototype.setZoneId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string aisle = 4;
 * @return {string}
 */
proto.reserve.LocationDTO.prototype.getAisle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.LocationDTO} returns this
 */
proto.reserve.LocationDTO.prototype.setAisle = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string bay = 5;
 * @return {string}
 */
proto.reserve.LocationDTO.prototype.getBay = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.LocationDTO} returns this
 */
proto.reserve.LocationDTO.prototype.setBay = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string zone_code = 6;
 * @return {string}
 */
proto.reserve.LocationDTO.prototype.getZoneCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.LocationDTO} returns this
 */
proto.reserve.LocationDTO.prototype.setZoneCode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 level = 7;
 * @return {number}
 */
proto.reserve.LocationDTO.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.reserve.LocationDTO} returns this
 */
proto.reserve.LocationDTO.prototype.setLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string entry_block = 8;
 * @return {string}
 */
proto.reserve.LocationDTO.prototype.getEntryBlock = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.LocationDTO} returns this
 */
proto.reserve.LocationDTO.prototype.setEntryBlock = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string code = 9;
 * @return {string}
 */
proto.reserve.LocationDTO.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.LocationDTO} returns this
 */
proto.reserve.LocationDTO.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.reserve.CreateManyReserveResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reserve.CreateManyReserveResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.reserve.CreateManyReserveResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reserve.CreateManyReserveResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.CreateManyReserveResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto.reserve.Reserve.toObject, includeInstance),
    messageerror: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dataerror: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isAnomaly: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    locationId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    location: (f = msg.getLocation()) && proto.reserve.LocationDTO.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reserve.CreateManyReserveResponse}
 */
proto.reserve.CreateManyReserveResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reserve.CreateManyReserveResponse;
  return proto.reserve.CreateManyReserveResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reserve.CreateManyReserveResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reserve.CreateManyReserveResponse}
 */
proto.reserve.CreateManyReserveResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reserve.Reserve;
      reader.readMessage(value,proto.reserve.Reserve.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataerror(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAnomaly(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationId(value);
      break;
    case 6:
      var value = new proto.reserve.LocationDTO;
      reader.readMessage(value,proto.reserve.LocationDTO.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reserve.CreateManyReserveResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reserve.CreateManyReserveResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reserve.CreateManyReserveResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.CreateManyReserveResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.reserve.Reserve.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDataerror();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsAnomaly();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getLocationId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.reserve.LocationDTO.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Reserve entry = 1;
 * @return {!Array<!proto.reserve.Reserve>}
 */
proto.reserve.CreateManyReserveResponse.prototype.getEntryList = function() {
  return /** @type{!Array<!proto.reserve.Reserve>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.reserve.Reserve, 1));
};


/**
 * @param {!Array<!proto.reserve.Reserve>} value
 * @return {!proto.reserve.CreateManyReserveResponse} returns this
*/
proto.reserve.CreateManyReserveResponse.prototype.setEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.reserve.Reserve=} opt_value
 * @param {number=} opt_index
 * @return {!proto.reserve.Reserve}
 */
proto.reserve.CreateManyReserveResponse.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.reserve.Reserve, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reserve.CreateManyReserveResponse} returns this
 */
proto.reserve.CreateManyReserveResponse.prototype.clearEntryList = function() {
  return this.setEntryList([]);
};


/**
 * optional string messageError = 2;
 * @return {string}
 */
proto.reserve.CreateManyReserveResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.CreateManyReserveResponse} returns this
 */
proto.reserve.CreateManyReserveResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string dataError = 3;
 * @return {string}
 */
proto.reserve.CreateManyReserveResponse.prototype.getDataerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.CreateManyReserveResponse} returns this
 */
proto.reserve.CreateManyReserveResponse.prototype.setDataerror = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool is_anomaly = 4;
 * @return {boolean}
 */
proto.reserve.CreateManyReserveResponse.prototype.getIsAnomaly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reserve.CreateManyReserveResponse} returns this
 */
proto.reserve.CreateManyReserveResponse.prototype.setIsAnomaly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string location_id = 5;
 * @return {string}
 */
proto.reserve.CreateManyReserveResponse.prototype.getLocationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.CreateManyReserveResponse} returns this
 */
proto.reserve.CreateManyReserveResponse.prototype.setLocationId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional LocationDTO location = 6;
 * @return {?proto.reserve.LocationDTO}
 */
proto.reserve.CreateManyReserveResponse.prototype.getLocation = function() {
  return /** @type{?proto.reserve.LocationDTO} */ (
    jspb.Message.getWrapperField(this, proto.reserve.LocationDTO, 6));
};


/**
 * @param {?proto.reserve.LocationDTO|undefined} value
 * @return {!proto.reserve.CreateManyReserveResponse} returns this
*/
proto.reserve.CreateManyReserveResponse.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reserve.CreateManyReserveResponse} returns this
 */
proto.reserve.CreateManyReserveResponse.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reserve.CreateManyReserveResponse.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reserve.ValidQtyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reserve.ValidQtyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reserve.ValidQtyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.ValidQtyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sscc: jspb.Message.getFieldWithDefault(msg, 1, ""),
    quantity: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reserve.ValidQtyRequest}
 */
proto.reserve.ValidQtyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reserve.ValidQtyRequest;
  return proto.reserve.ValidQtyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reserve.ValidQtyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reserve.ValidQtyRequest}
 */
proto.reserve.ValidQtyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSscc(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reserve.ValidQtyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reserve.ValidQtyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reserve.ValidQtyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.ValidQtyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSscc();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string sscc = 1;
 * @return {string}
 */
proto.reserve.ValidQtyRequest.prototype.getSscc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.ValidQtyRequest} returns this
 */
proto.reserve.ValidQtyRequest.prototype.setSscc = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 quantity = 2;
 * @return {number}
 */
proto.reserve.ValidQtyRequest.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.reserve.ValidQtyRequest} returns this
 */
proto.reserve.ValidQtyRequest.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reserve.ValidQtyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.reserve.ValidQtyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reserve.ValidQtyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.ValidQtyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    valid: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    messageerror: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reserve.ValidQtyResponse}
 */
proto.reserve.ValidQtyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reserve.ValidQtyResponse;
  return proto.reserve.ValidQtyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reserve.ValidQtyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reserve.ValidQtyResponse}
 */
proto.reserve.ValidQtyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reserve.ValidQtyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reserve.ValidQtyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reserve.ValidQtyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.ValidQtyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValid();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool valid = 1;
 * @return {boolean}
 */
proto.reserve.ValidQtyResponse.prototype.getValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reserve.ValidQtyResponse} returns this
 */
proto.reserve.ValidQtyResponse.prototype.setValid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string messageError = 2;
 * @return {string}
 */
proto.reserve.ValidQtyResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.ValidQtyResponse} returns this
 */
proto.reserve.ValidQtyResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reserve.DeleteAllReserveByAttenduInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reserve.DeleteAllReserveByAttenduInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reserve.DeleteAllReserveByAttenduInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.DeleteAllReserveByAttenduInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sscc: jspb.Message.getFieldWithDefault(msg, 1, ""),
    attenduId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reserve.DeleteAllReserveByAttenduInfoRequest}
 */
proto.reserve.DeleteAllReserveByAttenduInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reserve.DeleteAllReserveByAttenduInfoRequest;
  return proto.reserve.DeleteAllReserveByAttenduInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reserve.DeleteAllReserveByAttenduInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reserve.DeleteAllReserveByAttenduInfoRequest}
 */
proto.reserve.DeleteAllReserveByAttenduInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSscc(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttenduId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reserve.DeleteAllReserveByAttenduInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reserve.DeleteAllReserveByAttenduInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reserve.DeleteAllReserveByAttenduInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.DeleteAllReserveByAttenduInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSscc();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAttenduId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string sscc = 1;
 * @return {string}
 */
proto.reserve.DeleteAllReserveByAttenduInfoRequest.prototype.getSscc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.DeleteAllReserveByAttenduInfoRequest} returns this
 */
proto.reserve.DeleteAllReserveByAttenduInfoRequest.prototype.setSscc = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string attendu_id = 2;
 * @return {string}
 */
proto.reserve.DeleteAllReserveByAttenduInfoRequest.prototype.getAttenduId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.DeleteAllReserveByAttenduInfoRequest} returns this
 */
proto.reserve.DeleteAllReserveByAttenduInfoRequest.prototype.setAttenduId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reserve.DeleteAllReserveByAttenduInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.reserve.DeleteAllReserveByAttenduInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reserve.DeleteAllReserveByAttenduInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.DeleteAllReserveByAttenduInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageerror: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reserve.DeleteAllReserveByAttenduInfoResponse}
 */
proto.reserve.DeleteAllReserveByAttenduInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reserve.DeleteAllReserveByAttenduInfoResponse;
  return proto.reserve.DeleteAllReserveByAttenduInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reserve.DeleteAllReserveByAttenduInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reserve.DeleteAllReserveByAttenduInfoResponse}
 */
proto.reserve.DeleteAllReserveByAttenduInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reserve.DeleteAllReserveByAttenduInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reserve.DeleteAllReserveByAttenduInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reserve.DeleteAllReserveByAttenduInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.DeleteAllReserveByAttenduInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string messageError = 1;
 * @return {string}
 */
proto.reserve.DeleteAllReserveByAttenduInfoResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.DeleteAllReserveByAttenduInfoResponse} returns this
 */
proto.reserve.DeleteAllReserveByAttenduInfoResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.reserve.ReserveOnAttenduDTO.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reserve.ReserveOnAttenduDTO.prototype.toObject = function(opt_includeInstance) {
  return proto.reserve.ReserveOnAttenduDTO.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reserve.ReserveOnAttenduDTO} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.ReserveOnAttenduDTO.toObject = function(includeInstance, msg) {
  var f, obj = {
    reserveTypeName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sscc: jspb.Message.getFieldWithDefault(msg, 2, ""),
    quantity: jspb.Message.getFieldWithDefault(msg, 3, 0),
    imagesList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    comment: jspb.Message.getFieldWithDefault(msg, 5, ""),
    isBlock: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    id: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reserve.ReserveOnAttenduDTO}
 */
proto.reserve.ReserveOnAttenduDTO.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reserve.ReserveOnAttenduDTO;
  return proto.reserve.ReserveOnAttenduDTO.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reserve.ReserveOnAttenduDTO} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reserve.ReserveOnAttenduDTO}
 */
proto.reserve.ReserveOnAttenduDTO.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReserveTypeName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSscc(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuantity(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addImages(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsBlock(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reserve.ReserveOnAttenduDTO.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reserve.ReserveOnAttenduDTO.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reserve.ReserveOnAttenduDTO} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.ReserveOnAttenduDTO.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReserveTypeName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSscc();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getImagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIsBlock();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string reserve_type_name = 1;
 * @return {string}
 */
proto.reserve.ReserveOnAttenduDTO.prototype.getReserveTypeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.ReserveOnAttenduDTO} returns this
 */
proto.reserve.ReserveOnAttenduDTO.prototype.setReserveTypeName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sscc = 2;
 * @return {string}
 */
proto.reserve.ReserveOnAttenduDTO.prototype.getSscc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.ReserveOnAttenduDTO} returns this
 */
proto.reserve.ReserveOnAttenduDTO.prototype.setSscc = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 quantity = 3;
 * @return {number}
 */
proto.reserve.ReserveOnAttenduDTO.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.reserve.ReserveOnAttenduDTO} returns this
 */
proto.reserve.ReserveOnAttenduDTO.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated string images = 4;
 * @return {!Array<string>}
 */
proto.reserve.ReserveOnAttenduDTO.prototype.getImagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.reserve.ReserveOnAttenduDTO} returns this
 */
proto.reserve.ReserveOnAttenduDTO.prototype.setImagesList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.reserve.ReserveOnAttenduDTO} returns this
 */
proto.reserve.ReserveOnAttenduDTO.prototype.addImages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reserve.ReserveOnAttenduDTO} returns this
 */
proto.reserve.ReserveOnAttenduDTO.prototype.clearImagesList = function() {
  return this.setImagesList([]);
};


/**
 * optional string comment = 5;
 * @return {string}
 */
proto.reserve.ReserveOnAttenduDTO.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.ReserveOnAttenduDTO} returns this
 */
proto.reserve.ReserveOnAttenduDTO.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool is_block = 6;
 * @return {boolean}
 */
proto.reserve.ReserveOnAttenduDTO.prototype.getIsBlock = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reserve.ReserveOnAttenduDTO} returns this
 */
proto.reserve.ReserveOnAttenduDTO.prototype.setIsBlock = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string id = 7;
 * @return {string}
 */
proto.reserve.ReserveOnAttenduDTO.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.ReserveOnAttenduDTO} returns this
 */
proto.reserve.ReserveOnAttenduDTO.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.reserve.ReserveOnAttenduResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reserve.ReserveOnAttenduResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.reserve.ReserveOnAttenduResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reserve.ReserveOnAttenduResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.ReserveOnAttenduResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto.reserve.ReserveOnAttenduDTO.toObject, includeInstance),
    messageerror: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reserve.ReserveOnAttenduResponse}
 */
proto.reserve.ReserveOnAttenduResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reserve.ReserveOnAttenduResponse;
  return proto.reserve.ReserveOnAttenduResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reserve.ReserveOnAttenduResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reserve.ReserveOnAttenduResponse}
 */
proto.reserve.ReserveOnAttenduResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reserve.ReserveOnAttenduDTO;
      reader.readMessage(value,proto.reserve.ReserveOnAttenduDTO.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reserve.ReserveOnAttenduResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reserve.ReserveOnAttenduResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reserve.ReserveOnAttenduResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.ReserveOnAttenduResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.reserve.ReserveOnAttenduDTO.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated ReserveOnAttenduDTO entry = 1;
 * @return {!Array<!proto.reserve.ReserveOnAttenduDTO>}
 */
proto.reserve.ReserveOnAttenduResponse.prototype.getEntryList = function() {
  return /** @type{!Array<!proto.reserve.ReserveOnAttenduDTO>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.reserve.ReserveOnAttenduDTO, 1));
};


/**
 * @param {!Array<!proto.reserve.ReserveOnAttenduDTO>} value
 * @return {!proto.reserve.ReserveOnAttenduResponse} returns this
*/
proto.reserve.ReserveOnAttenduResponse.prototype.setEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.reserve.ReserveOnAttenduDTO=} opt_value
 * @param {number=} opt_index
 * @return {!proto.reserve.ReserveOnAttenduDTO}
 */
proto.reserve.ReserveOnAttenduResponse.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.reserve.ReserveOnAttenduDTO, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reserve.ReserveOnAttenduResponse} returns this
 */
proto.reserve.ReserveOnAttenduResponse.prototype.clearEntryList = function() {
  return this.setEntryList([]);
};


/**
 * optional string messageError = 2;
 * @return {string}
 */
proto.reserve.ReserveOnAttenduResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.ReserveOnAttenduResponse} returns this
 */
proto.reserve.ReserveOnAttenduResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reserve.ReserveOnAttenduRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reserve.ReserveOnAttenduRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reserve.ReserveOnAttenduRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.ReserveOnAttenduRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    attenduId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reserve.ReserveOnAttenduRequest}
 */
proto.reserve.ReserveOnAttenduRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reserve.ReserveOnAttenduRequest;
  return proto.reserve.ReserveOnAttenduRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reserve.ReserveOnAttenduRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reserve.ReserveOnAttenduRequest}
 */
proto.reserve.ReserveOnAttenduRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttenduId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reserve.ReserveOnAttenduRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reserve.ReserveOnAttenduRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reserve.ReserveOnAttenduRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.ReserveOnAttenduRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAttenduId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string attendu_id = 1;
 * @return {string}
 */
proto.reserve.ReserveOnAttenduRequest.prototype.getAttenduId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.ReserveOnAttenduRequest} returns this
 */
proto.reserve.ReserveOnAttenduRequest.prototype.setAttenduId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reserve.UpdateReserveRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reserve.UpdateReserveRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reserve.UpdateReserveRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.UpdateReserveRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    entry: (f = msg.getEntry()) && proto.reserve.Reserve.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reserve.UpdateReserveRequest}
 */
proto.reserve.UpdateReserveRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reserve.UpdateReserveRequest;
  return proto.reserve.UpdateReserveRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reserve.UpdateReserveRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reserve.UpdateReserveRequest}
 */
proto.reserve.UpdateReserveRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reserve.Reserve;
      reader.readMessage(value,proto.reserve.Reserve.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reserve.UpdateReserveRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reserve.UpdateReserveRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reserve.UpdateReserveRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.UpdateReserveRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.reserve.Reserve.serializeBinaryToWriter
    );
  }
};


/**
 * optional Reserve entry = 1;
 * @return {?proto.reserve.Reserve}
 */
proto.reserve.UpdateReserveRequest.prototype.getEntry = function() {
  return /** @type{?proto.reserve.Reserve} */ (
    jspb.Message.getWrapperField(this, proto.reserve.Reserve, 1));
};


/**
 * @param {?proto.reserve.Reserve|undefined} value
 * @return {!proto.reserve.UpdateReserveRequest} returns this
*/
proto.reserve.UpdateReserveRequest.prototype.setEntry = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reserve.UpdateReserveRequest} returns this
 */
proto.reserve.UpdateReserveRequest.prototype.clearEntry = function() {
  return this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reserve.UpdateReserveRequest.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reserve.UpdateReserveResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.reserve.UpdateReserveResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reserve.UpdateReserveResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.UpdateReserveResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entry: (f = msg.getEntry()) && proto.reserve.Reserve.toObject(includeInstance, f),
    isallreserveunblock: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    metadata: (f = msg.getMetadata()) && proto.reserve.MetaData.toObject(includeInstance, f),
    messageerror: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reserve.UpdateReserveResponse}
 */
proto.reserve.UpdateReserveResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reserve.UpdateReserveResponse;
  return proto.reserve.UpdateReserveResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reserve.UpdateReserveResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reserve.UpdateReserveResponse}
 */
proto.reserve.UpdateReserveResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reserve.Reserve;
      reader.readMessage(value,proto.reserve.Reserve.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsallreserveunblock(value);
      break;
    case 3:
      var value = new proto.reserve.MetaData;
      reader.readMessage(value,proto.reserve.MetaData.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reserve.UpdateReserveResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reserve.UpdateReserveResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reserve.UpdateReserveResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.UpdateReserveResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.reserve.Reserve.serializeBinaryToWriter
    );
  }
  f = message.getIsallreserveunblock();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.reserve.MetaData.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional Reserve entry = 1;
 * @return {?proto.reserve.Reserve}
 */
proto.reserve.UpdateReserveResponse.prototype.getEntry = function() {
  return /** @type{?proto.reserve.Reserve} */ (
    jspb.Message.getWrapperField(this, proto.reserve.Reserve, 1));
};


/**
 * @param {?proto.reserve.Reserve|undefined} value
 * @return {!proto.reserve.UpdateReserveResponse} returns this
*/
proto.reserve.UpdateReserveResponse.prototype.setEntry = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reserve.UpdateReserveResponse} returns this
 */
proto.reserve.UpdateReserveResponse.prototype.clearEntry = function() {
  return this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reserve.UpdateReserveResponse.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool isAllReserveUnblock = 2;
 * @return {boolean}
 */
proto.reserve.UpdateReserveResponse.prototype.getIsallreserveunblock = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reserve.UpdateReserveResponse} returns this
 */
proto.reserve.UpdateReserveResponse.prototype.setIsallreserveunblock = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional MetaData metadata = 3;
 * @return {?proto.reserve.MetaData}
 */
proto.reserve.UpdateReserveResponse.prototype.getMetadata = function() {
  return /** @type{?proto.reserve.MetaData} */ (
    jspb.Message.getWrapperField(this, proto.reserve.MetaData, 3));
};


/**
 * @param {?proto.reserve.MetaData|undefined} value
 * @return {!proto.reserve.UpdateReserveResponse} returns this
*/
proto.reserve.UpdateReserveResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reserve.UpdateReserveResponse} returns this
 */
proto.reserve.UpdateReserveResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reserve.UpdateReserveResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string messageError = 4;
 * @return {string}
 */
proto.reserve.UpdateReserveResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.UpdateReserveResponse} returns this
 */
proto.reserve.UpdateReserveResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.reserve.UpdateReservesRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reserve.UpdateReservesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reserve.UpdateReservesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reserve.UpdateReservesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.UpdateReservesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto.reserve.Reserve.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reserve.UpdateReservesRequest}
 */
proto.reserve.UpdateReservesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reserve.UpdateReservesRequest;
  return proto.reserve.UpdateReservesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reserve.UpdateReservesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reserve.UpdateReservesRequest}
 */
proto.reserve.UpdateReservesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reserve.Reserve;
      reader.readMessage(value,proto.reserve.Reserve.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reserve.UpdateReservesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reserve.UpdateReservesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reserve.UpdateReservesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.UpdateReservesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.reserve.Reserve.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Reserve entry = 1;
 * @return {!Array<!proto.reserve.Reserve>}
 */
proto.reserve.UpdateReservesRequest.prototype.getEntryList = function() {
  return /** @type{!Array<!proto.reserve.Reserve>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.reserve.Reserve, 1));
};


/**
 * @param {!Array<!proto.reserve.Reserve>} value
 * @return {!proto.reserve.UpdateReservesRequest} returns this
*/
proto.reserve.UpdateReservesRequest.prototype.setEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.reserve.Reserve=} opt_value
 * @param {number=} opt_index
 * @return {!proto.reserve.Reserve}
 */
proto.reserve.UpdateReservesRequest.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.reserve.Reserve, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reserve.UpdateReservesRequest} returns this
 */
proto.reserve.UpdateReservesRequest.prototype.clearEntryList = function() {
  return this.setEntryList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.reserve.UpdateReservesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reserve.UpdateReservesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.reserve.UpdateReservesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reserve.UpdateReservesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.UpdateReservesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto.reserve.Reserve.toObject, includeInstance),
    metadata: (f = msg.getMetadata()) && proto.reserve.MetaData.toObject(includeInstance, f),
    messageerror: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reserve.UpdateReservesResponse}
 */
proto.reserve.UpdateReservesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reserve.UpdateReservesResponse;
  return proto.reserve.UpdateReservesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reserve.UpdateReservesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reserve.UpdateReservesResponse}
 */
proto.reserve.UpdateReservesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reserve.Reserve;
      reader.readMessage(value,proto.reserve.Reserve.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    case 3:
      var value = new proto.reserve.MetaData;
      reader.readMessage(value,proto.reserve.MetaData.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reserve.UpdateReservesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reserve.UpdateReservesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reserve.UpdateReservesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reserve.UpdateReservesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.reserve.Reserve.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.reserve.MetaData.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * repeated Reserve entry = 1;
 * @return {!Array<!proto.reserve.Reserve>}
 */
proto.reserve.UpdateReservesResponse.prototype.getEntryList = function() {
  return /** @type{!Array<!proto.reserve.Reserve>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.reserve.Reserve, 1));
};


/**
 * @param {!Array<!proto.reserve.Reserve>} value
 * @return {!proto.reserve.UpdateReservesResponse} returns this
*/
proto.reserve.UpdateReservesResponse.prototype.setEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.reserve.Reserve=} opt_value
 * @param {number=} opt_index
 * @return {!proto.reserve.Reserve}
 */
proto.reserve.UpdateReservesResponse.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.reserve.Reserve, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reserve.UpdateReservesResponse} returns this
 */
proto.reserve.UpdateReservesResponse.prototype.clearEntryList = function() {
  return this.setEntryList([]);
};


/**
 * optional MetaData metadata = 3;
 * @return {?proto.reserve.MetaData}
 */
proto.reserve.UpdateReservesResponse.prototype.getMetadata = function() {
  return /** @type{?proto.reserve.MetaData} */ (
    jspb.Message.getWrapperField(this, proto.reserve.MetaData, 3));
};


/**
 * @param {?proto.reserve.MetaData|undefined} value
 * @return {!proto.reserve.UpdateReservesResponse} returns this
*/
proto.reserve.UpdateReservesResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reserve.UpdateReservesResponse} returns this
 */
proto.reserve.UpdateReservesResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reserve.UpdateReservesResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string messageError = 4;
 * @return {string}
 */
proto.reserve.UpdateReservesResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.reserve.UpdateReservesResponse} returns this
 */
proto.reserve.UpdateReservesResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


goog.object.extend(exports, proto.reserve);
