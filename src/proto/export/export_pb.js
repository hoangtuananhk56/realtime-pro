// source: proto/export/export.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.export.ExportAllAttenduRequest', null, global);
goog.exportSymbol('proto.export.ExportAllCommandeRequest', null, global);
goog.exportSymbol('proto.export.ExportAllReferencesRequest', null, global);
goog.exportSymbol('proto.export.ExportResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.export.ExportAllReferencesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.export.ExportAllReferencesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.export.ExportAllReferencesRequest.displayName = 'proto.export.ExportAllReferencesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.export.ExportAllAttenduRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.export.ExportAllAttenduRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.export.ExportAllAttenduRequest.displayName = 'proto.export.ExportAllAttenduRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.export.ExportAllCommandeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.export.ExportAllCommandeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.export.ExportAllCommandeRequest.displayName = 'proto.export.ExportAllCommandeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.export.ExportResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.export.ExportResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.export.ExportResponse.displayName = 'proto.export.ExportResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.export.ExportAllReferencesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.export.ExportAllReferencesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.export.ExportAllReferencesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.export.ExportAllReferencesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    companyId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    warehouseId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    bl: jspb.Message.getFieldWithDefault(msg, 10, ""),
    description: jspb.Message.getFieldWithDefault(msg, 11, ""),
    supplier: jspb.Message.getFieldWithDefault(msg, 12, ""),
    type: jspb.Message.getFieldWithDefault(msg, 13, ""),
    mouvement: jspb.Message.getFieldWithDefault(msg, 14, ""),
    eta: jspb.Message.getFieldWithDefault(msg, 15, ""),
    chrono: jspb.Message.getFieldWithDefault(msg, 16, ""),
    debut: jspb.Message.getFieldWithDefault(msg, 17, ""),
    fin: jspb.Message.getFieldWithDefault(msg, 18, ""),
    status: jspb.Message.getFieldWithDefault(msg, 19, ""),
    sscc: jspb.Message.getFieldWithDefault(msg, 20, ""),
    lot: jspb.Message.getFieldWithDefault(msg, 21, ""),
    cdn: jspb.Message.getFieldWithDefault(msg, 22, ""),
    zone: jspb.Message.getFieldWithDefault(msg, 23, ""),
    aisle: jspb.Message.getFieldWithDefault(msg, 24, ""),
    bay: jspb.Message.getFieldWithDefault(msg, 25, ""),
    level: jspb.Message.getFieldWithDefault(msg, 26, ""),
    typeCdn: jspb.Message.getFieldWithDefault(msg, 27, ""),
    emplacementsVide: jspb.Message.getBooleanFieldWithDefault(msg, 28, false),
    productNumber: jspb.Message.getFieldWithDefault(msg, 29, ""),
    sort: jspb.Message.getFieldWithDefault(msg, 30, ""),
    userCode: jspb.Message.getFieldWithDefault(msg, 31, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.export.ExportAllReferencesRequest}
 */
proto.export.ExportAllReferencesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.export.ExportAllReferencesRequest;
  return proto.export.ExportAllReferencesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.export.ExportAllReferencesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.export.ExportAllReferencesRequest}
 */
proto.export.ExportAllReferencesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseId(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setBl(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSupplier(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setMouvement(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setEta(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setChrono(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setDebut(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setFin(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setSscc(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setLot(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setCdn(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setZone(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setAisle(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setBay(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setLevel(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setTypeCdn(value);
      break;
    case 28:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEmplacementsVide(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductNumber(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setSort(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.export.ExportAllReferencesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.export.ExportAllReferencesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.export.ExportAllReferencesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.export.ExportAllReferencesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getWarehouseId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBl();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSupplier();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getMouvement();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getEta();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getChrono();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getDebut();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getFin();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getSscc();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getLot();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getCdn();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getZone();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getAisle();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getBay();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getLevel();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getTypeCdn();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getEmplacementsVide();
  if (f) {
    writer.writeBool(
      28,
      f
    );
  }
  f = message.getProductNumber();
  if (f.length > 0) {
    writer.writeString(
      29,
      f
    );
  }
  f = message.getSort();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getUserCode();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
};


/**
 * optional string client_id = 1;
 * @return {string}
 */
proto.export.ExportAllReferencesRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllReferencesRequest} returns this
 */
proto.export.ExportAllReferencesRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string company_id = 2;
 * @return {string}
 */
proto.export.ExportAllReferencesRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllReferencesRequest} returns this
 */
proto.export.ExportAllReferencesRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string warehouse_id = 3;
 * @return {string}
 */
proto.export.ExportAllReferencesRequest.prototype.getWarehouseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllReferencesRequest} returns this
 */
proto.export.ExportAllReferencesRequest.prototype.setWarehouseId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string bl = 10;
 * @return {string}
 */
proto.export.ExportAllReferencesRequest.prototype.getBl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllReferencesRequest} returns this
 */
proto.export.ExportAllReferencesRequest.prototype.setBl = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string description = 11;
 * @return {string}
 */
proto.export.ExportAllReferencesRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllReferencesRequest} returns this
 */
proto.export.ExportAllReferencesRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string supplier = 12;
 * @return {string}
 */
proto.export.ExportAllReferencesRequest.prototype.getSupplier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllReferencesRequest} returns this
 */
proto.export.ExportAllReferencesRequest.prototype.setSupplier = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string type = 13;
 * @return {string}
 */
proto.export.ExportAllReferencesRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllReferencesRequest} returns this
 */
proto.export.ExportAllReferencesRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string mouvement = 14;
 * @return {string}
 */
proto.export.ExportAllReferencesRequest.prototype.getMouvement = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllReferencesRequest} returns this
 */
proto.export.ExportAllReferencesRequest.prototype.setMouvement = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string eta = 15;
 * @return {string}
 */
proto.export.ExportAllReferencesRequest.prototype.getEta = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllReferencesRequest} returns this
 */
proto.export.ExportAllReferencesRequest.prototype.setEta = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string chrono = 16;
 * @return {string}
 */
proto.export.ExportAllReferencesRequest.prototype.getChrono = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllReferencesRequest} returns this
 */
proto.export.ExportAllReferencesRequest.prototype.setChrono = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string debut = 17;
 * @return {string}
 */
proto.export.ExportAllReferencesRequest.prototype.getDebut = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllReferencesRequest} returns this
 */
proto.export.ExportAllReferencesRequest.prototype.setDebut = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string fin = 18;
 * @return {string}
 */
proto.export.ExportAllReferencesRequest.prototype.getFin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllReferencesRequest} returns this
 */
proto.export.ExportAllReferencesRequest.prototype.setFin = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string status = 19;
 * @return {string}
 */
proto.export.ExportAllReferencesRequest.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllReferencesRequest} returns this
 */
proto.export.ExportAllReferencesRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string sscc = 20;
 * @return {string}
 */
proto.export.ExportAllReferencesRequest.prototype.getSscc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllReferencesRequest} returns this
 */
proto.export.ExportAllReferencesRequest.prototype.setSscc = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string lot = 21;
 * @return {string}
 */
proto.export.ExportAllReferencesRequest.prototype.getLot = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllReferencesRequest} returns this
 */
proto.export.ExportAllReferencesRequest.prototype.setLot = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string cdn = 22;
 * @return {string}
 */
proto.export.ExportAllReferencesRequest.prototype.getCdn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllReferencesRequest} returns this
 */
proto.export.ExportAllReferencesRequest.prototype.setCdn = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string zone = 23;
 * @return {string}
 */
proto.export.ExportAllReferencesRequest.prototype.getZone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllReferencesRequest} returns this
 */
proto.export.ExportAllReferencesRequest.prototype.setZone = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string aisle = 24;
 * @return {string}
 */
proto.export.ExportAllReferencesRequest.prototype.getAisle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllReferencesRequest} returns this
 */
proto.export.ExportAllReferencesRequest.prototype.setAisle = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string bay = 25;
 * @return {string}
 */
proto.export.ExportAllReferencesRequest.prototype.getBay = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllReferencesRequest} returns this
 */
proto.export.ExportAllReferencesRequest.prototype.setBay = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string level = 26;
 * @return {string}
 */
proto.export.ExportAllReferencesRequest.prototype.getLevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllReferencesRequest} returns this
 */
proto.export.ExportAllReferencesRequest.prototype.setLevel = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional string type_cdn = 27;
 * @return {string}
 */
proto.export.ExportAllReferencesRequest.prototype.getTypeCdn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllReferencesRequest} returns this
 */
proto.export.ExportAllReferencesRequest.prototype.setTypeCdn = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional bool emplacements_vide = 28;
 * @return {boolean}
 */
proto.export.ExportAllReferencesRequest.prototype.getEmplacementsVide = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 28, false));
};


/**
 * @param {boolean} value
 * @return {!proto.export.ExportAllReferencesRequest} returns this
 */
proto.export.ExportAllReferencesRequest.prototype.setEmplacementsVide = function(value) {
  return jspb.Message.setProto3BooleanField(this, 28, value);
};


/**
 * optional string product_number = 29;
 * @return {string}
 */
proto.export.ExportAllReferencesRequest.prototype.getProductNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllReferencesRequest} returns this
 */
proto.export.ExportAllReferencesRequest.prototype.setProductNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 29, value);
};


/**
 * optional string sort = 30;
 * @return {string}
 */
proto.export.ExportAllReferencesRequest.prototype.getSort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllReferencesRequest} returns this
 */
proto.export.ExportAllReferencesRequest.prototype.setSort = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional string user_code = 31;
 * @return {string}
 */
proto.export.ExportAllReferencesRequest.prototype.getUserCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllReferencesRequest} returns this
 */
proto.export.ExportAllReferencesRequest.prototype.setUserCode = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.export.ExportAllAttenduRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.export.ExportAllAttenduRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.export.ExportAllAttenduRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.export.ExportAllAttenduRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    warehouseId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    companyId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    role: jspb.Message.getFieldWithDefault(msg, 5, ""),
    bl: jspb.Message.getFieldWithDefault(msg, 6, ""),
    description: jspb.Message.getFieldWithDefault(msg, 7, ""),
    supplier: jspb.Message.getFieldWithDefault(msg, 8, ""),
    type: jspb.Message.getFieldWithDefault(msg, 9, ""),
    mouvement: jspb.Message.getFieldWithDefault(msg, 10, ""),
    eta: jspb.Message.getFieldWithDefault(msg, 11, ""),
    chrono: jspb.Message.getFieldWithDefault(msg, 12, ""),
    startDate: jspb.Message.getFieldWithDefault(msg, 13, ""),
    endDate: jspb.Message.getFieldWithDefault(msg, 14, ""),
    product: jspb.Message.getFieldWithDefault(msg, 15, ""),
    status: jspb.Message.getFieldWithDefault(msg, 16, ""),
    palette: jspb.Message.getFieldWithDefault(msg, 17, ""),
    lot: jspb.Message.getFieldWithDefault(msg, 18, ""),
    sort: jspb.Message.getFieldWithDefault(msg, 19, ""),
    userCode: jspb.Message.getFieldWithDefault(msg, 20, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.export.ExportAllAttenduRequest}
 */
proto.export.ExportAllAttenduRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.export.ExportAllAttenduRequest;
  return proto.export.ExportAllAttenduRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.export.ExportAllAttenduRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.export.ExportAllAttenduRequest}
 */
proto.export.ExportAllAttenduRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBl(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSupplier(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setMouvement(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setEta(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setChrono(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartDate(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndDate(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setProduct(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setPalette(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setLot(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setSort(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.export.ExportAllAttenduRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.export.ExportAllAttenduRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.export.ExportAllAttenduRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.export.ExportAllAttenduRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWarehouseId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSupplier();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getMouvement();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getEta();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getChrono();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getStartDate();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getEndDate();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getProduct();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getPalette();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getLot();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getSort();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getUserCode();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
};


/**
 * optional string client_id = 1;
 * @return {string}
 */
proto.export.ExportAllAttenduRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllAttenduRequest} returns this
 */
proto.export.ExportAllAttenduRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string warehouse_id = 2;
 * @return {string}
 */
proto.export.ExportAllAttenduRequest.prototype.getWarehouseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllAttenduRequest} returns this
 */
proto.export.ExportAllAttenduRequest.prototype.setWarehouseId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string company_id = 3;
 * @return {string}
 */
proto.export.ExportAllAttenduRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllAttenduRequest} returns this
 */
proto.export.ExportAllAttenduRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string user_id = 4;
 * @return {string}
 */
proto.export.ExportAllAttenduRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllAttenduRequest} returns this
 */
proto.export.ExportAllAttenduRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string role = 5;
 * @return {string}
 */
proto.export.ExportAllAttenduRequest.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllAttenduRequest} returns this
 */
proto.export.ExportAllAttenduRequest.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string bl = 6;
 * @return {string}
 */
proto.export.ExportAllAttenduRequest.prototype.getBl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllAttenduRequest} returns this
 */
proto.export.ExportAllAttenduRequest.prototype.setBl = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string description = 7;
 * @return {string}
 */
proto.export.ExportAllAttenduRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllAttenduRequest} returns this
 */
proto.export.ExportAllAttenduRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string supplier = 8;
 * @return {string}
 */
proto.export.ExportAllAttenduRequest.prototype.getSupplier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllAttenduRequest} returns this
 */
proto.export.ExportAllAttenduRequest.prototype.setSupplier = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string type = 9;
 * @return {string}
 */
proto.export.ExportAllAttenduRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllAttenduRequest} returns this
 */
proto.export.ExportAllAttenduRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string mouvement = 10;
 * @return {string}
 */
proto.export.ExportAllAttenduRequest.prototype.getMouvement = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllAttenduRequest} returns this
 */
proto.export.ExportAllAttenduRequest.prototype.setMouvement = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string eta = 11;
 * @return {string}
 */
proto.export.ExportAllAttenduRequest.prototype.getEta = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllAttenduRequest} returns this
 */
proto.export.ExportAllAttenduRequest.prototype.setEta = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string chrono = 12;
 * @return {string}
 */
proto.export.ExportAllAttenduRequest.prototype.getChrono = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllAttenduRequest} returns this
 */
proto.export.ExportAllAttenduRequest.prototype.setChrono = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string start_date = 13;
 * @return {string}
 */
proto.export.ExportAllAttenduRequest.prototype.getStartDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllAttenduRequest} returns this
 */
proto.export.ExportAllAttenduRequest.prototype.setStartDate = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string end_date = 14;
 * @return {string}
 */
proto.export.ExportAllAttenduRequest.prototype.getEndDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllAttenduRequest} returns this
 */
proto.export.ExportAllAttenduRequest.prototype.setEndDate = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string product = 15;
 * @return {string}
 */
proto.export.ExportAllAttenduRequest.prototype.getProduct = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllAttenduRequest} returns this
 */
proto.export.ExportAllAttenduRequest.prototype.setProduct = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string status = 16;
 * @return {string}
 */
proto.export.ExportAllAttenduRequest.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllAttenduRequest} returns this
 */
proto.export.ExportAllAttenduRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string palette = 17;
 * @return {string}
 */
proto.export.ExportAllAttenduRequest.prototype.getPalette = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllAttenduRequest} returns this
 */
proto.export.ExportAllAttenduRequest.prototype.setPalette = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string lot = 18;
 * @return {string}
 */
proto.export.ExportAllAttenduRequest.prototype.getLot = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllAttenduRequest} returns this
 */
proto.export.ExportAllAttenduRequest.prototype.setLot = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string sort = 19;
 * @return {string}
 */
proto.export.ExportAllAttenduRequest.prototype.getSort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllAttenduRequest} returns this
 */
proto.export.ExportAllAttenduRequest.prototype.setSort = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string user_code = 20;
 * @return {string}
 */
proto.export.ExportAllAttenduRequest.prototype.getUserCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllAttenduRequest} returns this
 */
proto.export.ExportAllAttenduRequest.prototype.setUserCode = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.export.ExportAllCommandeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.export.ExportAllCommandeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.export.ExportAllCommandeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.export.ExportAllCommandeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    warehouseId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    companyId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    role: jspb.Message.getFieldWithDefault(msg, 5, ""),
    addressee: jspb.Message.getFieldWithDefault(msg, 6, ""),
    description: jspb.Message.getFieldWithDefault(msg, 7, ""),
    bl: jspb.Message.getFieldWithDefault(msg, 8, ""),
    transporter: jspb.Message.getFieldWithDefault(msg, 9, ""),
    type: jspb.Message.getFieldWithDefault(msg, 10, ""),
    mouvement: jspb.Message.getFieldWithDefault(msg, 11, ""),
    eta: jspb.Message.getFieldWithDefault(msg, 12, ""),
    chrono: jspb.Message.getFieldWithDefault(msg, 13, ""),
    debut: jspb.Message.getFieldWithDefault(msg, 14, ""),
    fin: jspb.Message.getFieldWithDefault(msg, 15, ""),
    product: jspb.Message.getFieldWithDefault(msg, 16, ""),
    status: jspb.Message.getFieldWithDefault(msg, 17, ""),
    sscc: jspb.Message.getFieldWithDefault(msg, 18, ""),
    lot: jspb.Message.getFieldWithDefault(msg, 19, ""),
    cdn: jspb.Message.getFieldWithDefault(msg, 20, ""),
    zone: jspb.Message.getFieldWithDefault(msg, 21, ""),
    aisle: jspb.Message.getFieldWithDefault(msg, 22, ""),
    bay: jspb.Message.getFieldWithDefault(msg, 23, ""),
    level: jspb.Message.getFieldWithDefault(msg, 24, ""),
    typeCdn: jspb.Message.getFieldWithDefault(msg, 25, ""),
    nom: jspb.Message.getFieldWithDefault(msg, 26, ""),
    sort: jspb.Message.getFieldWithDefault(msg, 27, ""),
    userCode: jspb.Message.getFieldWithDefault(msg, 28, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.export.ExportAllCommandeRequest}
 */
proto.export.ExportAllCommandeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.export.ExportAllCommandeRequest;
  return proto.export.ExportAllCommandeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.export.ExportAllCommandeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.export.ExportAllCommandeRequest}
 */
proto.export.ExportAllCommandeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddressee(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setBl(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransporter(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setMouvement(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setEta(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setChrono(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setDebut(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setFin(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setProduct(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setSscc(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setLot(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setCdn(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setZone(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setAisle(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setBay(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setLevel(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setTypeCdn(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setNom(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setSort(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.export.ExportAllCommandeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.export.ExportAllCommandeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.export.ExportAllCommandeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.export.ExportAllCommandeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWarehouseId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getBl();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTransporter();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getMouvement();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getEta();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getChrono();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getDebut();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getFin();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getProduct();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getSscc();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getLot();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getCdn();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getZone();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getAisle();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getBay();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getLevel();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getTypeCdn();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getNom();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getSort();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getUserCode();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
};


/**
 * optional string client_id = 1;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string warehouse_id = 2;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getWarehouseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setWarehouseId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string company_id = 3;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string user_id = 4;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string role = 5;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string addressee = 6;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getAddressee = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setAddressee = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.clearAddressee = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.export.ExportAllCommandeRequest.prototype.hasAddressee = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string description = 7;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.export.ExportAllCommandeRequest.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string bl = 8;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getBl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setBl = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string transporter = 9;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getTransporter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setTransporter = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string type = 10;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string mouvement = 11;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getMouvement = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setMouvement = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string eta = 12;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getEta = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setEta = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string chrono = 13;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getChrono = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setChrono = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string debut = 14;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getDebut = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setDebut = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string fin = 15;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getFin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setFin = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string product = 16;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getProduct = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setProduct = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string status = 17;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string sscc = 18;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getSscc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setSscc = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string lot = 19;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getLot = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setLot = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string cdn = 20;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getCdn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setCdn = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string zone = 21;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getZone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setZone = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string aisle = 22;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getAisle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setAisle = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string bay = 23;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getBay = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setBay = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string level = 24;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getLevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setLevel = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string type_cdn = 25;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getTypeCdn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setTypeCdn = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string nom = 26;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setNom = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional string sort = 27;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getSort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setSort = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional string user_code = 28;
 * @return {string}
 */
proto.export.ExportAllCommandeRequest.prototype.getUserCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportAllCommandeRequest} returns this
 */
proto.export.ExportAllCommandeRequest.prototype.setUserCode = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.export.ExportResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.export.ExportResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.export.ExportResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.export.ExportResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    messageerror: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.export.ExportResponse}
 */
proto.export.ExportResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.export.ExportResponse;
  return proto.export.ExportResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.export.ExportResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.export.ExportResponse}
 */
proto.export.ExportResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.export.ExportResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.export.ExportResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.export.ExportResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.export.ExportResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.export.ExportResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportResponse} returns this
 */
proto.export.ExportResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string messageError = 2;
 * @return {string}
 */
proto.export.ExportResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.export.ExportResponse} returns this
 */
proto.export.ExportResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.export);
