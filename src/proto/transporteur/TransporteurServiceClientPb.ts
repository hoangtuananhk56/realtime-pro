/**
 * @fileoverview gRPC-Web generated client stub for transporteur
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.21.12
// source: proto/transporteur/transporteur.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as proto_transporteur_transporteur_pb from '../../proto/transporteur/transporteur_pb'; // proto import: "proto/transporteur/transporteur.proto"


export class TransporteurServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreate = new grpcWeb.MethodDescriptor(
    '/transporteur.TransporteurService/Create',
    grpcWeb.MethodType.UNARY,
    proto_transporteur_transporteur_pb.CreateRequest,
    proto_transporteur_transporteur_pb.CreateResponse,
    (request: proto_transporteur_transporteur_pb.CreateRequest) => {
      return request.serializeBinary();
    },
    proto_transporteur_transporteur_pb.CreateResponse.deserializeBinary
  );

  create(
    request: proto_transporteur_transporteur_pb.CreateRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_transporteur_transporteur_pb.CreateResponse>;

  create(
    request: proto_transporteur_transporteur_pb.CreateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_transporteur_transporteur_pb.CreateResponse) => void): grpcWeb.ClientReadableStream<proto_transporteur_transporteur_pb.CreateResponse>;

  create(
    request: proto_transporteur_transporteur_pb.CreateRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_transporteur_transporteur_pb.CreateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/transporteur.TransporteurService/Create',
        request,
        metadata || {},
        this.methodDescriptorCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/transporteur.TransporteurService/Create',
    request,
    metadata || {},
    this.methodDescriptorCreate);
  }

  methodDescriptorGetByID = new grpcWeb.MethodDescriptor(
    '/transporteur.TransporteurService/GetByID',
    grpcWeb.MethodType.UNARY,
    proto_transporteur_transporteur_pb.GetByCodeRequest,
    proto_transporteur_transporteur_pb.CreateResponse,
    (request: proto_transporteur_transporteur_pb.GetByCodeRequest) => {
      return request.serializeBinary();
    },
    proto_transporteur_transporteur_pb.CreateResponse.deserializeBinary
  );

  getByID(
    request: proto_transporteur_transporteur_pb.GetByCodeRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_transporteur_transporteur_pb.CreateResponse>;

  getByID(
    request: proto_transporteur_transporteur_pb.GetByCodeRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_transporteur_transporteur_pb.CreateResponse) => void): grpcWeb.ClientReadableStream<proto_transporteur_transporteur_pb.CreateResponse>;

  getByID(
    request: proto_transporteur_transporteur_pb.GetByCodeRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_transporteur_transporteur_pb.CreateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/transporteur.TransporteurService/GetByID',
        request,
        metadata || {},
        this.methodDescriptorGetByID,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/transporteur.TransporteurService/GetByID',
    request,
    metadata || {},
    this.methodDescriptorGetByID);
  }

  methodDescriptorGetByIdElement = new grpcWeb.MethodDescriptor(
    '/transporteur.TransporteurService/GetByIdElement',
    grpcWeb.MethodType.UNARY,
    proto_transporteur_transporteur_pb.GetByIdElementRequest,
    proto_transporteur_transporteur_pb.CreateResponse,
    (request: proto_transporteur_transporteur_pb.GetByIdElementRequest) => {
      return request.serializeBinary();
    },
    proto_transporteur_transporteur_pb.CreateResponse.deserializeBinary
  );

  getByIdElement(
    request: proto_transporteur_transporteur_pb.GetByIdElementRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_transporteur_transporteur_pb.CreateResponse>;

  getByIdElement(
    request: proto_transporteur_transporteur_pb.GetByIdElementRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_transporteur_transporteur_pb.CreateResponse) => void): grpcWeb.ClientReadableStream<proto_transporteur_transporteur_pb.CreateResponse>;

  getByIdElement(
    request: proto_transporteur_transporteur_pb.GetByIdElementRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_transporteur_transporteur_pb.CreateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/transporteur.TransporteurService/GetByIdElement',
        request,
        metadata || {},
        this.methodDescriptorGetByIdElement,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/transporteur.TransporteurService/GetByIdElement',
    request,
    metadata || {},
    this.methodDescriptorGetByIdElement);
  }

  methodDescriptorGetByCode = new grpcWeb.MethodDescriptor(
    '/transporteur.TransporteurService/GetByCode',
    grpcWeb.MethodType.UNARY,
    proto_transporteur_transporteur_pb.GetByCodeRequest,
    proto_transporteur_transporteur_pb.CreateResponse,
    (request: proto_transporteur_transporteur_pb.GetByCodeRequest) => {
      return request.serializeBinary();
    },
    proto_transporteur_transporteur_pb.CreateResponse.deserializeBinary
  );

  getByCode(
    request: proto_transporteur_transporteur_pb.GetByCodeRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_transporteur_transporteur_pb.CreateResponse>;

  getByCode(
    request: proto_transporteur_transporteur_pb.GetByCodeRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_transporteur_transporteur_pb.CreateResponse) => void): grpcWeb.ClientReadableStream<proto_transporteur_transporteur_pb.CreateResponse>;

  getByCode(
    request: proto_transporteur_transporteur_pb.GetByCodeRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_transporteur_transporteur_pb.CreateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/transporteur.TransporteurService/GetByCode',
        request,
        metadata || {},
        this.methodDescriptorGetByCode,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/transporteur.TransporteurService/GetByCode',
    request,
    metadata || {},
    this.methodDescriptorGetByCode);
  }

  methodDescriptorGetAll = new grpcWeb.MethodDescriptor(
    '/transporteur.TransporteurService/GetAll',
    grpcWeb.MethodType.UNARY,
    proto_transporteur_transporteur_pb.GetAllRequest,
    proto_transporteur_transporteur_pb.TransporteursResponse,
    (request: proto_transporteur_transporteur_pb.GetAllRequest) => {
      return request.serializeBinary();
    },
    proto_transporteur_transporteur_pb.TransporteursResponse.deserializeBinary
  );

  getAll(
    request: proto_transporteur_transporteur_pb.GetAllRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_transporteur_transporteur_pb.TransporteursResponse>;

  getAll(
    request: proto_transporteur_transporteur_pb.GetAllRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_transporteur_transporteur_pb.TransporteursResponse) => void): grpcWeb.ClientReadableStream<proto_transporteur_transporteur_pb.TransporteursResponse>;

  getAll(
    request: proto_transporteur_transporteur_pb.GetAllRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_transporteur_transporteur_pb.TransporteursResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/transporteur.TransporteurService/GetAll',
        request,
        metadata || {},
        this.methodDescriptorGetAll,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/transporteur.TransporteurService/GetAll',
    request,
    metadata || {},
    this.methodDescriptorGetAll);
  }

  methodDescriptorGetByNameOrCode = new grpcWeb.MethodDescriptor(
    '/transporteur.TransporteurService/GetByNameOrCode',
    grpcWeb.MethodType.UNARY,
    proto_transporteur_transporteur_pb.GetByNameOrCodeRequest,
    proto_transporteur_transporteur_pb.TransporteursResponse,
    (request: proto_transporteur_transporteur_pb.GetByNameOrCodeRequest) => {
      return request.serializeBinary();
    },
    proto_transporteur_transporteur_pb.TransporteursResponse.deserializeBinary
  );

  getByNameOrCode(
    request: proto_transporteur_transporteur_pb.GetByNameOrCodeRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_transporteur_transporteur_pb.TransporteursResponse>;

  getByNameOrCode(
    request: proto_transporteur_transporteur_pb.GetByNameOrCodeRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_transporteur_transporteur_pb.TransporteursResponse) => void): grpcWeb.ClientReadableStream<proto_transporteur_transporteur_pb.TransporteursResponse>;

  getByNameOrCode(
    request: proto_transporteur_transporteur_pb.GetByNameOrCodeRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_transporteur_transporteur_pb.TransporteursResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/transporteur.TransporteurService/GetByNameOrCode',
        request,
        metadata || {},
        this.methodDescriptorGetByNameOrCode,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/transporteur.TransporteurService/GetByNameOrCode',
    request,
    metadata || {},
    this.methodDescriptorGetByNameOrCode);
  }

}

