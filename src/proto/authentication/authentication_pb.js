// source: proto/authentication/authentication.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var proto_clientwarehousecompany_clientwarehousecompany_pb = require('../../proto/clientwarehousecompany/clientwarehousecompany_pb.js');
goog.object.extend(proto, proto_clientwarehousecompany_clientwarehousecompany_pb);
goog.exportSymbol('proto.authentication.Request', null, global);
goog.exportSymbol('proto.authentication.Response', null, global);
goog.exportSymbol('proto.authentication.SignInRequest', null, global);
goog.exportSymbol('proto.authentication.SignUpForm', null, global);
goog.exportSymbol('proto.authentication.SignUpRequest', null, global);
goog.exportSymbol('proto.authentication.User', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authentication.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.authentication.User.repeatedFields_, null);
};
goog.inherits(proto.authentication.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authentication.User.displayName = 'proto.authentication.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authentication.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authentication.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authentication.Request.displayName = 'proto.authentication.Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authentication.SignInRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authentication.SignInRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authentication.SignInRequest.displayName = 'proto.authentication.SignInRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authentication.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authentication.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authentication.Response.displayName = 'proto.authentication.Response';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authentication.SignUpForm = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.authentication.SignUpForm.repeatedFields_, null);
};
goog.inherits(proto.authentication.SignUpForm, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authentication.SignUpForm.displayName = 'proto.authentication.SignUpForm';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authentication.SignUpRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authentication.SignUpRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authentication.SignUpRequest.displayName = 'proto.authentication.SignUpRequest';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.authentication.User.repeatedFields_ = [13,16];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authentication.User.prototype.toObject = function(opt_includeInstance) {
  return proto.authentication.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authentication.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authentication.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updateAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    username: jspb.Message.getFieldWithDefault(msg, 4, ""),
    password: jspb.Message.getFieldWithDefault(msg, 5, ""),
    nom: jspb.Message.getFieldWithDefault(msg, 6, ""),
    preNom: jspb.Message.getFieldWithDefault(msg, 7, ""),
    address: jspb.Message.getFieldWithDefault(msg, 8, ""),
    tel: jspb.Message.getFieldWithDefault(msg, 9, ""),
    mail: jspb.Message.getFieldWithDefault(msg, 10, ""),
    actif: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    managerId: jspb.Message.getFieldWithDefault(msg, 12, ""),
    stockistList: jspb.Message.toObjectList(msg.getStockistList(),
    proto.authentication.User.toObject, includeInstance),
    code: jspb.Message.getFieldWithDefault(msg, 14, ""),
    role: jspb.Message.getFieldWithDefault(msg, 15, ""),
    clientWarehouseCompanyList: jspb.Message.toObjectList(msg.getClientWarehouseCompanyList(),
    proto_clientwarehousecompany_clientwarehousecompany_pb.ClientWarehouseCompany.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authentication.User}
 */
proto.authentication.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authentication.User;
  return proto.authentication.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authentication.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authentication.User}
 */
proto.authentication.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setNom(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreNom(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTel(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setMail(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActif(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setManagerId(value);
      break;
    case 13:
      var value = new proto.authentication.User;
      reader.readMessage(value,proto.authentication.User.deserializeBinaryFromReader);
      msg.addStockist(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 16:
      var value = new proto_clientwarehousecompany_clientwarehousecompany_pb.ClientWarehouseCompany;
      reader.readMessage(value,proto_clientwarehousecompany_clientwarehousecompany_pb.ClientWarehouseCompany.deserializeBinaryFromReader);
      msg.addClientWarehouseCompany(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authentication.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authentication.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authentication.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authentication.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreateAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUpdateAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getNom();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPreNom();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTel();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getMail();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getActif();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getManagerId();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getStockistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.authentication.User.serializeBinaryToWriter
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getClientWarehouseCompanyList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto_clientwarehousecompany_clientwarehousecompany_pb.ClientWarehouseCompany.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.authentication.User.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.authentication.User} returns this
 */
proto.authentication.User.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 create_at = 2;
 * @return {number}
 */
proto.authentication.User.prototype.getCreateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.authentication.User} returns this
 */
proto.authentication.User.prototype.setCreateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 update_at = 3;
 * @return {number}
 */
proto.authentication.User.prototype.getUpdateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.authentication.User} returns this
 */
proto.authentication.User.prototype.setUpdateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.authentication.User.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.authentication.User} returns this
 */
proto.authentication.User.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.authentication.User.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.authentication.User} returns this
 */
proto.authentication.User.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string nom = 6;
 * @return {string}
 */
proto.authentication.User.prototype.getNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.authentication.User} returns this
 */
proto.authentication.User.prototype.setNom = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string pre_nom = 7;
 * @return {string}
 */
proto.authentication.User.prototype.getPreNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.authentication.User} returns this
 */
proto.authentication.User.prototype.setPreNom = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string address = 8;
 * @return {string}
 */
proto.authentication.User.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.authentication.User} returns this
 */
proto.authentication.User.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string tel = 9;
 * @return {string}
 */
proto.authentication.User.prototype.getTel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.authentication.User} returns this
 */
proto.authentication.User.prototype.setTel = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string mail = 10;
 * @return {string}
 */
proto.authentication.User.prototype.getMail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.authentication.User} returns this
 */
proto.authentication.User.prototype.setMail = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bool actif = 11;
 * @return {boolean}
 */
proto.authentication.User.prototype.getActif = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.authentication.User} returns this
 */
proto.authentication.User.prototype.setActif = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional string manager_id = 12;
 * @return {string}
 */
proto.authentication.User.prototype.getManagerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.authentication.User} returns this
 */
proto.authentication.User.prototype.setManagerId = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * repeated User stockist = 13;
 * @return {!Array<!proto.authentication.User>}
 */
proto.authentication.User.prototype.getStockistList = function() {
  return /** @type{!Array<!proto.authentication.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.authentication.User, 13));
};


/**
 * @param {!Array<!proto.authentication.User>} value
 * @return {!proto.authentication.User} returns this
*/
proto.authentication.User.prototype.setStockistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.authentication.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.authentication.User}
 */
proto.authentication.User.prototype.addStockist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.authentication.User, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.authentication.User} returns this
 */
proto.authentication.User.prototype.clearStockistList = function() {
  return this.setStockistList([]);
};


/**
 * optional string code = 14;
 * @return {string}
 */
proto.authentication.User.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.authentication.User} returns this
 */
proto.authentication.User.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string role = 15;
 * @return {string}
 */
proto.authentication.User.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.authentication.User} returns this
 */
proto.authentication.User.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * repeated clientwarehousecompany.ClientWarehouseCompany client_warehouse_company = 16;
 * @return {!Array<!proto.clientwarehousecompany.ClientWarehouseCompany>}
 */
proto.authentication.User.prototype.getClientWarehouseCompanyList = function() {
  return /** @type{!Array<!proto.clientwarehousecompany.ClientWarehouseCompany>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_clientwarehousecompany_clientwarehousecompany_pb.ClientWarehouseCompany, 16));
};


/**
 * @param {!Array<!proto.clientwarehousecompany.ClientWarehouseCompany>} value
 * @return {!proto.authentication.User} returns this
*/
proto.authentication.User.prototype.setClientWarehouseCompanyList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.clientwarehousecompany.ClientWarehouseCompany=} opt_value
 * @param {number=} opt_index
 * @return {!proto.clientwarehousecompany.ClientWarehouseCompany}
 */
proto.authentication.User.prototype.addClientWarehouseCompany = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.clientwarehousecompany.ClientWarehouseCompany, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.authentication.User} returns this
 */
proto.authentication.User.prototype.clearClientWarehouseCompanyList = function() {
  return this.setClientWarehouseCompanyList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authentication.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.authentication.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authentication.Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authentication.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authentication.Request}
 */
proto.authentication.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authentication.Request;
  return proto.authentication.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authentication.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authentication.Request}
 */
proto.authentication.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authentication.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authentication.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authentication.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authentication.Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string code = 1;
 * @return {string}
 */
proto.authentication.Request.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.authentication.Request} returns this
 */
proto.authentication.Request.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.authentication.Request.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.authentication.Request} returns this
 */
proto.authentication.Request.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authentication.SignInRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.authentication.SignInRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authentication.SignInRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authentication.SignInRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    signinentry: (f = msg.getSigninentry()) && proto.authentication.Request.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authentication.SignInRequest}
 */
proto.authentication.SignInRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authentication.SignInRequest;
  return proto.authentication.SignInRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authentication.SignInRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authentication.SignInRequest}
 */
proto.authentication.SignInRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.authentication.Request;
      reader.readMessage(value,proto.authentication.Request.deserializeBinaryFromReader);
      msg.setSigninentry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authentication.SignInRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authentication.SignInRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authentication.SignInRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authentication.SignInRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSigninentry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.authentication.Request.serializeBinaryToWriter
    );
  }
};


/**
 * optional Request signInEntry = 1;
 * @return {?proto.authentication.Request}
 */
proto.authentication.SignInRequest.prototype.getSigninentry = function() {
  return /** @type{?proto.authentication.Request} */ (
    jspb.Message.getWrapperField(this, proto.authentication.Request, 1));
};


/**
 * @param {?proto.authentication.Request|undefined} value
 * @return {!proto.authentication.SignInRequest} returns this
*/
proto.authentication.SignInRequest.prototype.setSigninentry = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authentication.SignInRequest} returns this
 */
proto.authentication.SignInRequest.prototype.clearSigninentry = function() {
  return this.setSigninentry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authentication.SignInRequest.prototype.hasSigninentry = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authentication.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.authentication.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authentication.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authentication.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && proto.authentication.User.toObject(includeInstance, f),
    messageerror: jspb.Message.getFieldWithDefault(msg, 2, ""),
    accesstoken: jspb.Message.getFieldWithDefault(msg, 3, ""),
    refreshtoken: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authentication.Response}
 */
proto.authentication.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authentication.Response;
  return proto.authentication.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authentication.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authentication.Response}
 */
proto.authentication.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.authentication.User;
      reader.readMessage(value,proto.authentication.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccesstoken(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRefreshtoken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authentication.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authentication.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authentication.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authentication.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.authentication.User.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAccesstoken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRefreshtoken();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional User user = 1;
 * @return {?proto.authentication.User}
 */
proto.authentication.Response.prototype.getUser = function() {
  return /** @type{?proto.authentication.User} */ (
    jspb.Message.getWrapperField(this, proto.authentication.User, 1));
};


/**
 * @param {?proto.authentication.User|undefined} value
 * @return {!proto.authentication.Response} returns this
*/
proto.authentication.Response.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authentication.Response} returns this
 */
proto.authentication.Response.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authentication.Response.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string messageError = 2;
 * @return {string}
 */
proto.authentication.Response.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.authentication.Response} returns this
 */
proto.authentication.Response.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string accessToken = 3;
 * @return {string}
 */
proto.authentication.Response.prototype.getAccesstoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.authentication.Response} returns this
 */
proto.authentication.Response.prototype.setAccesstoken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string refreshToken = 4;
 * @return {string}
 */
proto.authentication.Response.prototype.getRefreshtoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.authentication.Response} returns this
 */
proto.authentication.Response.prototype.setRefreshtoken = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.authentication.SignUpForm.repeatedFields_ = [10,13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authentication.SignUpForm.prototype.toObject = function(opt_includeInstance) {
  return proto.authentication.SignUpForm.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authentication.SignUpForm} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authentication.SignUpForm.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nom: jspb.Message.getFieldWithDefault(msg, 3, ""),
    preNom: jspb.Message.getFieldWithDefault(msg, 4, ""),
    address: jspb.Message.getFieldWithDefault(msg, 5, ""),
    tel: jspb.Message.getFieldWithDefault(msg, 6, ""),
    mail: jspb.Message.getFieldWithDefault(msg, 7, ""),
    actif: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    managerId: jspb.Message.getFieldWithDefault(msg, 9, ""),
    stockistList: jspb.Message.toObjectList(msg.getStockistList(),
    proto.authentication.User.toObject, includeInstance),
    code: jspb.Message.getFieldWithDefault(msg, 11, ""),
    role: jspb.Message.getFieldWithDefault(msg, 12, ""),
    clientWarehouseCompanyList: jspb.Message.toObjectList(msg.getClientWarehouseCompanyList(),
    proto_clientwarehousecompany_clientwarehousecompany_pb.ClientWarehouseCompany.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authentication.SignUpForm}
 */
proto.authentication.SignUpForm.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authentication.SignUpForm;
  return proto.authentication.SignUpForm.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authentication.SignUpForm} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authentication.SignUpForm}
 */
proto.authentication.SignUpForm.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNom(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreNom(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTel(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setMail(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActif(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setManagerId(value);
      break;
    case 10:
      var value = new proto.authentication.User;
      reader.readMessage(value,proto.authentication.User.deserializeBinaryFromReader);
      msg.addStockist(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 13:
      var value = new proto_clientwarehousecompany_clientwarehousecompany_pb.ClientWarehouseCompany;
      reader.readMessage(value,proto_clientwarehousecompany_clientwarehousecompany_pb.ClientWarehouseCompany.deserializeBinaryFromReader);
      msg.addClientWarehouseCompany(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authentication.SignUpForm.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authentication.SignUpForm.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authentication.SignUpForm} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authentication.SignUpForm.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNom();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPreNom();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTel();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getMail();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getActif();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getManagerId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getStockistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.authentication.User.serializeBinaryToWriter
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getClientWarehouseCompanyList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto_clientwarehousecompany_clientwarehousecompany_pb.ClientWarehouseCompany.serializeBinaryToWriter
    );
  }
};


/**
 * optional string username = 1;
 * @return {string}
 */
proto.authentication.SignUpForm.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.authentication.SignUpForm} returns this
 */
proto.authentication.SignUpForm.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.authentication.SignUpForm.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.authentication.SignUpForm} returns this
 */
proto.authentication.SignUpForm.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string nom = 3;
 * @return {string}
 */
proto.authentication.SignUpForm.prototype.getNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.authentication.SignUpForm} returns this
 */
proto.authentication.SignUpForm.prototype.setNom = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string pre_nom = 4;
 * @return {string}
 */
proto.authentication.SignUpForm.prototype.getPreNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.authentication.SignUpForm} returns this
 */
proto.authentication.SignUpForm.prototype.setPreNom = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string address = 5;
 * @return {string}
 */
proto.authentication.SignUpForm.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.authentication.SignUpForm} returns this
 */
proto.authentication.SignUpForm.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string tel = 6;
 * @return {string}
 */
proto.authentication.SignUpForm.prototype.getTel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.authentication.SignUpForm} returns this
 */
proto.authentication.SignUpForm.prototype.setTel = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string mail = 7;
 * @return {string}
 */
proto.authentication.SignUpForm.prototype.getMail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.authentication.SignUpForm} returns this
 */
proto.authentication.SignUpForm.prototype.setMail = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool actif = 8;
 * @return {boolean}
 */
proto.authentication.SignUpForm.prototype.getActif = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.authentication.SignUpForm} returns this
 */
proto.authentication.SignUpForm.prototype.setActif = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string manager_id = 9;
 * @return {string}
 */
proto.authentication.SignUpForm.prototype.getManagerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.authentication.SignUpForm} returns this
 */
proto.authentication.SignUpForm.prototype.setManagerId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * repeated User stockist = 10;
 * @return {!Array<!proto.authentication.User>}
 */
proto.authentication.SignUpForm.prototype.getStockistList = function() {
  return /** @type{!Array<!proto.authentication.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.authentication.User, 10));
};


/**
 * @param {!Array<!proto.authentication.User>} value
 * @return {!proto.authentication.SignUpForm} returns this
*/
proto.authentication.SignUpForm.prototype.setStockistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.authentication.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.authentication.User}
 */
proto.authentication.SignUpForm.prototype.addStockist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.authentication.User, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.authentication.SignUpForm} returns this
 */
proto.authentication.SignUpForm.prototype.clearStockistList = function() {
  return this.setStockistList([]);
};


/**
 * optional string code = 11;
 * @return {string}
 */
proto.authentication.SignUpForm.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.authentication.SignUpForm} returns this
 */
proto.authentication.SignUpForm.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string role = 12;
 * @return {string}
 */
proto.authentication.SignUpForm.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.authentication.SignUpForm} returns this
 */
proto.authentication.SignUpForm.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * repeated clientwarehousecompany.ClientWarehouseCompany client_warehouse_company = 13;
 * @return {!Array<!proto.clientwarehousecompany.ClientWarehouseCompany>}
 */
proto.authentication.SignUpForm.prototype.getClientWarehouseCompanyList = function() {
  return /** @type{!Array<!proto.clientwarehousecompany.ClientWarehouseCompany>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_clientwarehousecompany_clientwarehousecompany_pb.ClientWarehouseCompany, 13));
};


/**
 * @param {!Array<!proto.clientwarehousecompany.ClientWarehouseCompany>} value
 * @return {!proto.authentication.SignUpForm} returns this
*/
proto.authentication.SignUpForm.prototype.setClientWarehouseCompanyList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.clientwarehousecompany.ClientWarehouseCompany=} opt_value
 * @param {number=} opt_index
 * @return {!proto.clientwarehousecompany.ClientWarehouseCompany}
 */
proto.authentication.SignUpForm.prototype.addClientWarehouseCompany = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.clientwarehousecompany.ClientWarehouseCompany, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.authentication.SignUpForm} returns this
 */
proto.authentication.SignUpForm.prototype.clearClientWarehouseCompanyList = function() {
  return this.setClientWarehouseCompanyList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authentication.SignUpRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.authentication.SignUpRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authentication.SignUpRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authentication.SignUpRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    signupentry: (f = msg.getSignupentry()) && proto.authentication.SignUpForm.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authentication.SignUpRequest}
 */
proto.authentication.SignUpRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authentication.SignUpRequest;
  return proto.authentication.SignUpRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authentication.SignUpRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authentication.SignUpRequest}
 */
proto.authentication.SignUpRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.authentication.SignUpForm;
      reader.readMessage(value,proto.authentication.SignUpForm.deserializeBinaryFromReader);
      msg.setSignupentry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authentication.SignUpRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authentication.SignUpRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authentication.SignUpRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authentication.SignUpRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignupentry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.authentication.SignUpForm.serializeBinaryToWriter
    );
  }
};


/**
 * optional SignUpForm signUpEntry = 1;
 * @return {?proto.authentication.SignUpForm}
 */
proto.authentication.SignUpRequest.prototype.getSignupentry = function() {
  return /** @type{?proto.authentication.SignUpForm} */ (
    jspb.Message.getWrapperField(this, proto.authentication.SignUpForm, 1));
};


/**
 * @param {?proto.authentication.SignUpForm|undefined} value
 * @return {!proto.authentication.SignUpRequest} returns this
*/
proto.authentication.SignUpRequest.prototype.setSignupentry = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authentication.SignUpRequest} returns this
 */
proto.authentication.SignUpRequest.prototype.clearSignupentry = function() {
  return this.setSignupentry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authentication.SignUpRequest.prototype.hasSignupentry = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.authentication);
