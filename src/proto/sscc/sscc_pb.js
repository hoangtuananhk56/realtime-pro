// source: proto/sscc/sscc.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var proto_comarticle_comarticle_pb = require('../../proto/comarticle/comarticle_pb.js');
goog.object.extend(proto, proto_comarticle_comarticle_pb);
var proto_stock_stock_pb = require('../../proto/stock/stock_pb.js');
goog.object.extend(proto, proto_stock_stock_pb);
goog.exportSymbol('proto.sscc.AttFournisseur', null, global);
goog.exportSymbol('proto.sscc.FindSsccInStockRequest', null, global);
goog.exportSymbol('proto.sscc.FindSsccInStockResponse', null, global);
goog.exportSymbol('proto.sscc.GetHistoryBySSCCNumberRequest', null, global);
goog.exportSymbol('proto.sscc.GetHistoryBySSCCNumberResponse', null, global);
goog.exportSymbol('proto.sscc.MetaData', null, global);
goog.exportSymbol('proto.sscc.SSCC', null, global);
goog.exportSymbol('proto.sscc.SSCCGeneratorRequest', null, global);
goog.exportSymbol('proto.sscc.SSCCGeneratorRespponse', null, global);
goog.exportSymbol('proto.sscc.SSCCHistory', null, global);
goog.exportSymbol('proto.sscc.SSCCLoadingCheckRequest', null, global);
goog.exportSymbol('proto.sscc.SSCCLoadingCheckResponse', null, global);
goog.exportSymbol('proto.sscc.SSCCLocationCheckRequest', null, global);
goog.exportSymbol('proto.sscc.SSCCLocationCheckResponse', null, global);
goog.exportSymbol('proto.sscc.SSCCMovementCheckRequest', null, global);
goog.exportSymbol('proto.sscc.SSCCMovementCheckResponse', null, global);
goog.exportSymbol('proto.sscc.SSCCNumber', null, global);
goog.exportSymbol('proto.sscc.SSCCReapproCheckRequest', null, global);
goog.exportSymbol('proto.sscc.SSCCReapproCheckResponse', null, global);
goog.exportSymbol('proto.sscc.SSCCRegCheckRequest', null, global);
goog.exportSymbol('proto.sscc.SSCCRegCheckResponse', null, global);
goog.exportSymbol('proto.sscc.SSCCResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sscc.SSCC = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sscc.SSCC, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sscc.SSCC.displayName = 'proto.sscc.SSCC';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sscc.SSCCNumber = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sscc.SSCCNumber, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sscc.SSCCNumber.displayName = 'proto.sscc.SSCCNumber';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sscc.SSCCResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sscc.SSCCResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sscc.SSCCResponse.displayName = 'proto.sscc.SSCCResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sscc.SSCCGeneratorRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sscc.SSCCGeneratorRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sscc.SSCCGeneratorRequest.displayName = 'proto.sscc.SSCCGeneratorRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sscc.SSCCGeneratorRespponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sscc.SSCCGeneratorRespponse.repeatedFields_, null);
};
goog.inherits(proto.sscc.SSCCGeneratorRespponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sscc.SSCCGeneratorRespponse.displayName = 'proto.sscc.SSCCGeneratorRespponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sscc.SSCCLocationCheckRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sscc.SSCCLocationCheckRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sscc.SSCCLocationCheckRequest.displayName = 'proto.sscc.SSCCLocationCheckRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sscc.SSCCLocationCheckResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sscc.SSCCLocationCheckResponse.repeatedFields_, null);
};
goog.inherits(proto.sscc.SSCCLocationCheckResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sscc.SSCCLocationCheckResponse.displayName = 'proto.sscc.SSCCLocationCheckResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sscc.SSCCMovementCheckRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sscc.SSCCMovementCheckRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sscc.SSCCMovementCheckRequest.displayName = 'proto.sscc.SSCCMovementCheckRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sscc.SSCCMovementCheckResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sscc.SSCCMovementCheckResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sscc.SSCCMovementCheckResponse.displayName = 'proto.sscc.SSCCMovementCheckResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sscc.SSCCLoadingCheckRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sscc.SSCCLoadingCheckRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sscc.SSCCLoadingCheckRequest.displayName = 'proto.sscc.SSCCLoadingCheckRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sscc.SSCCLoadingCheckResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sscc.SSCCLoadingCheckResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sscc.SSCCLoadingCheckResponse.displayName = 'proto.sscc.SSCCLoadingCheckResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sscc.SSCCRegCheckRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sscc.SSCCRegCheckRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sscc.SSCCRegCheckRequest.displayName = 'proto.sscc.SSCCRegCheckRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sscc.SSCCRegCheckResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sscc.SSCCRegCheckResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sscc.SSCCRegCheckResponse.displayName = 'proto.sscc.SSCCRegCheckResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sscc.AttFournisseur = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sscc.AttFournisseur, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sscc.AttFournisseur.displayName = 'proto.sscc.AttFournisseur';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sscc.SSCCReapproCheckRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sscc.SSCCReapproCheckRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sscc.SSCCReapproCheckRequest.displayName = 'proto.sscc.SSCCReapproCheckRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sscc.SSCCReapproCheckResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sscc.SSCCReapproCheckResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sscc.SSCCReapproCheckResponse.displayName = 'proto.sscc.SSCCReapproCheckResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sscc.FindSsccInStockRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sscc.FindSsccInStockRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sscc.FindSsccInStockRequest.displayName = 'proto.sscc.FindSsccInStockRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sscc.FindSsccInStockResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sscc.FindSsccInStockResponse.repeatedFields_, null);
};
goog.inherits(proto.sscc.FindSsccInStockResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sscc.FindSsccInStockResponse.displayName = 'proto.sscc.FindSsccInStockResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sscc.MetaData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sscc.MetaData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sscc.MetaData.displayName = 'proto.sscc.MetaData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sscc.SSCCHistory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sscc.SSCCHistory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sscc.SSCCHistory.displayName = 'proto.sscc.SSCCHistory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sscc.GetHistoryBySSCCNumberRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sscc.GetHistoryBySSCCNumberRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sscc.GetHistoryBySSCCNumberRequest.displayName = 'proto.sscc.GetHistoryBySSCCNumberRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sscc.GetHistoryBySSCCNumberResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sscc.GetHistoryBySSCCNumberResponse.repeatedFields_, null);
};
goog.inherits(proto.sscc.GetHistoryBySSCCNumberResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sscc.GetHistoryBySSCCNumberResponse.displayName = 'proto.sscc.GetHistoryBySSCCNumberResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sscc.SSCC.prototype.toObject = function(opt_includeInstance) {
  return proto.sscc.SSCC.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sscc.SSCC} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCC.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updateAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    num: jspb.Message.getFieldWithDefault(msg, 4, ""),
    codeStatus: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sscc.SSCC}
 */
proto.sscc.SSCC.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sscc.SSCC;
  return proto.sscc.SSCC.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sscc.SSCC} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sscc.SSCC}
 */
proto.sscc.SSCC.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNum(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodeStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sscc.SSCC.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sscc.SSCC.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sscc.SSCC} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCC.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreateAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUpdateAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getNum();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCodeStatus();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.sscc.SSCC.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCC} returns this
 */
proto.sscc.SSCC.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 create_at = 2;
 * @return {number}
 */
proto.sscc.SSCC.prototype.getCreateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sscc.SSCC} returns this
 */
proto.sscc.SSCC.prototype.setCreateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 update_at = 3;
 * @return {number}
 */
proto.sscc.SSCC.prototype.getUpdateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sscc.SSCC} returns this
 */
proto.sscc.SSCC.prototype.setUpdateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string num = 4;
 * @return {string}
 */
proto.sscc.SSCC.prototype.getNum = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCC} returns this
 */
proto.sscc.SSCC.prototype.setNum = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string code_status = 5;
 * @return {string}
 */
proto.sscc.SSCC.prototype.getCodeStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCC} returns this
 */
proto.sscc.SSCC.prototype.setCodeStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sscc.SSCCNumber.prototype.toObject = function(opt_includeInstance) {
  return proto.sscc.SSCCNumber.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sscc.SSCCNumber} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCNumber.toObject = function(includeInstance, msg) {
  var f, obj = {
    num: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sscc.SSCCNumber}
 */
proto.sscc.SSCCNumber.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sscc.SSCCNumber;
  return proto.sscc.SSCCNumber.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sscc.SSCCNumber} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sscc.SSCCNumber}
 */
proto.sscc.SSCCNumber.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sscc.SSCCNumber.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sscc.SSCCNumber.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sscc.SSCCNumber} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCNumber.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNum();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string num = 1;
 * @return {string}
 */
proto.sscc.SSCCNumber.prototype.getNum = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCNumber} returns this
 */
proto.sscc.SSCCNumber.prototype.setNum = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sscc.SSCCResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sscc.SSCCResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sscc.SSCCResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entry: (f = msg.getEntry()) && proto.sscc.SSCC.toObject(includeInstance, f),
    messageerror: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sscc.SSCCResponse}
 */
proto.sscc.SSCCResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sscc.SSCCResponse;
  return proto.sscc.SSCCResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sscc.SSCCResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sscc.SSCCResponse}
 */
proto.sscc.SSCCResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sscc.SSCC;
      reader.readMessage(value,proto.sscc.SSCC.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sscc.SSCCResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sscc.SSCCResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sscc.SSCCResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sscc.SSCC.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional SSCC entry = 1;
 * @return {?proto.sscc.SSCC}
 */
proto.sscc.SSCCResponse.prototype.getEntry = function() {
  return /** @type{?proto.sscc.SSCC} */ (
    jspb.Message.getWrapperField(this, proto.sscc.SSCC, 1));
};


/**
 * @param {?proto.sscc.SSCC|undefined} value
 * @return {!proto.sscc.SSCCResponse} returns this
*/
proto.sscc.SSCCResponse.prototype.setEntry = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sscc.SSCCResponse} returns this
 */
proto.sscc.SSCCResponse.prototype.clearEntry = function() {
  return this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sscc.SSCCResponse.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string messageError = 2;
 * @return {string}
 */
proto.sscc.SSCCResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCResponse} returns this
 */
proto.sscc.SSCCResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sscc.SSCCGeneratorRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sscc.SSCCGeneratorRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sscc.SSCCGeneratorRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCGeneratorRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    quantity: jspb.Message.getFieldWithDefault(msg, 1, 0),
    clientid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sscc.SSCCGeneratorRequest}
 */
proto.sscc.SSCCGeneratorRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sscc.SSCCGeneratorRequest;
  return proto.sscc.SSCCGeneratorRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sscc.SSCCGeneratorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sscc.SSCCGeneratorRequest}
 */
proto.sscc.SSCCGeneratorRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQuantity(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sscc.SSCCGeneratorRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sscc.SSCCGeneratorRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sscc.SSCCGeneratorRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCGeneratorRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 quantity = 1;
 * @return {number}
 */
proto.sscc.SSCCGeneratorRequest.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sscc.SSCCGeneratorRequest} returns this
 */
proto.sscc.SSCCGeneratorRequest.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string clientid = 2;
 * @return {string}
 */
proto.sscc.SSCCGeneratorRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCGeneratorRequest} returns this
 */
proto.sscc.SSCCGeneratorRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sscc.SSCCGeneratorRespponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sscc.SSCCGeneratorRespponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sscc.SSCCGeneratorRespponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sscc.SSCCGeneratorRespponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCGeneratorRespponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ssccCodesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    messageerror: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sscc.SSCCGeneratorRespponse}
 */
proto.sscc.SSCCGeneratorRespponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sscc.SSCCGeneratorRespponse;
  return proto.sscc.SSCCGeneratorRespponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sscc.SSCCGeneratorRespponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sscc.SSCCGeneratorRespponse}
 */
proto.sscc.SSCCGeneratorRespponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addSsccCodes(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sscc.SSCCGeneratorRespponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sscc.SSCCGeneratorRespponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sscc.SSCCGeneratorRespponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCGeneratorRespponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSsccCodesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated string sscc_codes = 1;
 * @return {!Array<string>}
 */
proto.sscc.SSCCGeneratorRespponse.prototype.getSsccCodesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.sscc.SSCCGeneratorRespponse} returns this
 */
proto.sscc.SSCCGeneratorRespponse.prototype.setSsccCodesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.sscc.SSCCGeneratorRespponse} returns this
 */
proto.sscc.SSCCGeneratorRespponse.prototype.addSsccCodes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sscc.SSCCGeneratorRespponse} returns this
 */
proto.sscc.SSCCGeneratorRespponse.prototype.clearSsccCodesList = function() {
  return this.setSsccCodesList([]);
};


/**
 * optional string messageError = 2;
 * @return {string}
 */
proto.sscc.SSCCGeneratorRespponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCGeneratorRespponse} returns this
 */
proto.sscc.SSCCGeneratorRespponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sscc.SSCCLocationCheckRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sscc.SSCCLocationCheckRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sscc.SSCCLocationCheckRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCLocationCheckRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sscc: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    articleId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    missionId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    quantity: jspb.Message.getFieldWithDefault(msg, 5, 0),
    ssccHost: jspb.Message.getFieldWithDefault(msg, 6, ""),
    isAcceptOverHeight: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sscc.SSCCLocationCheckRequest}
 */
proto.sscc.SSCCLocationCheckRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sscc.SSCCLocationCheckRequest;
  return proto.sscc.SSCCLocationCheckRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sscc.SSCCLocationCheckRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sscc.SSCCLocationCheckRequest}
 */
proto.sscc.SSCCLocationCheckRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSscc(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setArticleId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMissionId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQuantity(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSsccHost(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAcceptOverHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sscc.SSCCLocationCheckRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sscc.SSCCLocationCheckRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sscc.SSCCLocationCheckRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCLocationCheckRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSscc();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getArticleId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMissionId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getSsccHost();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIsAcceptOverHeight();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional string sscc = 1;
 * @return {string}
 */
proto.sscc.SSCCLocationCheckRequest.prototype.getSscc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCLocationCheckRequest} returns this
 */
proto.sscc.SSCCLocationCheckRequest.prototype.setSscc = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.sscc.SSCCLocationCheckRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCLocationCheckRequest} returns this
 */
proto.sscc.SSCCLocationCheckRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string article_id = 3;
 * @return {string}
 */
proto.sscc.SSCCLocationCheckRequest.prototype.getArticleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCLocationCheckRequest} returns this
 */
proto.sscc.SSCCLocationCheckRequest.prototype.setArticleId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string mission_id = 4;
 * @return {string}
 */
proto.sscc.SSCCLocationCheckRequest.prototype.getMissionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCLocationCheckRequest} returns this
 */
proto.sscc.SSCCLocationCheckRequest.prototype.setMissionId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 quantity = 5;
 * @return {number}
 */
proto.sscc.SSCCLocationCheckRequest.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.sscc.SSCCLocationCheckRequest} returns this
 */
proto.sscc.SSCCLocationCheckRequest.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string sscc_host = 6;
 * @return {string}
 */
proto.sscc.SSCCLocationCheckRequest.prototype.getSsccHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCLocationCheckRequest} returns this
 */
proto.sscc.SSCCLocationCheckRequest.prototype.setSsccHost = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool is_accept_over_height = 7;
 * @return {boolean}
 */
proto.sscc.SSCCLocationCheckRequest.prototype.getIsAcceptOverHeight = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sscc.SSCCLocationCheckRequest} returns this
 */
proto.sscc.SSCCLocationCheckRequest.prototype.setIsAcceptOverHeight = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sscc.SSCCLocationCheckResponse.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sscc.SSCCLocationCheckResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sscc.SSCCLocationCheckResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sscc.SSCCLocationCheckResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCLocationCheckResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageError: jspb.Message.getFieldWithDefault(msg, 1, ""),
    isValid: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    locationId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isFirstScanned: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    isScanNext: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    isLastMission: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    isFirstMissionInDay: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    comArticleList: jspb.Message.toObjectList(msg.getComArticleList(),
    proto_comarticle_comarticle_pb.ComArticle.toObject, includeInstance),
    recommendQte: jspb.Message.getFieldWithDefault(msg, 9, 0),
    isOverHeight: jspb.Message.getBooleanFieldWithDefault(msg, 10, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sscc.SSCCLocationCheckResponse}
 */
proto.sscc.SSCCLocationCheckResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sscc.SSCCLocationCheckResponse;
  return proto.sscc.SSCCLocationCheckResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sscc.SSCCLocationCheckResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sscc.SSCCLocationCheckResponse}
 */
proto.sscc.SSCCLocationCheckResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageError(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsValid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsFirstScanned(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsScanNext(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsLastMission(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsFirstMissionInDay(value);
      break;
    case 8:
      var value = new proto_comarticle_comarticle_pb.ComArticle;
      reader.readMessage(value,proto_comarticle_comarticle_pb.ComArticle.deserializeBinaryFromReader);
      msg.addComArticle(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRecommendQte(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsOverHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sscc.SSCCLocationCheckResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sscc.SSCCLocationCheckResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sscc.SSCCLocationCheckResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCLocationCheckResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageError();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsValid();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getLocationId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsFirstScanned();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getIsScanNext();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getIsLastMission();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getIsFirstMissionInDay();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getComArticleList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto_comarticle_comarticle_pb.ComArticle.serializeBinaryToWriter
    );
  }
  f = message.getRecommendQte();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getIsOverHeight();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * optional string message_error = 1;
 * @return {string}
 */
proto.sscc.SSCCLocationCheckResponse.prototype.getMessageError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCLocationCheckResponse} returns this
 */
proto.sscc.SSCCLocationCheckResponse.prototype.setMessageError = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool is_valid = 2;
 * @return {boolean}
 */
proto.sscc.SSCCLocationCheckResponse.prototype.getIsValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sscc.SSCCLocationCheckResponse} returns this
 */
proto.sscc.SSCCLocationCheckResponse.prototype.setIsValid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string location_id = 3;
 * @return {string}
 */
proto.sscc.SSCCLocationCheckResponse.prototype.getLocationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCLocationCheckResponse} returns this
 */
proto.sscc.SSCCLocationCheckResponse.prototype.setLocationId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool is_first_scanned = 4;
 * @return {boolean}
 */
proto.sscc.SSCCLocationCheckResponse.prototype.getIsFirstScanned = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sscc.SSCCLocationCheckResponse} returns this
 */
proto.sscc.SSCCLocationCheckResponse.prototype.setIsFirstScanned = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool is_scan_next = 5;
 * @return {boolean}
 */
proto.sscc.SSCCLocationCheckResponse.prototype.getIsScanNext = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sscc.SSCCLocationCheckResponse} returns this
 */
proto.sscc.SSCCLocationCheckResponse.prototype.setIsScanNext = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool is_last_mission = 6;
 * @return {boolean}
 */
proto.sscc.SSCCLocationCheckResponse.prototype.getIsLastMission = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sscc.SSCCLocationCheckResponse} returns this
 */
proto.sscc.SSCCLocationCheckResponse.prototype.setIsLastMission = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool is_first_mission_in_day = 7;
 * @return {boolean}
 */
proto.sscc.SSCCLocationCheckResponse.prototype.getIsFirstMissionInDay = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sscc.SSCCLocationCheckResponse} returns this
 */
proto.sscc.SSCCLocationCheckResponse.prototype.setIsFirstMissionInDay = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * repeated comarticle.ComArticle com_article = 8;
 * @return {!Array<!proto.comarticle.ComArticle>}
 */
proto.sscc.SSCCLocationCheckResponse.prototype.getComArticleList = function() {
  return /** @type{!Array<!proto.comarticle.ComArticle>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_comarticle_comarticle_pb.ComArticle, 8));
};


/**
 * @param {!Array<!proto.comarticle.ComArticle>} value
 * @return {!proto.sscc.SSCCLocationCheckResponse} returns this
*/
proto.sscc.SSCCLocationCheckResponse.prototype.setComArticleList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.comarticle.ComArticle=} opt_value
 * @param {number=} opt_index
 * @return {!proto.comarticle.ComArticle}
 */
proto.sscc.SSCCLocationCheckResponse.prototype.addComArticle = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.comarticle.ComArticle, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sscc.SSCCLocationCheckResponse} returns this
 */
proto.sscc.SSCCLocationCheckResponse.prototype.clearComArticleList = function() {
  return this.setComArticleList([]);
};


/**
 * optional int64 recommend_qte = 9;
 * @return {number}
 */
proto.sscc.SSCCLocationCheckResponse.prototype.getRecommendQte = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.sscc.SSCCLocationCheckResponse} returns this
 */
proto.sscc.SSCCLocationCheckResponse.prototype.setRecommendQte = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional bool is_over_height = 10;
 * @return {boolean}
 */
proto.sscc.SSCCLocationCheckResponse.prototype.getIsOverHeight = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sscc.SSCCLocationCheckResponse} returns this
 */
proto.sscc.SSCCLocationCheckResponse.prototype.setIsOverHeight = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sscc.SSCCMovementCheckRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sscc.SSCCMovementCheckRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sscc.SSCCMovementCheckRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCMovementCheckRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sscc: jspb.Message.getFieldWithDefault(msg, 1, ""),
    missionId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sscc.SSCCMovementCheckRequest}
 */
proto.sscc.SSCCMovementCheckRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sscc.SSCCMovementCheckRequest;
  return proto.sscc.SSCCMovementCheckRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sscc.SSCCMovementCheckRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sscc.SSCCMovementCheckRequest}
 */
proto.sscc.SSCCMovementCheckRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSscc(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMissionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sscc.SSCCMovementCheckRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sscc.SSCCMovementCheckRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sscc.SSCCMovementCheckRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCMovementCheckRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSscc();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMissionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string sscc = 1;
 * @return {string}
 */
proto.sscc.SSCCMovementCheckRequest.prototype.getSscc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCMovementCheckRequest} returns this
 */
proto.sscc.SSCCMovementCheckRequest.prototype.setSscc = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string mission_id = 2;
 * @return {string}
 */
proto.sscc.SSCCMovementCheckRequest.prototype.getMissionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCMovementCheckRequest} returns this
 */
proto.sscc.SSCCMovementCheckRequest.prototype.setMissionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sscc.SSCCMovementCheckResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sscc.SSCCMovementCheckResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sscc.SSCCMovementCheckResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCMovementCheckResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageError: jspb.Message.getFieldWithDefault(msg, 1, ""),
    isValid: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sscc.SSCCMovementCheckResponse}
 */
proto.sscc.SSCCMovementCheckResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sscc.SSCCMovementCheckResponse;
  return proto.sscc.SSCCMovementCheckResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sscc.SSCCMovementCheckResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sscc.SSCCMovementCheckResponse}
 */
proto.sscc.SSCCMovementCheckResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageError(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsValid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sscc.SSCCMovementCheckResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sscc.SSCCMovementCheckResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sscc.SSCCMovementCheckResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCMovementCheckResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageError();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsValid();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string message_error = 1;
 * @return {string}
 */
proto.sscc.SSCCMovementCheckResponse.prototype.getMessageError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCMovementCheckResponse} returns this
 */
proto.sscc.SSCCMovementCheckResponse.prototype.setMessageError = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool is_valid = 2;
 * @return {boolean}
 */
proto.sscc.SSCCMovementCheckResponse.prototype.getIsValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sscc.SSCCMovementCheckResponse} returns this
 */
proto.sscc.SSCCMovementCheckResponse.prototype.setIsValid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sscc.SSCCLoadingCheckRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sscc.SSCCLoadingCheckRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sscc.SSCCLoadingCheckRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCLoadingCheckRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sscc: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sscc.SSCCLoadingCheckRequest}
 */
proto.sscc.SSCCLoadingCheckRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sscc.SSCCLoadingCheckRequest;
  return proto.sscc.SSCCLoadingCheckRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sscc.SSCCLoadingCheckRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sscc.SSCCLoadingCheckRequest}
 */
proto.sscc.SSCCLoadingCheckRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSscc(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sscc.SSCCLoadingCheckRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sscc.SSCCLoadingCheckRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sscc.SSCCLoadingCheckRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCLoadingCheckRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSscc();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string sscc = 1;
 * @return {string}
 */
proto.sscc.SSCCLoadingCheckRequest.prototype.getSscc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCLoadingCheckRequest} returns this
 */
proto.sscc.SSCCLoadingCheckRequest.prototype.setSscc = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.sscc.SSCCLoadingCheckRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCLoadingCheckRequest} returns this
 */
proto.sscc.SSCCLoadingCheckRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sscc.SSCCLoadingCheckResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sscc.SSCCLoadingCheckResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sscc.SSCCLoadingCheckResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCLoadingCheckResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageError: jspb.Message.getFieldWithDefault(msg, 1, ""),
    isValid: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    isMissionEnded: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    isNeedReleased: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sscc.SSCCLoadingCheckResponse}
 */
proto.sscc.SSCCLoadingCheckResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sscc.SSCCLoadingCheckResponse;
  return proto.sscc.SSCCLoadingCheckResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sscc.SSCCLoadingCheckResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sscc.SSCCLoadingCheckResponse}
 */
proto.sscc.SSCCLoadingCheckResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageError(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsValid(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsMissionEnded(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsNeedReleased(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sscc.SSCCLoadingCheckResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sscc.SSCCLoadingCheckResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sscc.SSCCLoadingCheckResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCLoadingCheckResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageError();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsValid();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getIsMissionEnded();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getIsNeedReleased();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string message_error = 1;
 * @return {string}
 */
proto.sscc.SSCCLoadingCheckResponse.prototype.getMessageError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCLoadingCheckResponse} returns this
 */
proto.sscc.SSCCLoadingCheckResponse.prototype.setMessageError = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool is_valid = 2;
 * @return {boolean}
 */
proto.sscc.SSCCLoadingCheckResponse.prototype.getIsValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sscc.SSCCLoadingCheckResponse} returns this
 */
proto.sscc.SSCCLoadingCheckResponse.prototype.setIsValid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool is_mission_ended = 3;
 * @return {boolean}
 */
proto.sscc.SSCCLoadingCheckResponse.prototype.getIsMissionEnded = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sscc.SSCCLoadingCheckResponse} returns this
 */
proto.sscc.SSCCLoadingCheckResponse.prototype.setIsMissionEnded = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool is_need_released = 4;
 * @return {boolean}
 */
proto.sscc.SSCCLoadingCheckResponse.prototype.getIsNeedReleased = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sscc.SSCCLoadingCheckResponse} returns this
 */
proto.sscc.SSCCLoadingCheckResponse.prototype.setIsNeedReleased = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sscc.SSCCRegCheckRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sscc.SSCCRegCheckRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sscc.SSCCRegCheckRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCRegCheckRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sscc: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sscc.SSCCRegCheckRequest}
 */
proto.sscc.SSCCRegCheckRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sscc.SSCCRegCheckRequest;
  return proto.sscc.SSCCRegCheckRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sscc.SSCCRegCheckRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sscc.SSCCRegCheckRequest}
 */
proto.sscc.SSCCRegCheckRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSscc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sscc.SSCCRegCheckRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sscc.SSCCRegCheckRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sscc.SSCCRegCheckRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCRegCheckRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSscc();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string sscc = 1;
 * @return {string}
 */
proto.sscc.SSCCRegCheckRequest.prototype.getSscc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCRegCheckRequest} returns this
 */
proto.sscc.SSCCRegCheckRequest.prototype.setSscc = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sscc.SSCCRegCheckResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sscc.SSCCRegCheckResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sscc.SSCCRegCheckResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCRegCheckResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageError: jspb.Message.getFieldWithDefault(msg, 1, ""),
    isValid: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    stock: (f = msg.getStock()) && proto_stock_stock_pb.Stock.toObject(includeInstance, f),
    attFournisseur: (f = msg.getAttFournisseur()) && proto.sscc.AttFournisseur.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sscc.SSCCRegCheckResponse}
 */
proto.sscc.SSCCRegCheckResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sscc.SSCCRegCheckResponse;
  return proto.sscc.SSCCRegCheckResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sscc.SSCCRegCheckResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sscc.SSCCRegCheckResponse}
 */
proto.sscc.SSCCRegCheckResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageError(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsValid(value);
      break;
    case 3:
      var value = new proto_stock_stock_pb.Stock;
      reader.readMessage(value,proto_stock_stock_pb.Stock.deserializeBinaryFromReader);
      msg.setStock(value);
      break;
    case 4:
      var value = new proto.sscc.AttFournisseur;
      reader.readMessage(value,proto.sscc.AttFournisseur.deserializeBinaryFromReader);
      msg.setAttFournisseur(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sscc.SSCCRegCheckResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sscc.SSCCRegCheckResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sscc.SSCCRegCheckResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCRegCheckResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageError();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsValid();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getStock();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto_stock_stock_pb.Stock.serializeBinaryToWriter
    );
  }
  f = message.getAttFournisseur();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.sscc.AttFournisseur.serializeBinaryToWriter
    );
  }
};


/**
 * optional string message_error = 1;
 * @return {string}
 */
proto.sscc.SSCCRegCheckResponse.prototype.getMessageError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCRegCheckResponse} returns this
 */
proto.sscc.SSCCRegCheckResponse.prototype.setMessageError = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool is_valid = 2;
 * @return {boolean}
 */
proto.sscc.SSCCRegCheckResponse.prototype.getIsValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sscc.SSCCRegCheckResponse} returns this
 */
proto.sscc.SSCCRegCheckResponse.prototype.setIsValid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional stock.Stock stock = 3;
 * @return {?proto.stock.Stock}
 */
proto.sscc.SSCCRegCheckResponse.prototype.getStock = function() {
  return /** @type{?proto.stock.Stock} */ (
    jspb.Message.getWrapperField(this, proto_stock_stock_pb.Stock, 3));
};


/**
 * @param {?proto.stock.Stock|undefined} value
 * @return {!proto.sscc.SSCCRegCheckResponse} returns this
*/
proto.sscc.SSCCRegCheckResponse.prototype.setStock = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sscc.SSCCRegCheckResponse} returns this
 */
proto.sscc.SSCCRegCheckResponse.prototype.clearStock = function() {
  return this.setStock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sscc.SSCCRegCheckResponse.prototype.hasStock = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional AttFournisseur att_fournisseur = 4;
 * @return {?proto.sscc.AttFournisseur}
 */
proto.sscc.SSCCRegCheckResponse.prototype.getAttFournisseur = function() {
  return /** @type{?proto.sscc.AttFournisseur} */ (
    jspb.Message.getWrapperField(this, proto.sscc.AttFournisseur, 4));
};


/**
 * @param {?proto.sscc.AttFournisseur|undefined} value
 * @return {!proto.sscc.SSCCRegCheckResponse} returns this
*/
proto.sscc.SSCCRegCheckResponse.prototype.setAttFournisseur = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sscc.SSCCRegCheckResponse} returns this
 */
proto.sscc.SSCCRegCheckResponse.prototype.clearAttFournisseur = function() {
  return this.setAttFournisseur(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sscc.SSCCRegCheckResponse.prototype.hasAttFournisseur = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sscc.AttFournisseur.prototype.toObject = function(opt_includeInstance) {
  return proto.sscc.AttFournisseur.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sscc.AttFournisseur} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.AttFournisseur.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updateAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    codeNom: jspb.Message.getFieldWithDefault(msg, 4, ""),
    addresse: jspb.Message.getFieldWithDefault(msg, 5, ""),
    codePostal: jspb.Message.getFieldWithDefault(msg, 6, ""),
    ville: jspb.Message.getFieldWithDefault(msg, 7, ""),
    pays: jspb.Message.getFieldWithDefault(msg, 8, ""),
    iso: jspb.Message.getFieldWithDefault(msg, 9, ""),
    complement: jspb.Message.getFieldWithDefault(msg, 10, ""),
    contact: jspb.Message.getFieldWithDefault(msg, 11, ""),
    tel: jspb.Message.getFieldWithDefault(msg, 12, ""),
    mobile: jspb.Message.getFieldWithDefault(msg, 13, ""),
    email: jspb.Message.getFieldWithDefault(msg, 14, ""),
    attenduId: jspb.Message.getFieldWithDefault(msg, 15, ""),
    gln: jspb.Message.getFieldWithDefault(msg, 16, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sscc.AttFournisseur}
 */
proto.sscc.AttFournisseur.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sscc.AttFournisseur;
  return proto.sscc.AttFournisseur.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sscc.AttFournisseur} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sscc.AttFournisseur}
 */
proto.sscc.AttFournisseur.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodeNom(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddresse(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodePostal(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setVille(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPays(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setIso(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setComplement(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setContact(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setTel(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobile(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttenduId(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setGln(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sscc.AttFournisseur.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sscc.AttFournisseur.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sscc.AttFournisseur} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.AttFournisseur.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreateAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUpdateAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getCodeNom();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAddresse();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCodePostal();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getVille();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPays();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getIso();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getComplement();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getContact();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getTel();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getMobile();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getAttenduId();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getGln();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.sscc.AttFournisseur.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.AttFournisseur} returns this
 */
proto.sscc.AttFournisseur.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 create_at = 2;
 * @return {number}
 */
proto.sscc.AttFournisseur.prototype.getCreateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sscc.AttFournisseur} returns this
 */
proto.sscc.AttFournisseur.prototype.setCreateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 update_at = 3;
 * @return {number}
 */
proto.sscc.AttFournisseur.prototype.getUpdateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sscc.AttFournisseur} returns this
 */
proto.sscc.AttFournisseur.prototype.setUpdateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string code_nom = 4;
 * @return {string}
 */
proto.sscc.AttFournisseur.prototype.getCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.AttFournisseur} returns this
 */
proto.sscc.AttFournisseur.prototype.setCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string addresse = 5;
 * @return {string}
 */
proto.sscc.AttFournisseur.prototype.getAddresse = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.AttFournisseur} returns this
 */
proto.sscc.AttFournisseur.prototype.setAddresse = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string code_postal = 6;
 * @return {string}
 */
proto.sscc.AttFournisseur.prototype.getCodePostal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.AttFournisseur} returns this
 */
proto.sscc.AttFournisseur.prototype.setCodePostal = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string ville = 7;
 * @return {string}
 */
proto.sscc.AttFournisseur.prototype.getVille = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.AttFournisseur} returns this
 */
proto.sscc.AttFournisseur.prototype.setVille = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string pays = 8;
 * @return {string}
 */
proto.sscc.AttFournisseur.prototype.getPays = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.AttFournisseur} returns this
 */
proto.sscc.AttFournisseur.prototype.setPays = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string iso = 9;
 * @return {string}
 */
proto.sscc.AttFournisseur.prototype.getIso = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.AttFournisseur} returns this
 */
proto.sscc.AttFournisseur.prototype.setIso = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string complement = 10;
 * @return {string}
 */
proto.sscc.AttFournisseur.prototype.getComplement = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.AttFournisseur} returns this
 */
proto.sscc.AttFournisseur.prototype.setComplement = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string contact = 11;
 * @return {string}
 */
proto.sscc.AttFournisseur.prototype.getContact = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.AttFournisseur} returns this
 */
proto.sscc.AttFournisseur.prototype.setContact = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string tel = 12;
 * @return {string}
 */
proto.sscc.AttFournisseur.prototype.getTel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.AttFournisseur} returns this
 */
proto.sscc.AttFournisseur.prototype.setTel = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string mobile = 13;
 * @return {string}
 */
proto.sscc.AttFournisseur.prototype.getMobile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.AttFournisseur} returns this
 */
proto.sscc.AttFournisseur.prototype.setMobile = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string email = 14;
 * @return {string}
 */
proto.sscc.AttFournisseur.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.AttFournisseur} returns this
 */
proto.sscc.AttFournisseur.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string attendu_id = 15;
 * @return {string}
 */
proto.sscc.AttFournisseur.prototype.getAttenduId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.AttFournisseur} returns this
 */
proto.sscc.AttFournisseur.prototype.setAttenduId = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string gln = 16;
 * @return {string}
 */
proto.sscc.AttFournisseur.prototype.getGln = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.AttFournisseur} returns this
 */
proto.sscc.AttFournisseur.prototype.setGln = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sscc.SSCCReapproCheckRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sscc.SSCCReapproCheckRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sscc.SSCCReapproCheckRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCReapproCheckRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sscc: jspb.Message.getFieldWithDefault(msg, 1, ""),
    missionId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sscc.SSCCReapproCheckRequest}
 */
proto.sscc.SSCCReapproCheckRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sscc.SSCCReapproCheckRequest;
  return proto.sscc.SSCCReapproCheckRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sscc.SSCCReapproCheckRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sscc.SSCCReapproCheckRequest}
 */
proto.sscc.SSCCReapproCheckRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSscc(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMissionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sscc.SSCCReapproCheckRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sscc.SSCCReapproCheckRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sscc.SSCCReapproCheckRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCReapproCheckRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSscc();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMissionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string sscc = 1;
 * @return {string}
 */
proto.sscc.SSCCReapproCheckRequest.prototype.getSscc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCReapproCheckRequest} returns this
 */
proto.sscc.SSCCReapproCheckRequest.prototype.setSscc = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string mission_id = 2;
 * @return {string}
 */
proto.sscc.SSCCReapproCheckRequest.prototype.getMissionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCReapproCheckRequest} returns this
 */
proto.sscc.SSCCReapproCheckRequest.prototype.setMissionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sscc.SSCCReapproCheckResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sscc.SSCCReapproCheckResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sscc.SSCCReapproCheckResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCReapproCheckResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageError: jspb.Message.getFieldWithDefault(msg, 1, ""),
    isValid: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sscc.SSCCReapproCheckResponse}
 */
proto.sscc.SSCCReapproCheckResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sscc.SSCCReapproCheckResponse;
  return proto.sscc.SSCCReapproCheckResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sscc.SSCCReapproCheckResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sscc.SSCCReapproCheckResponse}
 */
proto.sscc.SSCCReapproCheckResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageError(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsValid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sscc.SSCCReapproCheckResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sscc.SSCCReapproCheckResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sscc.SSCCReapproCheckResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCReapproCheckResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageError();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsValid();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string message_error = 1;
 * @return {string}
 */
proto.sscc.SSCCReapproCheckResponse.prototype.getMessageError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCReapproCheckResponse} returns this
 */
proto.sscc.SSCCReapproCheckResponse.prototype.setMessageError = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool is_valid = 2;
 * @return {boolean}
 */
proto.sscc.SSCCReapproCheckResponse.prototype.getIsValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sscc.SSCCReapproCheckResponse} returns this
 */
proto.sscc.SSCCReapproCheckResponse.prototype.setIsValid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sscc.FindSsccInStockRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sscc.FindSsccInStockRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sscc.FindSsccInStockRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.FindSsccInStockRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sscc: jspb.Message.getFieldWithDefault(msg, 1, ""),
    referenceId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    companyId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    warehouseId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    clientId: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sscc.FindSsccInStockRequest}
 */
proto.sscc.FindSsccInStockRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sscc.FindSsccInStockRequest;
  return proto.sscc.FindSsccInStockRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sscc.FindSsccInStockRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sscc.FindSsccInStockRequest}
 */
proto.sscc.FindSsccInStockRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSscc(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sscc.FindSsccInStockRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sscc.FindSsccInStockRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sscc.FindSsccInStockRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.FindSsccInStockRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSscc();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReferenceId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWarehouseId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string sscc = 1;
 * @return {string}
 */
proto.sscc.FindSsccInStockRequest.prototype.getSscc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.FindSsccInStockRequest} returns this
 */
proto.sscc.FindSsccInStockRequest.prototype.setSscc = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string reference_id = 2;
 * @return {string}
 */
proto.sscc.FindSsccInStockRequest.prototype.getReferenceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.FindSsccInStockRequest} returns this
 */
proto.sscc.FindSsccInStockRequest.prototype.setReferenceId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string company_id = 3;
 * @return {string}
 */
proto.sscc.FindSsccInStockRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.FindSsccInStockRequest} returns this
 */
proto.sscc.FindSsccInStockRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string warehouse_id = 4;
 * @return {string}
 */
proto.sscc.FindSsccInStockRequest.prototype.getWarehouseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.FindSsccInStockRequest} returns this
 */
proto.sscc.FindSsccInStockRequest.prototype.setWarehouseId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string client_id = 5;
 * @return {string}
 */
proto.sscc.FindSsccInStockRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.FindSsccInStockRequest} returns this
 */
proto.sscc.FindSsccInStockRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sscc.FindSsccInStockResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sscc.FindSsccInStockResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sscc.FindSsccInStockResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sscc.FindSsccInStockResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.FindSsccInStockResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto_stock_stock_pb.Stock.toObject, includeInstance),
    messageerror: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sscc.FindSsccInStockResponse}
 */
proto.sscc.FindSsccInStockResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sscc.FindSsccInStockResponse;
  return proto.sscc.FindSsccInStockResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sscc.FindSsccInStockResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sscc.FindSsccInStockResponse}
 */
proto.sscc.FindSsccInStockResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_stock_stock_pb.Stock;
      reader.readMessage(value,proto_stock_stock_pb.Stock.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sscc.FindSsccInStockResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sscc.FindSsccInStockResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sscc.FindSsccInStockResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.FindSsccInStockResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto_stock_stock_pb.Stock.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated stock.Stock entry = 1;
 * @return {!Array<!proto.stock.Stock>}
 */
proto.sscc.FindSsccInStockResponse.prototype.getEntryList = function() {
  return /** @type{!Array<!proto.stock.Stock>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_stock_stock_pb.Stock, 1));
};


/**
 * @param {!Array<!proto.stock.Stock>} value
 * @return {!proto.sscc.FindSsccInStockResponse} returns this
*/
proto.sscc.FindSsccInStockResponse.prototype.setEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.stock.Stock=} opt_value
 * @param {number=} opt_index
 * @return {!proto.stock.Stock}
 */
proto.sscc.FindSsccInStockResponse.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.stock.Stock, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sscc.FindSsccInStockResponse} returns this
 */
proto.sscc.FindSsccInStockResponse.prototype.clearEntryList = function() {
  return this.setEntryList([]);
};


/**
 * optional string messageError = 2;
 * @return {string}
 */
proto.sscc.FindSsccInStockResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.FindSsccInStockResponse} returns this
 */
proto.sscc.FindSsccInStockResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sscc.MetaData.prototype.toObject = function(opt_includeInstance) {
  return proto.sscc.MetaData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sscc.MetaData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.MetaData.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    total: jspb.Message.getFieldWithDefault(msg, 4, 0),
    countHistory: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sscc.MetaData}
 */
proto.sscc.MetaData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sscc.MetaData;
  return proto.sscc.MetaData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sscc.MetaData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sscc.MetaData}
 */
proto.sscc.MetaData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotal(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCountHistory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sscc.MetaData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sscc.MetaData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sscc.MetaData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.MetaData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getCountHistory();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional int64 count = 1;
 * @return {number}
 */
proto.sscc.MetaData.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sscc.MetaData} returns this
 */
proto.sscc.MetaData.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.sscc.MetaData.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sscc.MetaData} returns this
 */
proto.sscc.MetaData.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 limit = 3;
 * @return {number}
 */
proto.sscc.MetaData.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sscc.MetaData} returns this
 */
proto.sscc.MetaData.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 total = 4;
 * @return {number}
 */
proto.sscc.MetaData.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.sscc.MetaData} returns this
 */
proto.sscc.MetaData.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 count_history = 5;
 * @return {number}
 */
proto.sscc.MetaData.prototype.getCountHistory = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.sscc.MetaData} returns this
 */
proto.sscc.MetaData.prototype.setCountHistory = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sscc.SSCCHistory.prototype.toObject = function(opt_includeInstance) {
  return proto.sscc.SSCCHistory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sscc.SSCCHistory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCHistory.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    movementType: jspb.Message.getFieldWithDefault(msg, 3, ""),
    movementState: jspb.Message.getFieldWithDefault(msg, 4, ""),
    objectType: jspb.Message.getFieldWithDefault(msg, 5, ""),
    objectId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    code: jspb.Message.getFieldWithDefault(msg, 7, ""),
    description: jspb.Message.getFieldWithDefault(msg, 8, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 9, ""),
    sscc: jspb.Message.getFieldWithDefault(msg, 10, ""),
    clientCodeNom: jspb.Message.getFieldWithDefault(msg, 11, ""),
    companyCodeNom: jspb.Message.getFieldWithDefault(msg, 12, ""),
    warehouseCodeNom: jspb.Message.getFieldWithDefault(msg, 13, ""),
    chrono: jspb.Message.getFieldWithDefault(msg, 14, ""),
    action: jspb.Message.getFieldWithDefault(msg, 15, ""),
    locationAddress: jspb.Message.getFieldWithDefault(msg, 16, ""),
    referenceNumber: jspb.Message.getFieldWithDefault(msg, 17, ""),
    libelle: jspb.Message.getFieldWithDefault(msg, 18, ""),
    eventType: jspb.Message.getFieldWithDefault(msg, 19, ""),
    userName: jspb.Message.getFieldWithDefault(msg, 20, ""),
    objectNumber: jspb.Message.getFieldWithDefault(msg, 21, ""),
    qte: jspb.Message.getFieldWithDefault(msg, 22, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sscc.SSCCHistory}
 */
proto.sscc.SSCCHistory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sscc.SSCCHistory;
  return proto.sscc.SSCCHistory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sscc.SSCCHistory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sscc.SSCCHistory}
 */
proto.sscc.SSCCHistory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMovementType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMovementState(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setSscc(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientCodeNom(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyCodeNom(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseCodeNom(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setChrono(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setAction(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationAddress(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceNumber(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setLibelle(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventType(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectNumber(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQte(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sscc.SSCCHistory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sscc.SSCCHistory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sscc.SSCCHistory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.SSCCHistory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getMovementType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMovementState();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getObjectType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getObjectId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getSscc();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getClientCodeNom();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getCompanyCodeNom();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getWarehouseCodeNom();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getChrono();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getAction();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getLocationAddress();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getReferenceNumber();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getLibelle();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getEventType();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getObjectNumber();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getQte();
  if (f !== 0) {
    writer.writeInt64(
      22,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.sscc.SSCCHistory.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCHistory} returns this
 */
proto.sscc.SSCCHistory.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 created_at = 2;
 * @return {number}
 */
proto.sscc.SSCCHistory.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sscc.SSCCHistory} returns this
 */
proto.sscc.SSCCHistory.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string movement_type = 3;
 * @return {string}
 */
proto.sscc.SSCCHistory.prototype.getMovementType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCHistory} returns this
 */
proto.sscc.SSCCHistory.prototype.setMovementType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string movement_state = 4;
 * @return {string}
 */
proto.sscc.SSCCHistory.prototype.getMovementState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCHistory} returns this
 */
proto.sscc.SSCCHistory.prototype.setMovementState = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string object_type = 5;
 * @return {string}
 */
proto.sscc.SSCCHistory.prototype.getObjectType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCHistory} returns this
 */
proto.sscc.SSCCHistory.prototype.setObjectType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string object_id = 6;
 * @return {string}
 */
proto.sscc.SSCCHistory.prototype.getObjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCHistory} returns this
 */
proto.sscc.SSCCHistory.prototype.setObjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string code = 7;
 * @return {string}
 */
proto.sscc.SSCCHistory.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCHistory} returns this
 */
proto.sscc.SSCCHistory.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string description = 8;
 * @return {string}
 */
proto.sscc.SSCCHistory.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCHistory} returns this
 */
proto.sscc.SSCCHistory.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string user_id = 9;
 * @return {string}
 */
proto.sscc.SSCCHistory.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCHistory} returns this
 */
proto.sscc.SSCCHistory.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string sscc = 10;
 * @return {string}
 */
proto.sscc.SSCCHistory.prototype.getSscc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCHistory} returns this
 */
proto.sscc.SSCCHistory.prototype.setSscc = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string client_code_nom = 11;
 * @return {string}
 */
proto.sscc.SSCCHistory.prototype.getClientCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCHistory} returns this
 */
proto.sscc.SSCCHistory.prototype.setClientCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string company_code_nom = 12;
 * @return {string}
 */
proto.sscc.SSCCHistory.prototype.getCompanyCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCHistory} returns this
 */
proto.sscc.SSCCHistory.prototype.setCompanyCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string warehouse_code_nom = 13;
 * @return {string}
 */
proto.sscc.SSCCHistory.prototype.getWarehouseCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCHistory} returns this
 */
proto.sscc.SSCCHistory.prototype.setWarehouseCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string chrono = 14;
 * @return {string}
 */
proto.sscc.SSCCHistory.prototype.getChrono = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCHistory} returns this
 */
proto.sscc.SSCCHistory.prototype.setChrono = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string action = 15;
 * @return {string}
 */
proto.sscc.SSCCHistory.prototype.getAction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCHistory} returns this
 */
proto.sscc.SSCCHistory.prototype.setAction = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string location_address = 16;
 * @return {string}
 */
proto.sscc.SSCCHistory.prototype.getLocationAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCHistory} returns this
 */
proto.sscc.SSCCHistory.prototype.setLocationAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string reference_number = 17;
 * @return {string}
 */
proto.sscc.SSCCHistory.prototype.getReferenceNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCHistory} returns this
 */
proto.sscc.SSCCHistory.prototype.setReferenceNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string libelle = 18;
 * @return {string}
 */
proto.sscc.SSCCHistory.prototype.getLibelle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCHistory} returns this
 */
proto.sscc.SSCCHistory.prototype.setLibelle = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string event_type = 19;
 * @return {string}
 */
proto.sscc.SSCCHistory.prototype.getEventType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCHistory} returns this
 */
proto.sscc.SSCCHistory.prototype.setEventType = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string user_name = 20;
 * @return {string}
 */
proto.sscc.SSCCHistory.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCHistory} returns this
 */
proto.sscc.SSCCHistory.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string object_number = 21;
 * @return {string}
 */
proto.sscc.SSCCHistory.prototype.getObjectNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.SSCCHistory} returns this
 */
proto.sscc.SSCCHistory.prototype.setObjectNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional int64 qte = 22;
 * @return {number}
 */
proto.sscc.SSCCHistory.prototype.getQte = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.sscc.SSCCHistory} returns this
 */
proto.sscc.SSCCHistory.prototype.setQte = function(value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sscc.GetHistoryBySSCCNumberRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sscc.GetHistoryBySSCCNumberRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sscc.GetHistoryBySSCCNumberRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.GetHistoryBySSCCNumberRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sscc: jspb.Message.getFieldWithDefault(msg, 1, ""),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 3, 0),
    from: jspb.Message.getFieldWithDefault(msg, 4, 0),
    to: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sscc.GetHistoryBySSCCNumberRequest}
 */
proto.sscc.GetHistoryBySSCCNumberRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sscc.GetHistoryBySSCCNumberRequest;
  return proto.sscc.GetHistoryBySSCCNumberRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sscc.GetHistoryBySSCCNumberRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sscc.GetHistoryBySSCCNumberRequest}
 */
proto.sscc.GetHistoryBySSCCNumberRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSscc(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFrom(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sscc.GetHistoryBySSCCNumberRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sscc.GetHistoryBySSCCNumberRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sscc.GetHistoryBySSCCNumberRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.GetHistoryBySSCCNumberRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSscc();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional string sscc = 1;
 * @return {string}
 */
proto.sscc.GetHistoryBySSCCNumberRequest.prototype.getSscc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.GetHistoryBySSCCNumberRequest} returns this
 */
proto.sscc.GetHistoryBySSCCNumberRequest.prototype.setSscc = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 limit = 2;
 * @return {number}
 */
proto.sscc.GetHistoryBySSCCNumberRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sscc.GetHistoryBySSCCNumberRequest} returns this
 */
proto.sscc.GetHistoryBySSCCNumberRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 offset = 3;
 * @return {number}
 */
proto.sscc.GetHistoryBySSCCNumberRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sscc.GetHistoryBySSCCNumberRequest} returns this
 */
proto.sscc.GetHistoryBySSCCNumberRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 from = 4;
 * @return {number}
 */
proto.sscc.GetHistoryBySSCCNumberRequest.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.sscc.GetHistoryBySSCCNumberRequest} returns this
 */
proto.sscc.GetHistoryBySSCCNumberRequest.prototype.setFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 to = 5;
 * @return {number}
 */
proto.sscc.GetHistoryBySSCCNumberRequest.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.sscc.GetHistoryBySSCCNumberRequest} returns this
 */
proto.sscc.GetHistoryBySSCCNumberRequest.prototype.setTo = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sscc.GetHistoryBySSCCNumberResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sscc.GetHistoryBySSCCNumberResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sscc.GetHistoryBySSCCNumberResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sscc.GetHistoryBySSCCNumberResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.GetHistoryBySSCCNumberResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto.sscc.SSCCHistory.toObject, includeInstance),
    metadata: (f = msg.getMetadata()) && proto.sscc.MetaData.toObject(includeInstance, f),
    messageerror: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sscc.GetHistoryBySSCCNumberResponse}
 */
proto.sscc.GetHistoryBySSCCNumberResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sscc.GetHistoryBySSCCNumberResponse;
  return proto.sscc.GetHistoryBySSCCNumberResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sscc.GetHistoryBySSCCNumberResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sscc.GetHistoryBySSCCNumberResponse}
 */
proto.sscc.GetHistoryBySSCCNumberResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sscc.SSCCHistory;
      reader.readMessage(value,proto.sscc.SSCCHistory.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    case 2:
      var value = new proto.sscc.MetaData;
      reader.readMessage(value,proto.sscc.MetaData.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sscc.GetHistoryBySSCCNumberResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sscc.GetHistoryBySSCCNumberResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sscc.GetHistoryBySSCCNumberResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sscc.GetHistoryBySSCCNumberResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.sscc.SSCCHistory.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.sscc.MetaData.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated SSCCHistory entry = 1;
 * @return {!Array<!proto.sscc.SSCCHistory>}
 */
proto.sscc.GetHistoryBySSCCNumberResponse.prototype.getEntryList = function() {
  return /** @type{!Array<!proto.sscc.SSCCHistory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sscc.SSCCHistory, 1));
};


/**
 * @param {!Array<!proto.sscc.SSCCHistory>} value
 * @return {!proto.sscc.GetHistoryBySSCCNumberResponse} returns this
*/
proto.sscc.GetHistoryBySSCCNumberResponse.prototype.setEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sscc.SSCCHistory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sscc.SSCCHistory}
 */
proto.sscc.GetHistoryBySSCCNumberResponse.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sscc.SSCCHistory, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sscc.GetHistoryBySSCCNumberResponse} returns this
 */
proto.sscc.GetHistoryBySSCCNumberResponse.prototype.clearEntryList = function() {
  return this.setEntryList([]);
};


/**
 * optional MetaData metadata = 2;
 * @return {?proto.sscc.MetaData}
 */
proto.sscc.GetHistoryBySSCCNumberResponse.prototype.getMetadata = function() {
  return /** @type{?proto.sscc.MetaData} */ (
    jspb.Message.getWrapperField(this, proto.sscc.MetaData, 2));
};


/**
 * @param {?proto.sscc.MetaData|undefined} value
 * @return {!proto.sscc.GetHistoryBySSCCNumberResponse} returns this
*/
proto.sscc.GetHistoryBySSCCNumberResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sscc.GetHistoryBySSCCNumberResponse} returns this
 */
proto.sscc.GetHistoryBySSCCNumberResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sscc.GetHistoryBySSCCNumberResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string messageError = 3;
 * @return {string}
 */
proto.sscc.GetHistoryBySSCCNumberResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sscc.GetHistoryBySSCCNumberResponse} returns this
 */
proto.sscc.GetHistoryBySSCCNumberResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


goog.object.extend(exports, proto.sscc);
