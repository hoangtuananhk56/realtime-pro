/**
 * @fileoverview gRPC-Web generated client stub for sscc
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.21.12
// source: proto/sscc/sscc.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as proto_sscc_sscc_pb from '../../proto/sscc/sscc_pb'; // proto import: "proto/sscc/sscc.proto"


export class SSCCServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCheckDuplicateNumber = new grpcWeb.MethodDescriptor(
    '/sscc.SSCCService/CheckDuplicateNumber',
    grpcWeb.MethodType.UNARY,
    proto_sscc_sscc_pb.SSCCNumber,
    proto_sscc_sscc_pb.SSCCResponse,
    (request: proto_sscc_sscc_pb.SSCCNumber) => {
      return request.serializeBinary();
    },
    proto_sscc_sscc_pb.SSCCResponse.deserializeBinary
  );

  checkDuplicateNumber(
    request: proto_sscc_sscc_pb.SSCCNumber,
    metadata?: grpcWeb.Metadata | null): Promise<proto_sscc_sscc_pb.SSCCResponse>;

  checkDuplicateNumber(
    request: proto_sscc_sscc_pb.SSCCNumber,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_sscc_sscc_pb.SSCCResponse) => void): grpcWeb.ClientReadableStream<proto_sscc_sscc_pb.SSCCResponse>;

  checkDuplicateNumber(
    request: proto_sscc_sscc_pb.SSCCNumber,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_sscc_sscc_pb.SSCCResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/sscc.SSCCService/CheckDuplicateNumber',
        request,
        metadata || {},
        this.methodDescriptorCheckDuplicateNumber,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/sscc.SSCCService/CheckDuplicateNumber',
    request,
    metadata || {},
    this.methodDescriptorCheckDuplicateNumber);
  }

  methodDescriptorDeleteNumber = new grpcWeb.MethodDescriptor(
    '/sscc.SSCCService/DeleteNumber',
    grpcWeb.MethodType.UNARY,
    proto_sscc_sscc_pb.SSCCNumber,
    proto_sscc_sscc_pb.SSCCResponse,
    (request: proto_sscc_sscc_pb.SSCCNumber) => {
      return request.serializeBinary();
    },
    proto_sscc_sscc_pb.SSCCResponse.deserializeBinary
  );

  deleteNumber(
    request: proto_sscc_sscc_pb.SSCCNumber,
    metadata?: grpcWeb.Metadata | null): Promise<proto_sscc_sscc_pb.SSCCResponse>;

  deleteNumber(
    request: proto_sscc_sscc_pb.SSCCNumber,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_sscc_sscc_pb.SSCCResponse) => void): grpcWeb.ClientReadableStream<proto_sscc_sscc_pb.SSCCResponse>;

  deleteNumber(
    request: proto_sscc_sscc_pb.SSCCNumber,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_sscc_sscc_pb.SSCCResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/sscc.SSCCService/DeleteNumber',
        request,
        metadata || {},
        this.methodDescriptorDeleteNumber,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/sscc.SSCCService/DeleteNumber',
    request,
    metadata || {},
    this.methodDescriptorDeleteNumber);
  }

  methodDescriptorSSCCGenerator = new grpcWeb.MethodDescriptor(
    '/sscc.SSCCService/SSCCGenerator',
    grpcWeb.MethodType.UNARY,
    proto_sscc_sscc_pb.SSCCGeneratorRequest,
    proto_sscc_sscc_pb.SSCCGeneratorRespponse,
    (request: proto_sscc_sscc_pb.SSCCGeneratorRequest) => {
      return request.serializeBinary();
    },
    proto_sscc_sscc_pb.SSCCGeneratorRespponse.deserializeBinary
  );

  sSCCGenerator(
    request: proto_sscc_sscc_pb.SSCCGeneratorRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_sscc_sscc_pb.SSCCGeneratorRespponse>;

  sSCCGenerator(
    request: proto_sscc_sscc_pb.SSCCGeneratorRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_sscc_sscc_pb.SSCCGeneratorRespponse) => void): grpcWeb.ClientReadableStream<proto_sscc_sscc_pb.SSCCGeneratorRespponse>;

  sSCCGenerator(
    request: proto_sscc_sscc_pb.SSCCGeneratorRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_sscc_sscc_pb.SSCCGeneratorRespponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/sscc.SSCCService/SSCCGenerator',
        request,
        metadata || {},
        this.methodDescriptorSSCCGenerator,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/sscc.SSCCService/SSCCGenerator',
    request,
    metadata || {},
    this.methodDescriptorSSCCGenerator);
  }

  methodDescriptorSSCCLocationCheck = new grpcWeb.MethodDescriptor(
    '/sscc.SSCCService/SSCCLocationCheck',
    grpcWeb.MethodType.UNARY,
    proto_sscc_sscc_pb.SSCCLocationCheckRequest,
    proto_sscc_sscc_pb.SSCCLocationCheckResponse,
    (request: proto_sscc_sscc_pb.SSCCLocationCheckRequest) => {
      return request.serializeBinary();
    },
    proto_sscc_sscc_pb.SSCCLocationCheckResponse.deserializeBinary
  );

  sSCCLocationCheck(
    request: proto_sscc_sscc_pb.SSCCLocationCheckRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_sscc_sscc_pb.SSCCLocationCheckResponse>;

  sSCCLocationCheck(
    request: proto_sscc_sscc_pb.SSCCLocationCheckRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_sscc_sscc_pb.SSCCLocationCheckResponse) => void): grpcWeb.ClientReadableStream<proto_sscc_sscc_pb.SSCCLocationCheckResponse>;

  sSCCLocationCheck(
    request: proto_sscc_sscc_pb.SSCCLocationCheckRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_sscc_sscc_pb.SSCCLocationCheckResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/sscc.SSCCService/SSCCLocationCheck',
        request,
        metadata || {},
        this.methodDescriptorSSCCLocationCheck,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/sscc.SSCCService/SSCCLocationCheck',
    request,
    metadata || {},
    this.methodDescriptorSSCCLocationCheck);
  }

  methodDescriptorSSCCPickingCheck = new grpcWeb.MethodDescriptor(
    '/sscc.SSCCService/SSCCPickingCheck',
    grpcWeb.MethodType.UNARY,
    proto_sscc_sscc_pb.SSCCLocationCheckRequest,
    proto_sscc_sscc_pb.SSCCLocationCheckResponse,
    (request: proto_sscc_sscc_pb.SSCCLocationCheckRequest) => {
      return request.serializeBinary();
    },
    proto_sscc_sscc_pb.SSCCLocationCheckResponse.deserializeBinary
  );

  sSCCPickingCheck(
    request: proto_sscc_sscc_pb.SSCCLocationCheckRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_sscc_sscc_pb.SSCCLocationCheckResponse>;

  sSCCPickingCheck(
    request: proto_sscc_sscc_pb.SSCCLocationCheckRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_sscc_sscc_pb.SSCCLocationCheckResponse) => void): grpcWeb.ClientReadableStream<proto_sscc_sscc_pb.SSCCLocationCheckResponse>;

  sSCCPickingCheck(
    request: proto_sscc_sscc_pb.SSCCLocationCheckRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_sscc_sscc_pb.SSCCLocationCheckResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/sscc.SSCCService/SSCCPickingCheck',
        request,
        metadata || {},
        this.methodDescriptorSSCCPickingCheck,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/sscc.SSCCService/SSCCPickingCheck',
    request,
    metadata || {},
    this.methodDescriptorSSCCPickingCheck);
  }

  methodDescriptorSSCCMovementCheck = new grpcWeb.MethodDescriptor(
    '/sscc.SSCCService/SSCCMovementCheck',
    grpcWeb.MethodType.UNARY,
    proto_sscc_sscc_pb.SSCCMovementCheckRequest,
    proto_sscc_sscc_pb.SSCCMovementCheckResponse,
    (request: proto_sscc_sscc_pb.SSCCMovementCheckRequest) => {
      return request.serializeBinary();
    },
    proto_sscc_sscc_pb.SSCCMovementCheckResponse.deserializeBinary
  );

  sSCCMovementCheck(
    request: proto_sscc_sscc_pb.SSCCMovementCheckRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_sscc_sscc_pb.SSCCMovementCheckResponse>;

  sSCCMovementCheck(
    request: proto_sscc_sscc_pb.SSCCMovementCheckRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_sscc_sscc_pb.SSCCMovementCheckResponse) => void): grpcWeb.ClientReadableStream<proto_sscc_sscc_pb.SSCCMovementCheckResponse>;

  sSCCMovementCheck(
    request: proto_sscc_sscc_pb.SSCCMovementCheckRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_sscc_sscc_pb.SSCCMovementCheckResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/sscc.SSCCService/SSCCMovementCheck',
        request,
        metadata || {},
        this.methodDescriptorSSCCMovementCheck,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/sscc.SSCCService/SSCCMovementCheck',
    request,
    metadata || {},
    this.methodDescriptorSSCCMovementCheck);
  }

  methodDescriptorSSCCLoadingCheck = new grpcWeb.MethodDescriptor(
    '/sscc.SSCCService/SSCCLoadingCheck',
    grpcWeb.MethodType.UNARY,
    proto_sscc_sscc_pb.SSCCLoadingCheckRequest,
    proto_sscc_sscc_pb.SSCCLoadingCheckResponse,
    (request: proto_sscc_sscc_pb.SSCCLoadingCheckRequest) => {
      return request.serializeBinary();
    },
    proto_sscc_sscc_pb.SSCCLoadingCheckResponse.deserializeBinary
  );

  sSCCLoadingCheck(
    request: proto_sscc_sscc_pb.SSCCLoadingCheckRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_sscc_sscc_pb.SSCCLoadingCheckResponse>;

  sSCCLoadingCheck(
    request: proto_sscc_sscc_pb.SSCCLoadingCheckRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_sscc_sscc_pb.SSCCLoadingCheckResponse) => void): grpcWeb.ClientReadableStream<proto_sscc_sscc_pb.SSCCLoadingCheckResponse>;

  sSCCLoadingCheck(
    request: proto_sscc_sscc_pb.SSCCLoadingCheckRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_sscc_sscc_pb.SSCCLoadingCheckResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/sscc.SSCCService/SSCCLoadingCheck',
        request,
        metadata || {},
        this.methodDescriptorSSCCLoadingCheck,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/sscc.SSCCService/SSCCLoadingCheck',
    request,
    metadata || {},
    this.methodDescriptorSSCCLoadingCheck);
  }

  methodDescriptorSSCCRegularizationCheck = new grpcWeb.MethodDescriptor(
    '/sscc.SSCCService/SSCCRegularizationCheck',
    grpcWeb.MethodType.UNARY,
    proto_sscc_sscc_pb.SSCCRegCheckRequest,
    proto_sscc_sscc_pb.SSCCRegCheckResponse,
    (request: proto_sscc_sscc_pb.SSCCRegCheckRequest) => {
      return request.serializeBinary();
    },
    proto_sscc_sscc_pb.SSCCRegCheckResponse.deserializeBinary
  );

  sSCCRegularizationCheck(
    request: proto_sscc_sscc_pb.SSCCRegCheckRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_sscc_sscc_pb.SSCCRegCheckResponse>;

  sSCCRegularizationCheck(
    request: proto_sscc_sscc_pb.SSCCRegCheckRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_sscc_sscc_pb.SSCCRegCheckResponse) => void): grpcWeb.ClientReadableStream<proto_sscc_sscc_pb.SSCCRegCheckResponse>;

  sSCCRegularizationCheck(
    request: proto_sscc_sscc_pb.SSCCRegCheckRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_sscc_sscc_pb.SSCCRegCheckResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/sscc.SSCCService/SSCCRegularizationCheck',
        request,
        metadata || {},
        this.methodDescriptorSSCCRegularizationCheck,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/sscc.SSCCService/SSCCRegularizationCheck',
    request,
    metadata || {},
    this.methodDescriptorSSCCRegularizationCheck);
  }

  methodDescriptorSSCCReapproCheck = new grpcWeb.MethodDescriptor(
    '/sscc.SSCCService/SSCCReapproCheck',
    grpcWeb.MethodType.UNARY,
    proto_sscc_sscc_pb.SSCCReapproCheckRequest,
    proto_sscc_sscc_pb.SSCCReapproCheckResponse,
    (request: proto_sscc_sscc_pb.SSCCReapproCheckRequest) => {
      return request.serializeBinary();
    },
    proto_sscc_sscc_pb.SSCCReapproCheckResponse.deserializeBinary
  );

  sSCCReapproCheck(
    request: proto_sscc_sscc_pb.SSCCReapproCheckRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_sscc_sscc_pb.SSCCReapproCheckResponse>;

  sSCCReapproCheck(
    request: proto_sscc_sscc_pb.SSCCReapproCheckRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_sscc_sscc_pb.SSCCReapproCheckResponse) => void): grpcWeb.ClientReadableStream<proto_sscc_sscc_pb.SSCCReapproCheckResponse>;

  sSCCReapproCheck(
    request: proto_sscc_sscc_pb.SSCCReapproCheckRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_sscc_sscc_pb.SSCCReapproCheckResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/sscc.SSCCService/SSCCReapproCheck',
        request,
        metadata || {},
        this.methodDescriptorSSCCReapproCheck,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/sscc.SSCCService/SSCCReapproCheck',
    request,
    metadata || {},
    this.methodDescriptorSSCCReapproCheck);
  }

  methodDescriptorFindSsccInStock = new grpcWeb.MethodDescriptor(
    '/sscc.SSCCService/FindSsccInStock',
    grpcWeb.MethodType.UNARY,
    proto_sscc_sscc_pb.FindSsccInStockRequest,
    proto_sscc_sscc_pb.FindSsccInStockResponse,
    (request: proto_sscc_sscc_pb.FindSsccInStockRequest) => {
      return request.serializeBinary();
    },
    proto_sscc_sscc_pb.FindSsccInStockResponse.deserializeBinary
  );

  findSsccInStock(
    request: proto_sscc_sscc_pb.FindSsccInStockRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_sscc_sscc_pb.FindSsccInStockResponse>;

  findSsccInStock(
    request: proto_sscc_sscc_pb.FindSsccInStockRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_sscc_sscc_pb.FindSsccInStockResponse) => void): grpcWeb.ClientReadableStream<proto_sscc_sscc_pb.FindSsccInStockResponse>;

  findSsccInStock(
    request: proto_sscc_sscc_pb.FindSsccInStockRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_sscc_sscc_pb.FindSsccInStockResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/sscc.SSCCService/FindSsccInStock',
        request,
        metadata || {},
        this.methodDescriptorFindSsccInStock,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/sscc.SSCCService/FindSsccInStock',
    request,
    metadata || {},
    this.methodDescriptorFindSsccInStock);
  }

  methodDescriptorGetHistoryBySSCCNumber = new grpcWeb.MethodDescriptor(
    '/sscc.SSCCService/GetHistoryBySSCCNumber',
    grpcWeb.MethodType.UNARY,
    proto_sscc_sscc_pb.GetHistoryBySSCCNumberRequest,
    proto_sscc_sscc_pb.GetHistoryBySSCCNumberResponse,
    (request: proto_sscc_sscc_pb.GetHistoryBySSCCNumberRequest) => {
      return request.serializeBinary();
    },
    proto_sscc_sscc_pb.GetHistoryBySSCCNumberResponse.deserializeBinary
  );

  getHistoryBySSCCNumber(
    request: proto_sscc_sscc_pb.GetHistoryBySSCCNumberRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_sscc_sscc_pb.GetHistoryBySSCCNumberResponse>;

  getHistoryBySSCCNumber(
    request: proto_sscc_sscc_pb.GetHistoryBySSCCNumberRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_sscc_sscc_pb.GetHistoryBySSCCNumberResponse) => void): grpcWeb.ClientReadableStream<proto_sscc_sscc_pb.GetHistoryBySSCCNumberResponse>;

  getHistoryBySSCCNumber(
    request: proto_sscc_sscc_pb.GetHistoryBySSCCNumberRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_sscc_sscc_pb.GetHistoryBySSCCNumberResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/sscc.SSCCService/GetHistoryBySSCCNumber',
        request,
        metadata || {},
        this.methodDescriptorGetHistoryBySSCCNumber,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/sscc.SSCCService/GetHistoryBySSCCNumber',
    request,
    metadata || {},
    this.methodDescriptorGetHistoryBySSCCNumber);
  }

}

