// source: proto/history/history.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var proto_reference_reference_pb = require('../../proto/reference/reference_pb.js');
goog.object.extend(proto, proto_reference_reference_pb);
goog.exportSymbol('proto.history.GetHistoryRequest', null, global);
goog.exportSymbol('proto.history.GetHistoryResponse', null, global);
goog.exportSymbol('proto.history.GetUserRequest', null, global);
goog.exportSymbol('proto.history.GetUserResponse', null, global);
goog.exportSymbol('proto.history.History', null, global);
goog.exportSymbol('proto.history.HistoryChange', null, global);
goog.exportSymbol('proto.history.MetaData', null, global);
goog.exportSymbol('proto.history.User', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.history.MetaData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.history.MetaData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.history.MetaData.displayName = 'proto.history.MetaData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.history.HistoryChange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.history.HistoryChange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.history.HistoryChange.displayName = 'proto.history.HistoryChange';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.history.History = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.history.History.repeatedFields_, null);
};
goog.inherits(proto.history.History, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.history.History.displayName = 'proto.history.History';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.history.GetHistoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.history.GetHistoryRequest.repeatedFields_, null);
};
goog.inherits(proto.history.GetHistoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.history.GetHistoryRequest.displayName = 'proto.history.GetHistoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.history.GetHistoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.history.GetHistoryResponse.repeatedFields_, null);
};
goog.inherits(proto.history.GetHistoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.history.GetHistoryResponse.displayName = 'proto.history.GetHistoryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.history.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.history.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.history.User.displayName = 'proto.history.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.history.GetUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.history.GetUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.history.GetUserRequest.displayName = 'proto.history.GetUserRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.history.GetUserResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.history.GetUserResponse.repeatedFields_, null);
};
goog.inherits(proto.history.GetUserResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.history.GetUserResponse.displayName = 'proto.history.GetUserResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.history.MetaData.prototype.toObject = function(opt_includeInstance) {
  return proto.history.MetaData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.history.MetaData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.history.MetaData.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    total: jspb.Message.getFieldWithDefault(msg, 4, 0),
    countHistory: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.history.MetaData}
 */
proto.history.MetaData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.history.MetaData;
  return proto.history.MetaData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.history.MetaData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.history.MetaData}
 */
proto.history.MetaData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotal(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCountHistory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.history.MetaData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.history.MetaData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.history.MetaData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.history.MetaData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getCountHistory();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional int64 count = 1;
 * @return {number}
 */
proto.history.MetaData.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.history.MetaData} returns this
 */
proto.history.MetaData.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.history.MetaData.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.history.MetaData} returns this
 */
proto.history.MetaData.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 limit = 3;
 * @return {number}
 */
proto.history.MetaData.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.history.MetaData} returns this
 */
proto.history.MetaData.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 total = 4;
 * @return {number}
 */
proto.history.MetaData.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.history.MetaData} returns this
 */
proto.history.MetaData.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 count_history = 5;
 * @return {number}
 */
proto.history.MetaData.prototype.getCountHistory = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.history.MetaData} returns this
 */
proto.history.MetaData.prototype.setCountHistory = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.history.HistoryChange.prototype.toObject = function(opt_includeInstance) {
  return proto.history.HistoryChange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.history.HistoryChange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.history.HistoryChange.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    field: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: jspb.Message.getFieldWithDefault(msg, 3, ""),
    oldValue: jspb.Message.getFieldWithDefault(msg, 4, ""),
    newValue: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.history.HistoryChange}
 */
proto.history.HistoryChange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.history.HistoryChange;
  return proto.history.HistoryChange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.history.HistoryChange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.history.HistoryChange}
 */
proto.history.HistoryChange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setField(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOldValue(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.history.HistoryChange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.history.HistoryChange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.history.HistoryChange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.history.HistoryChange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getField();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOldValue();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getNewValue();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string event_type = 1;
 * @return {string}
 */
proto.history.HistoryChange.prototype.getEventType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.HistoryChange} returns this
 */
proto.history.HistoryChange.prototype.setEventType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string field = 2;
 * @return {string}
 */
proto.history.HistoryChange.prototype.getField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.HistoryChange} returns this
 */
proto.history.HistoryChange.prototype.setField = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.history.HistoryChange.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.HistoryChange} returns this
 */
proto.history.HistoryChange.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string old_value = 4;
 * @return {string}
 */
proto.history.HistoryChange.prototype.getOldValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.HistoryChange} returns this
 */
proto.history.HistoryChange.prototype.setOldValue = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string new_value = 5;
 * @return {string}
 */
proto.history.HistoryChange.prototype.getNewValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.HistoryChange} returns this
 */
proto.history.HistoryChange.prototype.setNewValue = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.history.History.repeatedFields_ = [23];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.history.History.prototype.toObject = function(opt_includeInstance) {
  return proto.history.History.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.history.History} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.history.History.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    movementType: jspb.Message.getFieldWithDefault(msg, 3, ""),
    movementState: jspb.Message.getFieldWithDefault(msg, 4, ""),
    objectType: jspb.Message.getFieldWithDefault(msg, 5, ""),
    objectId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    objectNumber: jspb.Message.getFieldWithDefault(msg, 7, ""),
    code: jspb.Message.getFieldWithDefault(msg, 8, ""),
    description: jspb.Message.getFieldWithDefault(msg, 9, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 10, ""),
    sscc: jspb.Message.getFieldWithDefault(msg, 11, ""),
    qte: jspb.Message.getFieldWithDefault(msg, 12, 0),
    old: (f = msg.getOld()) && proto_reference_reference_pb.Reference.toObject(includeInstance, f),
    pb_new: (f = msg.getNew()) && proto_reference_reference_pb.Reference.toObject(includeInstance, f),
    clientCodeNom: jspb.Message.getFieldWithDefault(msg, 15, ""),
    companyCodeNom: jspb.Message.getFieldWithDefault(msg, 16, ""),
    warehouseCodeNom: jspb.Message.getFieldWithDefault(msg, 17, ""),
    chrono: jspb.Message.getFieldWithDefault(msg, 18, ""),
    action: jspb.Message.getFieldWithDefault(msg, 19, ""),
    locationAddress: jspb.Message.getFieldWithDefault(msg, 20, ""),
    eventType: jspb.Message.getFieldWithDefault(msg, 21, ""),
    objectSearchType: jspb.Message.getFieldWithDefault(msg, 22, ""),
    changesList: jspb.Message.toObjectList(msg.getChangesList(),
    proto.history.HistoryChange.toObject, includeInstance),
    userName: jspb.Message.getFieldWithDefault(msg, 24, ""),
    referenceNumber: jspb.Message.getFieldWithDefault(msg, 25, ""),
    missionId: jspb.Message.getFieldWithDefault(msg, 26, ""),
    previousLocation: jspb.Message.getFieldWithDefault(msg, 27, ""),
    currentLocation: jspb.Message.getFieldWithDefault(msg, 28, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.history.History}
 */
proto.history.History.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.history.History;
  return proto.history.History.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.history.History} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.history.History}
 */
proto.history.History.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMovementType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMovementState(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectNumber(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setSscc(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQte(value);
      break;
    case 13:
      var value = new proto_reference_reference_pb.Reference;
      reader.readMessage(value,proto_reference_reference_pb.Reference.deserializeBinaryFromReader);
      msg.setOld(value);
      break;
    case 14:
      var value = new proto_reference_reference_pb.Reference;
      reader.readMessage(value,proto_reference_reference_pb.Reference.deserializeBinaryFromReader);
      msg.setNew(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientCodeNom(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyCodeNom(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseCodeNom(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setChrono(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setAction(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationAddress(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventType(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectSearchType(value);
      break;
    case 23:
      var value = new proto.history.HistoryChange;
      reader.readMessage(value,proto.history.HistoryChange.deserializeBinaryFromReader);
      msg.addChanges(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceNumber(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setMissionId(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviousLocation(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentLocation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.history.History.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.history.History.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.history.History} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.history.History.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getMovementType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMovementState();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getObjectType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getObjectId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getObjectNumber();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getSscc();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getQte();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getOld();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto_reference_reference_pb.Reference.serializeBinaryToWriter
    );
  }
  f = message.getNew();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto_reference_reference_pb.Reference.serializeBinaryToWriter
    );
  }
  f = message.getClientCodeNom();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getCompanyCodeNom();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getWarehouseCodeNom();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getChrono();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getAction();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getLocationAddress();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getEventType();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getObjectSearchType();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getChangesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      23,
      f,
      proto.history.HistoryChange.serializeBinaryToWriter
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getReferenceNumber();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getMissionId();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getPreviousLocation();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getCurrentLocation();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.history.History.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 created_at = 2;
 * @return {number}
 */
proto.history.History.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string movement_type = 3;
 * @return {string}
 */
proto.history.History.prototype.getMovementType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.setMovementType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string movement_state = 4;
 * @return {string}
 */
proto.history.History.prototype.getMovementState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.setMovementState = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string object_type = 5;
 * @return {string}
 */
proto.history.History.prototype.getObjectType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.setObjectType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string object_id = 6;
 * @return {string}
 */
proto.history.History.prototype.getObjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.setObjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string object_number = 7;
 * @return {string}
 */
proto.history.History.prototype.getObjectNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.setObjectNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string code = 8;
 * @return {string}
 */
proto.history.History.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string description = 9;
 * @return {string}
 */
proto.history.History.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string user_id = 10;
 * @return {string}
 */
proto.history.History.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string sscc = 11;
 * @return {string}
 */
proto.history.History.prototype.getSscc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.setSscc = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional int64 qte = 12;
 * @return {number}
 */
proto.history.History.prototype.getQte = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.setQte = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional reference.Reference old = 13;
 * @return {?proto.reference.Reference}
 */
proto.history.History.prototype.getOld = function() {
  return /** @type{?proto.reference.Reference} */ (
    jspb.Message.getWrapperField(this, proto_reference_reference_pb.Reference, 13));
};


/**
 * @param {?proto.reference.Reference|undefined} value
 * @return {!proto.history.History} returns this
*/
proto.history.History.prototype.setOld = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.clearOld = function() {
  return this.setOld(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.history.History.prototype.hasOld = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional reference.Reference new = 14;
 * @return {?proto.reference.Reference}
 */
proto.history.History.prototype.getNew = function() {
  return /** @type{?proto.reference.Reference} */ (
    jspb.Message.getWrapperField(this, proto_reference_reference_pb.Reference, 14));
};


/**
 * @param {?proto.reference.Reference|undefined} value
 * @return {!proto.history.History} returns this
*/
proto.history.History.prototype.setNew = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.clearNew = function() {
  return this.setNew(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.history.History.prototype.hasNew = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string client_code_nom = 15;
 * @return {string}
 */
proto.history.History.prototype.getClientCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.setClientCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string company_code_nom = 16;
 * @return {string}
 */
proto.history.History.prototype.getCompanyCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.setCompanyCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string warehouse_code_nom = 17;
 * @return {string}
 */
proto.history.History.prototype.getWarehouseCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.setWarehouseCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string chrono = 18;
 * @return {string}
 */
proto.history.History.prototype.getChrono = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.setChrono = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string action = 19;
 * @return {string}
 */
proto.history.History.prototype.getAction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.setAction = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string location_address = 20;
 * @return {string}
 */
proto.history.History.prototype.getLocationAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.setLocationAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string event_type = 21;
 * @return {string}
 */
proto.history.History.prototype.getEventType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.setEventType = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string object_search_type = 22;
 * @return {string}
 */
proto.history.History.prototype.getObjectSearchType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.setObjectSearchType = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * repeated HistoryChange changes = 23;
 * @return {!Array<!proto.history.HistoryChange>}
 */
proto.history.History.prototype.getChangesList = function() {
  return /** @type{!Array<!proto.history.HistoryChange>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.history.HistoryChange, 23));
};


/**
 * @param {!Array<!proto.history.HistoryChange>} value
 * @return {!proto.history.History} returns this
*/
proto.history.History.prototype.setChangesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 23, value);
};


/**
 * @param {!proto.history.HistoryChange=} opt_value
 * @param {number=} opt_index
 * @return {!proto.history.HistoryChange}
 */
proto.history.History.prototype.addChanges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 23, opt_value, proto.history.HistoryChange, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.clearChangesList = function() {
  return this.setChangesList([]);
};


/**
 * optional string user_name = 24;
 * @return {string}
 */
proto.history.History.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string reference_number = 25;
 * @return {string}
 */
proto.history.History.prototype.getReferenceNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.setReferenceNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string mission_id = 26;
 * @return {string}
 */
proto.history.History.prototype.getMissionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.setMissionId = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional string previous_location = 27;
 * @return {string}
 */
proto.history.History.prototype.getPreviousLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.setPreviousLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional string current_location = 28;
 * @return {string}
 */
proto.history.History.prototype.getCurrentLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.History} returns this
 */
proto.history.History.prototype.setCurrentLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.history.GetHistoryRequest.repeatedFields_ = [10,11,13,14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.history.GetHistoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.history.GetHistoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.history.GetHistoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.history.GetHistoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 3, 0),
    from: jspb.Message.getFieldWithDefault(msg, 4, 0),
    to: jspb.Message.getFieldWithDefault(msg, 5, 0),
    clientCodeNom: jspb.Message.getFieldWithDefault(msg, 6, ""),
    companyCodeNom: jspb.Message.getFieldWithDefault(msg, 7, ""),
    warehouseCodeNom: jspb.Message.getFieldWithDefault(msg, 8, ""),
    chrono: jspb.Message.getFieldWithDefault(msg, 9, ""),
    userIdsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    objectSearchTypesList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    objectNumber: jspb.Message.getFieldWithDefault(msg, 12, ""),
    actionsList: (f = jspb.Message.getRepeatedField(msg, 13)) == null ? undefined : f,
    typesList: (f = jspb.Message.getRepeatedField(msg, 14)) == null ? undefined : f,
    orderBy: jspb.Message.getFieldWithDefault(msg, 15, ""),
    order: jspb.Message.getFieldWithDefault(msg, 16, 0),
    clientId: jspb.Message.getFieldWithDefault(msg, 17, ""),
    companyId: jspb.Message.getFieldWithDefault(msg, 18, ""),
    warehouseId: jspb.Message.getFieldWithDefault(msg, 19, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.history.GetHistoryRequest}
 */
proto.history.GetHistoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.history.GetHistoryRequest;
  return proto.history.GetHistoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.history.GetHistoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.history.GetHistoryRequest}
 */
proto.history.GetHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFrom(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTo(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientCodeNom(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyCodeNom(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseCodeNom(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setChrono(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addUserIds(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addObjectSearchTypes(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectNumber(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.addActions(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.addTypes(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderBy(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOrder(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.history.GetHistoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.history.GetHistoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.history.GetHistoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.history.GetHistoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getClientCodeNom();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCompanyCodeNom();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getWarehouseCodeNom();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getChrono();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getUserIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getObjectSearchTypesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getObjectNumber();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      13,
      f
    );
  }
  f = message.getTypesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      14,
      f
    );
  }
  f = message.getOrderBy();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getOrder();
  if (f !== 0) {
    writer.writeInt64(
      16,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getWarehouseId();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
};


/**
 * optional int64 limit = 2;
 * @return {number}
 */
proto.history.GetHistoryRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.history.GetHistoryRequest} returns this
 */
proto.history.GetHistoryRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 offset = 3;
 * @return {number}
 */
proto.history.GetHistoryRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.history.GetHistoryRequest} returns this
 */
proto.history.GetHistoryRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 from = 4;
 * @return {number}
 */
proto.history.GetHistoryRequest.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.history.GetHistoryRequest} returns this
 */
proto.history.GetHistoryRequest.prototype.setFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 to = 5;
 * @return {number}
 */
proto.history.GetHistoryRequest.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.history.GetHistoryRequest} returns this
 */
proto.history.GetHistoryRequest.prototype.setTo = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string client_code_nom = 6;
 * @return {string}
 */
proto.history.GetHistoryRequest.prototype.getClientCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.GetHistoryRequest} returns this
 */
proto.history.GetHistoryRequest.prototype.setClientCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string company_code_nom = 7;
 * @return {string}
 */
proto.history.GetHistoryRequest.prototype.getCompanyCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.GetHistoryRequest} returns this
 */
proto.history.GetHistoryRequest.prototype.setCompanyCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string warehouse_code_nom = 8;
 * @return {string}
 */
proto.history.GetHistoryRequest.prototype.getWarehouseCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.GetHistoryRequest} returns this
 */
proto.history.GetHistoryRequest.prototype.setWarehouseCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string chrono = 9;
 * @return {string}
 */
proto.history.GetHistoryRequest.prototype.getChrono = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.GetHistoryRequest} returns this
 */
proto.history.GetHistoryRequest.prototype.setChrono = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * repeated string user_ids = 10;
 * @return {!Array<string>}
 */
proto.history.GetHistoryRequest.prototype.getUserIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.history.GetHistoryRequest} returns this
 */
proto.history.GetHistoryRequest.prototype.setUserIdsList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.history.GetHistoryRequest} returns this
 */
proto.history.GetHistoryRequest.prototype.addUserIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.history.GetHistoryRequest} returns this
 */
proto.history.GetHistoryRequest.prototype.clearUserIdsList = function() {
  return this.setUserIdsList([]);
};


/**
 * repeated string object_search_types = 11;
 * @return {!Array<string>}
 */
proto.history.GetHistoryRequest.prototype.getObjectSearchTypesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.history.GetHistoryRequest} returns this
 */
proto.history.GetHistoryRequest.prototype.setObjectSearchTypesList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.history.GetHistoryRequest} returns this
 */
proto.history.GetHistoryRequest.prototype.addObjectSearchTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.history.GetHistoryRequest} returns this
 */
proto.history.GetHistoryRequest.prototype.clearObjectSearchTypesList = function() {
  return this.setObjectSearchTypesList([]);
};


/**
 * optional string object_number = 12;
 * @return {string}
 */
proto.history.GetHistoryRequest.prototype.getObjectNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.GetHistoryRequest} returns this
 */
proto.history.GetHistoryRequest.prototype.setObjectNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * repeated string actions = 13;
 * @return {!Array<string>}
 */
proto.history.GetHistoryRequest.prototype.getActionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 13));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.history.GetHistoryRequest} returns this
 */
proto.history.GetHistoryRequest.prototype.setActionsList = function(value) {
  return jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.history.GetHistoryRequest} returns this
 */
proto.history.GetHistoryRequest.prototype.addActions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.history.GetHistoryRequest} returns this
 */
proto.history.GetHistoryRequest.prototype.clearActionsList = function() {
  return this.setActionsList([]);
};


/**
 * repeated string types = 14;
 * @return {!Array<string>}
 */
proto.history.GetHistoryRequest.prototype.getTypesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 14));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.history.GetHistoryRequest} returns this
 */
proto.history.GetHistoryRequest.prototype.setTypesList = function(value) {
  return jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.history.GetHistoryRequest} returns this
 */
proto.history.GetHistoryRequest.prototype.addTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.history.GetHistoryRequest} returns this
 */
proto.history.GetHistoryRequest.prototype.clearTypesList = function() {
  return this.setTypesList([]);
};


/**
 * optional string order_by = 15;
 * @return {string}
 */
proto.history.GetHistoryRequest.prototype.getOrderBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.GetHistoryRequest} returns this
 */
proto.history.GetHistoryRequest.prototype.setOrderBy = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional int64 order = 16;
 * @return {number}
 */
proto.history.GetHistoryRequest.prototype.getOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.history.GetHistoryRequest} returns this
 */
proto.history.GetHistoryRequest.prototype.setOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional string client_id = 17;
 * @return {string}
 */
proto.history.GetHistoryRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.GetHistoryRequest} returns this
 */
proto.history.GetHistoryRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string company_id = 18;
 * @return {string}
 */
proto.history.GetHistoryRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.GetHistoryRequest} returns this
 */
proto.history.GetHistoryRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string warehouse_id = 19;
 * @return {string}
 */
proto.history.GetHistoryRequest.prototype.getWarehouseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.GetHistoryRequest} returns this
 */
proto.history.GetHistoryRequest.prototype.setWarehouseId = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.history.GetHistoryResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.history.GetHistoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.history.GetHistoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.history.GetHistoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.history.GetHistoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto.history.History.toObject, includeInstance),
    metadata: (f = msg.getMetadata()) && proto.history.MetaData.toObject(includeInstance, f),
    messageerror: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.history.GetHistoryResponse}
 */
proto.history.GetHistoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.history.GetHistoryResponse;
  return proto.history.GetHistoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.history.GetHistoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.history.GetHistoryResponse}
 */
proto.history.GetHistoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.history.History;
      reader.readMessage(value,proto.history.History.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    case 2:
      var value = new proto.history.MetaData;
      reader.readMessage(value,proto.history.MetaData.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.history.GetHistoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.history.GetHistoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.history.GetHistoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.history.GetHistoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.history.History.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.history.MetaData.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated History entry = 1;
 * @return {!Array<!proto.history.History>}
 */
proto.history.GetHistoryResponse.prototype.getEntryList = function() {
  return /** @type{!Array<!proto.history.History>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.history.History, 1));
};


/**
 * @param {!Array<!proto.history.History>} value
 * @return {!proto.history.GetHistoryResponse} returns this
*/
proto.history.GetHistoryResponse.prototype.setEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.history.History=} opt_value
 * @param {number=} opt_index
 * @return {!proto.history.History}
 */
proto.history.GetHistoryResponse.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.history.History, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.history.GetHistoryResponse} returns this
 */
proto.history.GetHistoryResponse.prototype.clearEntryList = function() {
  return this.setEntryList([]);
};


/**
 * optional MetaData metadata = 2;
 * @return {?proto.history.MetaData}
 */
proto.history.GetHistoryResponse.prototype.getMetadata = function() {
  return /** @type{?proto.history.MetaData} */ (
    jspb.Message.getWrapperField(this, proto.history.MetaData, 2));
};


/**
 * @param {?proto.history.MetaData|undefined} value
 * @return {!proto.history.GetHistoryResponse} returns this
*/
proto.history.GetHistoryResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.history.GetHistoryResponse} returns this
 */
proto.history.GetHistoryResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.history.GetHistoryResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string messageError = 3;
 * @return {string}
 */
proto.history.GetHistoryResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.GetHistoryResponse} returns this
 */
proto.history.GetHistoryResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.history.User.prototype.toObject = function(opt_includeInstance) {
  return proto.history.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.history.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.history.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.history.User}
 */
proto.history.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.history.User;
  return proto.history.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.history.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.history.User}
 */
proto.history.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.history.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.history.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.history.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.history.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.history.User.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.User} returns this
 */
proto.history.User.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.history.User.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.User} returns this
 */
proto.history.User.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.history.GetUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.history.GetUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.history.GetUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.history.GetUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientCodeNom: jspb.Message.getFieldWithDefault(msg, 1, ""),
    warehouseCodeNom: jspb.Message.getFieldWithDefault(msg, 2, ""),
    companyCodeNom: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    warehouseId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    companyId: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.history.GetUserRequest}
 */
proto.history.GetUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.history.GetUserRequest;
  return proto.history.GetUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.history.GetUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.history.GetUserRequest}
 */
proto.history.GetUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientCodeNom(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseCodeNom(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyCodeNom(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.history.GetUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.history.GetUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.history.GetUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.history.GetUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientCodeNom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWarehouseCodeNom();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCompanyCodeNom();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getWarehouseId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string client_code_nom = 1;
 * @return {string}
 */
proto.history.GetUserRequest.prototype.getClientCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.GetUserRequest} returns this
 */
proto.history.GetUserRequest.prototype.setClientCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string warehouse_code_nom = 2;
 * @return {string}
 */
proto.history.GetUserRequest.prototype.getWarehouseCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.GetUserRequest} returns this
 */
proto.history.GetUserRequest.prototype.setWarehouseCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string company_code_nom = 3;
 * @return {string}
 */
proto.history.GetUserRequest.prototype.getCompanyCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.GetUserRequest} returns this
 */
proto.history.GetUserRequest.prototype.setCompanyCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string client_id = 4;
 * @return {string}
 */
proto.history.GetUserRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.GetUserRequest} returns this
 */
proto.history.GetUserRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string warehouse_id = 5;
 * @return {string}
 */
proto.history.GetUserRequest.prototype.getWarehouseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.GetUserRequest} returns this
 */
proto.history.GetUserRequest.prototype.setWarehouseId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string company_id = 6;
 * @return {string}
 */
proto.history.GetUserRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.GetUserRequest} returns this
 */
proto.history.GetUserRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.history.GetUserResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.history.GetUserResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.history.GetUserResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.history.GetUserResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.history.GetUserResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto.history.User.toObject, includeInstance),
    messageerror: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.history.GetUserResponse}
 */
proto.history.GetUserResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.history.GetUserResponse;
  return proto.history.GetUserResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.history.GetUserResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.history.GetUserResponse}
 */
proto.history.GetUserResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.history.User;
      reader.readMessage(value,proto.history.User.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.history.GetUserResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.history.GetUserResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.history.GetUserResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.history.GetUserResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.history.User.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated User entry = 1;
 * @return {!Array<!proto.history.User>}
 */
proto.history.GetUserResponse.prototype.getEntryList = function() {
  return /** @type{!Array<!proto.history.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.history.User, 1));
};


/**
 * @param {!Array<!proto.history.User>} value
 * @return {!proto.history.GetUserResponse} returns this
*/
proto.history.GetUserResponse.prototype.setEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.history.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.history.User}
 */
proto.history.GetUserResponse.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.history.User, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.history.GetUserResponse} returns this
 */
proto.history.GetUserResponse.prototype.clearEntryList = function() {
  return this.setEntryList([]);
};


/**
 * optional string messageError = 2;
 * @return {string}
 */
proto.history.GetUserResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.history.GetUserResponse} returns this
 */
proto.history.GetUserResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.history);
