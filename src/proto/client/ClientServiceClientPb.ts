/**
 * @fileoverview gRPC-Web generated client stub for client
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.21.12
// source: proto/client/client.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as proto_client_client_pb from '../../proto/client/client_pb'; // proto import: "proto/client/client.proto"


export class ClientServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreate = new grpcWeb.MethodDescriptor(
    '/client.ClientService/Create',
    grpcWeb.MethodType.UNARY,
    proto_client_client_pb.CreateRequest,
    proto_client_client_pb.Response,
    (request: proto_client_client_pb.CreateRequest) => {
      return request.serializeBinary();
    },
    proto_client_client_pb.Response.deserializeBinary
  );

  create(
    request: proto_client_client_pb.CreateRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_client_client_pb.Response>;

  create(
    request: proto_client_client_pb.CreateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_client_client_pb.Response) => void): grpcWeb.ClientReadableStream<proto_client_client_pb.Response>;

  create(
    request: proto_client_client_pb.CreateRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_client_client_pb.Response) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/client.ClientService/Create',
        request,
        metadata || {},
        this.methodDescriptorCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/client.ClientService/Create',
    request,
    metadata || {},
    this.methodDescriptorCreate);
  }

  methodDescriptorGetByID = new grpcWeb.MethodDescriptor(
    '/client.ClientService/GetByID',
    grpcWeb.MethodType.UNARY,
    proto_client_client_pb.GetByIdRequest,
    proto_client_client_pb.Response,
    (request: proto_client_client_pb.GetByIdRequest) => {
      return request.serializeBinary();
    },
    proto_client_client_pb.Response.deserializeBinary
  );

  getByID(
    request: proto_client_client_pb.GetByIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_client_client_pb.Response>;

  getByID(
    request: proto_client_client_pb.GetByIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_client_client_pb.Response) => void): grpcWeb.ClientReadableStream<proto_client_client_pb.Response>;

  getByID(
    request: proto_client_client_pb.GetByIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_client_client_pb.Response) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/client.ClientService/GetByID',
        request,
        metadata || {},
        this.methodDescriptorGetByID,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/client.ClientService/GetByID',
    request,
    metadata || {},
    this.methodDescriptorGetByID);
  }

  methodDescriptorGetByCodeNom = new grpcWeb.MethodDescriptor(
    '/client.ClientService/GetByCodeNom',
    grpcWeb.MethodType.UNARY,
    proto_client_client_pb.GetByCodeNomRequest,
    proto_client_client_pb.Response,
    (request: proto_client_client_pb.GetByCodeNomRequest) => {
      return request.serializeBinary();
    },
    proto_client_client_pb.Response.deserializeBinary
  );

  getByCodeNom(
    request: proto_client_client_pb.GetByCodeNomRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_client_client_pb.Response>;

  getByCodeNom(
    request: proto_client_client_pb.GetByCodeNomRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_client_client_pb.Response) => void): grpcWeb.ClientReadableStream<proto_client_client_pb.Response>;

  getByCodeNom(
    request: proto_client_client_pb.GetByCodeNomRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_client_client_pb.Response) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/client.ClientService/GetByCodeNom',
        request,
        metadata || {},
        this.methodDescriptorGetByCodeNom,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/client.ClientService/GetByCodeNom',
    request,
    metadata || {},
    this.methodDescriptorGetByCodeNom);
  }

  methodDescriptorGetAll = new grpcWeb.MethodDescriptor(
    '/client.ClientService/GetAll',
    grpcWeb.MethodType.UNARY,
    proto_client_client_pb.GetAllRequest,
    proto_client_client_pb.GetAllResponse,
    (request: proto_client_client_pb.GetAllRequest) => {
      return request.serializeBinary();
    },
    proto_client_client_pb.GetAllResponse.deserializeBinary
  );

  getAll(
    request: proto_client_client_pb.GetAllRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_client_client_pb.GetAllResponse>;

  getAll(
    request: proto_client_client_pb.GetAllRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_client_client_pb.GetAllResponse) => void): grpcWeb.ClientReadableStream<proto_client_client_pb.GetAllResponse>;

  getAll(
    request: proto_client_client_pb.GetAllRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_client_client_pb.GetAllResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/client.ClientService/GetAll',
        request,
        metadata || {},
        this.methodDescriptorGetAll,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/client.ClientService/GetAll',
    request,
    metadata || {},
    this.methodDescriptorGetAll);
  }

  methodDescriptorGetByContent = new grpcWeb.MethodDescriptor(
    '/client.ClientService/GetByContent',
    grpcWeb.MethodType.UNARY,
    proto_client_client_pb.GetByContentRequest,
    proto_client_client_pb.GetByContentResponse,
    (request: proto_client_client_pb.GetByContentRequest) => {
      return request.serializeBinary();
    },
    proto_client_client_pb.GetByContentResponse.deserializeBinary
  );

  getByContent(
    request: proto_client_client_pb.GetByContentRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_client_client_pb.GetByContentResponse>;

  getByContent(
    request: proto_client_client_pb.GetByContentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_client_client_pb.GetByContentResponse) => void): grpcWeb.ClientReadableStream<proto_client_client_pb.GetByContentResponse>;

  getByContent(
    request: proto_client_client_pb.GetByContentRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_client_client_pb.GetByContentResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/client.ClientService/GetByContent',
        request,
        metadata || {},
        this.methodDescriptorGetByContent,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/client.ClientService/GetByContent',
    request,
    metadata || {},
    this.methodDescriptorGetByContent);
  }

  methodDescriptorGetCompany = new grpcWeb.MethodDescriptor(
    '/client.ClientService/GetCompany',
    grpcWeb.MethodType.UNARY,
    proto_client_client_pb.GetCompanyForCreateRequest,
    proto_client_client_pb.GetCompanyForCreateResponse,
    (request: proto_client_client_pb.GetCompanyForCreateRequest) => {
      return request.serializeBinary();
    },
    proto_client_client_pb.GetCompanyForCreateResponse.deserializeBinary
  );

  getCompany(
    request: proto_client_client_pb.GetCompanyForCreateRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_client_client_pb.GetCompanyForCreateResponse>;

  getCompany(
    request: proto_client_client_pb.GetCompanyForCreateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_client_client_pb.GetCompanyForCreateResponse) => void): grpcWeb.ClientReadableStream<proto_client_client_pb.GetCompanyForCreateResponse>;

  getCompany(
    request: proto_client_client_pb.GetCompanyForCreateRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_client_client_pb.GetCompanyForCreateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/client.ClientService/GetCompany',
        request,
        metadata || {},
        this.methodDescriptorGetCompany,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/client.ClientService/GetCompany',
    request,
    metadata || {},
    this.methodDescriptorGetCompany);
  }

  methodDescriptorGetAllClientsByCompanyWarehouse = new grpcWeb.MethodDescriptor(
    '/client.ClientService/GetAllClientsByCompanyWarehouse',
    grpcWeb.MethodType.UNARY,
    proto_client_client_pb.GetAllClientRequest,
    proto_client_client_pb.ClientArrayResponse,
    (request: proto_client_client_pb.GetAllClientRequest) => {
      return request.serializeBinary();
    },
    proto_client_client_pb.ClientArrayResponse.deserializeBinary
  );

  getAllClientsByCompanyWarehouse(
    request: proto_client_client_pb.GetAllClientRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_client_client_pb.ClientArrayResponse>;

  getAllClientsByCompanyWarehouse(
    request: proto_client_client_pb.GetAllClientRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_client_client_pb.ClientArrayResponse) => void): grpcWeb.ClientReadableStream<proto_client_client_pb.ClientArrayResponse>;

  getAllClientsByCompanyWarehouse(
    request: proto_client_client_pb.GetAllClientRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_client_client_pb.ClientArrayResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/client.ClientService/GetAllClientsByCompanyWarehouse',
        request,
        metadata || {},
        this.methodDescriptorGetAllClientsByCompanyWarehouse,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/client.ClientService/GetAllClientsByCompanyWarehouse',
    request,
    metadata || {},
    this.methodDescriptorGetAllClientsByCompanyWarehouse);
  }

  methodDescriptorGetAllCompanyWarehouseByClientCodeNom = new grpcWeb.MethodDescriptor(
    '/client.ClientService/GetAllCompanyWarehouseByClientCodeNom',
    grpcWeb.MethodType.UNARY,
    proto_client_client_pb.GetAllCompanyWarehouseRequest,
    proto_client_client_pb.ClientArrayResponse,
    (request: proto_client_client_pb.GetAllCompanyWarehouseRequest) => {
      return request.serializeBinary();
    },
    proto_client_client_pb.ClientArrayResponse.deserializeBinary
  );

  getAllCompanyWarehouseByClientCodeNom(
    request: proto_client_client_pb.GetAllCompanyWarehouseRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_client_client_pb.ClientArrayResponse>;

  getAllCompanyWarehouseByClientCodeNom(
    request: proto_client_client_pb.GetAllCompanyWarehouseRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_client_client_pb.ClientArrayResponse) => void): grpcWeb.ClientReadableStream<proto_client_client_pb.ClientArrayResponse>;

  getAllCompanyWarehouseByClientCodeNom(
    request: proto_client_client_pb.GetAllCompanyWarehouseRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_client_client_pb.ClientArrayResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/client.ClientService/GetAllCompanyWarehouseByClientCodeNom',
        request,
        metadata || {},
        this.methodDescriptorGetAllCompanyWarehouseByClientCodeNom,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/client.ClientService/GetAllCompanyWarehouseByClientCodeNom',
    request,
    metadata || {},
    this.methodDescriptorGetAllCompanyWarehouseByClientCodeNom);
  }

  methodDescriptorListClientByCompanyIds = new grpcWeb.MethodDescriptor(
    '/client.ClientService/ListClientByCompanyIds',
    grpcWeb.MethodType.UNARY,
    proto_client_client_pb.ListClientByCompanyIdsRequest,
    proto_client_client_pb.ListClientByCompanyIdsResponse,
    (request: proto_client_client_pb.ListClientByCompanyIdsRequest) => {
      return request.serializeBinary();
    },
    proto_client_client_pb.ListClientByCompanyIdsResponse.deserializeBinary
  );

  listClientByCompanyIds(
    request: proto_client_client_pb.ListClientByCompanyIdsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_client_client_pb.ListClientByCompanyIdsResponse>;

  listClientByCompanyIds(
    request: proto_client_client_pb.ListClientByCompanyIdsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_client_client_pb.ListClientByCompanyIdsResponse) => void): grpcWeb.ClientReadableStream<proto_client_client_pb.ListClientByCompanyIdsResponse>;

  listClientByCompanyIds(
    request: proto_client_client_pb.ListClientByCompanyIdsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_client_client_pb.ListClientByCompanyIdsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/client.ClientService/ListClientByCompanyIds',
        request,
        metadata || {},
        this.methodDescriptorListClientByCompanyIds,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/client.ClientService/ListClientByCompanyIds',
    request,
    metadata || {},
    this.methodDescriptorListClientByCompanyIds);
  }

  methodDescriptorUpdateOne = new grpcWeb.MethodDescriptor(
    '/client.ClientService/UpdateOne',
    grpcWeb.MethodType.UNARY,
    proto_client_client_pb.UpdateOneRequest,
    proto_client_client_pb.UpdateResponse,
    (request: proto_client_client_pb.UpdateOneRequest) => {
      return request.serializeBinary();
    },
    proto_client_client_pb.UpdateResponse.deserializeBinary
  );

  updateOne(
    request: proto_client_client_pb.UpdateOneRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_client_client_pb.UpdateResponse>;

  updateOne(
    request: proto_client_client_pb.UpdateOneRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_client_client_pb.UpdateResponse) => void): grpcWeb.ClientReadableStream<proto_client_client_pb.UpdateResponse>;

  updateOne(
    request: proto_client_client_pb.UpdateOneRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_client_client_pb.UpdateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/client.ClientService/UpdateOne',
        request,
        metadata || {},
        this.methodDescriptorUpdateOne,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/client.ClientService/UpdateOne',
    request,
    metadata || {},
    this.methodDescriptorUpdateOne);
  }

  methodDescriptorDeteleOne = new grpcWeb.MethodDescriptor(
    '/client.ClientService/DeteleOne',
    grpcWeb.MethodType.UNARY,
    proto_client_client_pb.DeleteOneRequest,
    proto_client_client_pb.DeleteResponse,
    (request: proto_client_client_pb.DeleteOneRequest) => {
      return request.serializeBinary();
    },
    proto_client_client_pb.DeleteResponse.deserializeBinary
  );

  deteleOne(
    request: proto_client_client_pb.DeleteOneRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_client_client_pb.DeleteResponse>;

  deteleOne(
    request: proto_client_client_pb.DeleteOneRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_client_client_pb.DeleteResponse) => void): grpcWeb.ClientReadableStream<proto_client_client_pb.DeleteResponse>;

  deteleOne(
    request: proto_client_client_pb.DeleteOneRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_client_client_pb.DeleteResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/client.ClientService/DeteleOne',
        request,
        metadata || {},
        this.methodDescriptorDeteleOne,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/client.ClientService/DeteleOne',
    request,
    metadata || {},
    this.methodDescriptorDeteleOne);
  }

  methodDescriptorDeteleMany = new grpcWeb.MethodDescriptor(
    '/client.ClientService/DeteleMany',
    grpcWeb.MethodType.UNARY,
    proto_client_client_pb.DeleteManyRequest,
    proto_client_client_pb.DeleteResponse,
    (request: proto_client_client_pb.DeleteManyRequest) => {
      return request.serializeBinary();
    },
    proto_client_client_pb.DeleteResponse.deserializeBinary
  );

  deteleMany(
    request: proto_client_client_pb.DeleteManyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_client_client_pb.DeleteResponse>;

  deteleMany(
    request: proto_client_client_pb.DeleteManyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_client_client_pb.DeleteResponse) => void): grpcWeb.ClientReadableStream<proto_client_client_pb.DeleteResponse>;

  deteleMany(
    request: proto_client_client_pb.DeleteManyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_client_client_pb.DeleteResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/client.ClientService/DeteleMany',
        request,
        metadata || {},
        this.methodDescriptorDeteleMany,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/client.ClientService/DeteleMany',
    request,
    metadata || {},
    this.methodDescriptorDeteleMany);
  }

}

