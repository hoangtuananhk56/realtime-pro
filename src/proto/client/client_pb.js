// source: proto/client/client.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.client.Client', null, global);
goog.exportSymbol('proto.client.ClientArrayResponse', null, global);
goog.exportSymbol('proto.client.ClientCompany', null, global);
goog.exportSymbol('proto.client.ClientInfo', null, global);
goog.exportSymbol('proto.client.ClientMinimalDetail', null, global);
goog.exportSymbol('proto.client.ClientSwag', null, global);
goog.exportSymbol('proto.client.ClientWarehouseCompany', null, global);
goog.exportSymbol('proto.client.ClientWarehouseCompanyOrg', null, global);
goog.exportSymbol('proto.client.CommonItemResponse', null, global);
goog.exportSymbol('proto.client.CompanyWarehouseArrayPayload', null, global);
goog.exportSymbol('proto.client.CreateRequest', null, global);
goog.exportSymbol('proto.client.DeleteManyRequest', null, global);
goog.exportSymbol('proto.client.DeleteOneRequest', null, global);
goog.exportSymbol('proto.client.DeleteResponse', null, global);
goog.exportSymbol('proto.client.GetAllClientRequest', null, global);
goog.exportSymbol('proto.client.GetAllCompanyWarehouseRequest', null, global);
goog.exportSymbol('proto.client.GetAllRequest', null, global);
goog.exportSymbol('proto.client.GetAllResponse', null, global);
goog.exportSymbol('proto.client.GetByCodeNomRequest', null, global);
goog.exportSymbol('proto.client.GetByContentRequest', null, global);
goog.exportSymbol('proto.client.GetByContentResponse', null, global);
goog.exportSymbol('proto.client.GetByIdRequest', null, global);
goog.exportSymbol('proto.client.GetCompanyForCreateRequest', null, global);
goog.exportSymbol('proto.client.GetCompanyForCreateResponse', null, global);
goog.exportSymbol('proto.client.ListClientByCompanyIdsRequest', null, global);
goog.exportSymbol('proto.client.ListClientByCompanyIdsResponse', null, global);
goog.exportSymbol('proto.client.MetaData', null, global);
goog.exportSymbol('proto.client.Response', null, global);
goog.exportSymbol('proto.client.UpdateOneRequest', null, global);
goog.exportSymbol('proto.client.UpdateResponse', null, global);
goog.exportSymbol('proto.client.UserSettingRespponse', null, global);
goog.exportSymbol('proto.client.WarehouseClient', null, global);
goog.exportSymbol('proto.client.WarehouseCompany', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.Client = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.client.Client.repeatedFields_, null);
};
goog.inherits(proto.client.Client, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.Client.displayName = 'proto.client.Client';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.ClientSwag = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.client.ClientSwag.repeatedFields_, null);
};
goog.inherits(proto.client.ClientSwag, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.ClientSwag.displayName = 'proto.client.ClientSwag';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.MetaData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client.MetaData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.MetaData.displayName = 'proto.client.MetaData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.ClientCompany = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client.ClientCompany, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.ClientCompany.displayName = 'proto.client.ClientCompany';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.WarehouseClient = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client.WarehouseClient, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.WarehouseClient.displayName = 'proto.client.WarehouseClient';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.WarehouseCompany = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client.WarehouseCompany, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.WarehouseCompany.displayName = 'proto.client.WarehouseCompany';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.ClientWarehouseCompany = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client.ClientWarehouseCompany, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.ClientWarehouseCompany.displayName = 'proto.client.ClientWarehouseCompany';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.ClientWarehouseCompanyOrg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client.ClientWarehouseCompanyOrg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.ClientWarehouseCompanyOrg.displayName = 'proto.client.ClientWarehouseCompanyOrg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.CreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client.CreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.CreateRequest.displayName = 'proto.client.CreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.GetByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client.GetByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.GetByIdRequest.displayName = 'proto.client.GetByIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.GetByCodeNomRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client.GetByCodeNomRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.GetByCodeNomRequest.displayName = 'proto.client.GetByCodeNomRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.Response.displayName = 'proto.client.Response';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.GetAllRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client.GetAllRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.GetAllRequest.displayName = 'proto.client.GetAllRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.GetAllResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.client.GetAllResponse.repeatedFields_, null);
};
goog.inherits(proto.client.GetAllResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.GetAllResponse.displayName = 'proto.client.GetAllResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.GetCompanyForCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client.GetCompanyForCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.GetCompanyForCreateRequest.displayName = 'proto.client.GetCompanyForCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.GetCompanyForCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.client.GetCompanyForCreateResponse.repeatedFields_, null);
};
goog.inherits(proto.client.GetCompanyForCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.GetCompanyForCreateResponse.displayName = 'proto.client.GetCompanyForCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.GetAllClientRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.client.GetAllClientRequest.repeatedFields_, null);
};
goog.inherits(proto.client.GetAllClientRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.GetAllClientRequest.displayName = 'proto.client.GetAllClientRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.CompanyWarehouseArrayPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client.CompanyWarehouseArrayPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.CompanyWarehouseArrayPayload.displayName = 'proto.client.CompanyWarehouseArrayPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.CommonItemResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client.CommonItemResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.CommonItemResponse.displayName = 'proto.client.CommonItemResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.ClientArrayResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.client.ClientArrayResponse.repeatedFields_, null);
};
goog.inherits(proto.client.ClientArrayResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.ClientArrayResponse.displayName = 'proto.client.ClientArrayResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.UserSettingRespponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client.UserSettingRespponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.UserSettingRespponse.displayName = 'proto.client.UserSettingRespponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.GetAllCompanyWarehouseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.client.GetAllCompanyWarehouseRequest.repeatedFields_, null);
};
goog.inherits(proto.client.GetAllCompanyWarehouseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.GetAllCompanyWarehouseRequest.displayName = 'proto.client.GetAllCompanyWarehouseRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.GetByContentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client.GetByContentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.GetByContentRequest.displayName = 'proto.client.GetByContentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.ClientMinimalDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client.ClientMinimalDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.ClientMinimalDetail.displayName = 'proto.client.ClientMinimalDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.GetByContentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.client.GetByContentResponse.repeatedFields_, null);
};
goog.inherits(proto.client.GetByContentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.GetByContentResponse.displayName = 'proto.client.GetByContentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.ListClientByCompanyIdsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.client.ListClientByCompanyIdsRequest.repeatedFields_, null);
};
goog.inherits(proto.client.ListClientByCompanyIdsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.ListClientByCompanyIdsRequest.displayName = 'proto.client.ListClientByCompanyIdsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.ClientInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client.ClientInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.ClientInfo.displayName = 'proto.client.ClientInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.ListClientByCompanyIdsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.client.ListClientByCompanyIdsResponse.repeatedFields_, null);
};
goog.inherits(proto.client.ListClientByCompanyIdsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.ListClientByCompanyIdsResponse.displayName = 'proto.client.ListClientByCompanyIdsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.UpdateOneRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.client.UpdateOneRequest.repeatedFields_, null);
};
goog.inherits(proto.client.UpdateOneRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.UpdateOneRequest.displayName = 'proto.client.UpdateOneRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.UpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client.UpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.UpdateResponse.displayName = 'proto.client.UpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.DeleteOneRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client.DeleteOneRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.DeleteOneRequest.displayName = 'proto.client.DeleteOneRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.DeleteManyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.client.DeleteManyRequest.repeatedFields_, null);
};
goog.inherits(proto.client.DeleteManyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.DeleteManyRequest.displayName = 'proto.client.DeleteManyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.DeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client.DeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.DeleteResponse.displayName = 'proto.client.DeleteResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.client.Client.repeatedFields_ = [20,21,22,34];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.Client.prototype.toObject = function(opt_includeInstance) {
  return proto.client.Client.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.Client} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.Client.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    nom: jspb.Message.getFieldWithDefault(msg, 4, ""),
    adresse: jspb.Message.getFieldWithDefault(msg, 5, ""),
    tel: jspb.Message.getFieldWithDefault(msg, 6, ""),
    fax: jspb.Message.getFieldWithDefault(msg, 7, ""),
    detail: jspb.Message.getFieldWithDefault(msg, 8, ""),
    contact: jspb.Message.getFieldWithDefault(msg, 9, ""),
    code: jspb.Message.getFieldWithDefault(msg, 10, ""),
    currentSsccValue: jspb.Message.getFieldWithDefault(msg, 11, 0),
    preCode: jspb.Message.getFieldWithDefault(msg, 12, ""),
    codeNom: jspb.Message.getFieldWithDefault(msg, 13, ""),
    rupture: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    variantes: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    fifo: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    fefo: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    typesCdn: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    alerteDluo: jspb.Message.getFieldWithDefault(msg, 19, 0),
    clientCompanyList: jspb.Message.toObjectList(msg.getClientCompanyList(),
    proto.client.ClientCompany.toObject, includeInstance),
    warehouseClientList: jspb.Message.toObjectList(msg.getWarehouseClientList(),
    proto.client.WarehouseClient.toObject, includeInstance),
    clientWarehouseCompanyList: jspb.Message.toObjectList(msg.getClientWarehouseCompanyList(),
    proto.client.ClientWarehouseCompany.toObject, includeInstance),
    email: jspb.Message.getFieldWithDefault(msg, 23, ""),
    moisDluoActivate: jspb.Message.getBooleanFieldWithDefault(msg, 24, false),
    moisDluoInput: jspb.Message.getFieldWithDefault(msg, 25, 0),
    multiBl: jspb.Message.getBooleanFieldWithDefault(msg, 26, false),
    etiquettes: jspb.Message.getBooleanFieldWithDefault(msg, 27, false),
    supports: jspb.Message.getBooleanFieldWithDefault(msg, 28, false),
    sauvegardeSupport: jspb.Message.getBooleanFieldWithDefault(msg, 29, false),
    supportReception: jspb.Message.getBooleanFieldWithDefault(msg, 30, false),
    reapproPartiel: jspb.Message.getBooleanFieldWithDefault(msg, 31, false),
    respectHauteurPalette: jspb.Message.getBooleanFieldWithDefault(msg, 32, false),
    isDel: jspb.Message.getBooleanFieldWithDefault(msg, 33, false),
    clientWarehouseCompanyOrgList: jspb.Message.toObjectList(msg.getClientWarehouseCompanyOrgList(),
    proto.client.ClientWarehouseCompanyOrg.toObject, includeInstance),
    priorityPicking: jspb.Message.getBooleanFieldWithDefault(msg, 35, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.Client}
 */
proto.client.Client.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.Client;
  return proto.client.Client.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.Client} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.Client}
 */
proto.client.Client.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNom(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdresse(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTel(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFax(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDetail(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setContact(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCurrentSsccValue(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreCode(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodeNom(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRupture(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVariantes(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFifo(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFefo(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTypesCdn(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAlerteDluo(value);
      break;
    case 20:
      var value = new proto.client.ClientCompany;
      reader.readMessage(value,proto.client.ClientCompany.deserializeBinaryFromReader);
      msg.addClientCompany(value);
      break;
    case 21:
      var value = new proto.client.WarehouseClient;
      reader.readMessage(value,proto.client.WarehouseClient.deserializeBinaryFromReader);
      msg.addWarehouseClient(value);
      break;
    case 22:
      var value = new proto.client.ClientWarehouseCompany;
      reader.readMessage(value,proto.client.ClientWarehouseCompany.deserializeBinaryFromReader);
      msg.addClientWarehouseCompany(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMoisDluoActivate(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMoisDluoInput(value);
      break;
    case 26:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMultiBl(value);
      break;
    case 27:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEtiquettes(value);
      break;
    case 28:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSupports(value);
      break;
    case 29:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSauvegardeSupport(value);
      break;
    case 30:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSupportReception(value);
      break;
    case 31:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReapproPartiel(value);
      break;
    case 32:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRespectHauteurPalette(value);
      break;
    case 33:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDel(value);
      break;
    case 34:
      var value = new proto.client.ClientWarehouseCompanyOrg;
      reader.readMessage(value,proto.client.ClientWarehouseCompanyOrg.deserializeBinaryFromReader);
      msg.addClientWarehouseCompanyOrg(value);
      break;
    case 35:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPriorityPicking(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.Client.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.Client.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.Client} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.Client.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getNom();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAdresse();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTel();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getFax();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDetail();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getContact();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCurrentSsccValue();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getPreCode();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getCodeNom();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeBool(
      16,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeBool(
      17,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getAlerteDluo();
  if (f !== 0) {
    writer.writeInt64(
      19,
      f
    );
  }
  f = message.getClientCompanyList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      20,
      f,
      proto.client.ClientCompany.serializeBinaryToWriter
    );
  }
  f = message.getWarehouseClientList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      21,
      f,
      proto.client.WarehouseClient.serializeBinaryToWriter
    );
  }
  f = message.getClientWarehouseCompanyList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      22,
      f,
      proto.client.ClientWarehouseCompany.serializeBinaryToWriter
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeBool(
      24,
      f
    );
  }
  f = message.getMoisDluoInput();
  if (f !== 0) {
    writer.writeInt32(
      25,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeBool(
      26,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeBool(
      27,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeBool(
      28,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeBool(
      29,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeBool(
      30,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeBool(
      31,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 32));
  if (f != null) {
    writer.writeBool(
      32,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 33));
  if (f != null) {
    writer.writeBool(
      33,
      f
    );
  }
  f = message.getClientWarehouseCompanyOrgList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      34,
      f,
      proto.client.ClientWarehouseCompanyOrg.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 35));
  if (f != null) {
    writer.writeBool(
      35,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.client.Client.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 created_at = 2;
 * @return {number}
 */
proto.client.Client.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 updated_at = 3;
 * @return {number}
 */
proto.client.Client.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string nom = 4;
 * @return {string}
 */
proto.client.Client.prototype.getNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setNom = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string adresse = 5;
 * @return {string}
 */
proto.client.Client.prototype.getAdresse = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setAdresse = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string tel = 6;
 * @return {string}
 */
proto.client.Client.prototype.getTel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setTel = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string fax = 7;
 * @return {string}
 */
proto.client.Client.prototype.getFax = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setFax = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string detail = 8;
 * @return {string}
 */
proto.client.Client.prototype.getDetail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setDetail = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string contact = 9;
 * @return {string}
 */
proto.client.Client.prototype.getContact = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setContact = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string code = 10;
 * @return {string}
 */
proto.client.Client.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int64 current_sscc_value = 11;
 * @return {number}
 */
proto.client.Client.prototype.getCurrentSsccValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setCurrentSsccValue = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string pre_code = 12;
 * @return {string}
 */
proto.client.Client.prototype.getPreCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setPreCode = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string code_nom = 13;
 * @return {string}
 */
proto.client.Client.prototype.getCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional bool rupture = 14;
 * @return {boolean}
 */
proto.client.Client.prototype.getRupture = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setRupture = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.clearRupture = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.client.Client.prototype.hasRupture = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool variantes = 15;
 * @return {boolean}
 */
proto.client.Client.prototype.getVariantes = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setVariantes = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.clearVariantes = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.client.Client.prototype.hasVariantes = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bool fifo = 16;
 * @return {boolean}
 */
proto.client.Client.prototype.getFifo = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setFifo = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.clearFifo = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.client.Client.prototype.hasFifo = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional bool fefo = 17;
 * @return {boolean}
 */
proto.client.Client.prototype.getFefo = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setFefo = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.clearFefo = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.client.Client.prototype.hasFefo = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional bool types_cdn = 18;
 * @return {boolean}
 */
proto.client.Client.prototype.getTypesCdn = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setTypesCdn = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.clearTypesCdn = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.client.Client.prototype.hasTypesCdn = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional int64 alerte_dluo = 19;
 * @return {number}
 */
proto.client.Client.prototype.getAlerteDluo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setAlerteDluo = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * repeated ClientCompany client_company = 20;
 * @return {!Array<!proto.client.ClientCompany>}
 */
proto.client.Client.prototype.getClientCompanyList = function() {
  return /** @type{!Array<!proto.client.ClientCompany>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.client.ClientCompany, 20));
};


/**
 * @param {!Array<!proto.client.ClientCompany>} value
 * @return {!proto.client.Client} returns this
*/
proto.client.Client.prototype.setClientCompanyList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 20, value);
};


/**
 * @param {!proto.client.ClientCompany=} opt_value
 * @param {number=} opt_index
 * @return {!proto.client.ClientCompany}
 */
proto.client.Client.prototype.addClientCompany = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 20, opt_value, proto.client.ClientCompany, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.clearClientCompanyList = function() {
  return this.setClientCompanyList([]);
};


/**
 * repeated WarehouseClient warehouse_client = 21;
 * @return {!Array<!proto.client.WarehouseClient>}
 */
proto.client.Client.prototype.getWarehouseClientList = function() {
  return /** @type{!Array<!proto.client.WarehouseClient>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.client.WarehouseClient, 21));
};


/**
 * @param {!Array<!proto.client.WarehouseClient>} value
 * @return {!proto.client.Client} returns this
*/
proto.client.Client.prototype.setWarehouseClientList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 21, value);
};


/**
 * @param {!proto.client.WarehouseClient=} opt_value
 * @param {number=} opt_index
 * @return {!proto.client.WarehouseClient}
 */
proto.client.Client.prototype.addWarehouseClient = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 21, opt_value, proto.client.WarehouseClient, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.clearWarehouseClientList = function() {
  return this.setWarehouseClientList([]);
};


/**
 * repeated ClientWarehouseCompany client_warehouse_company = 22;
 * @return {!Array<!proto.client.ClientWarehouseCompany>}
 */
proto.client.Client.prototype.getClientWarehouseCompanyList = function() {
  return /** @type{!Array<!proto.client.ClientWarehouseCompany>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.client.ClientWarehouseCompany, 22));
};


/**
 * @param {!Array<!proto.client.ClientWarehouseCompany>} value
 * @return {!proto.client.Client} returns this
*/
proto.client.Client.prototype.setClientWarehouseCompanyList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 22, value);
};


/**
 * @param {!proto.client.ClientWarehouseCompany=} opt_value
 * @param {number=} opt_index
 * @return {!proto.client.ClientWarehouseCompany}
 */
proto.client.Client.prototype.addClientWarehouseCompany = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 22, opt_value, proto.client.ClientWarehouseCompany, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.clearClientWarehouseCompanyList = function() {
  return this.setClientWarehouseCompanyList([]);
};


/**
 * optional string email = 23;
 * @return {string}
 */
proto.client.Client.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional bool mois_dluo_activate = 24;
 * @return {boolean}
 */
proto.client.Client.prototype.getMoisDluoActivate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 24, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setMoisDluoActivate = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.clearMoisDluoActivate = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.client.Client.prototype.hasMoisDluoActivate = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional int32 mois_dluo_input = 25;
 * @return {number}
 */
proto.client.Client.prototype.getMoisDluoInput = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setMoisDluoInput = function(value) {
  return jspb.Message.setProto3IntField(this, 25, value);
};


/**
 * optional bool multi_bl = 26;
 * @return {boolean}
 */
proto.client.Client.prototype.getMultiBl = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 26, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setMultiBl = function(value) {
  return jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.clearMultiBl = function() {
  return jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.client.Client.prototype.hasMultiBl = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional bool etiquettes = 27;
 * @return {boolean}
 */
proto.client.Client.prototype.getEtiquettes = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 27, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setEtiquettes = function(value) {
  return jspb.Message.setField(this, 27, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.clearEtiquettes = function() {
  return jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.client.Client.prototype.hasEtiquettes = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional bool supports = 28;
 * @return {boolean}
 */
proto.client.Client.prototype.getSupports = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 28, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setSupports = function(value) {
  return jspb.Message.setField(this, 28, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.clearSupports = function() {
  return jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.client.Client.prototype.hasSupports = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional bool sauvegarde_support = 29;
 * @return {boolean}
 */
proto.client.Client.prototype.getSauvegardeSupport = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 29, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setSauvegardeSupport = function(value) {
  return jspb.Message.setField(this, 29, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.clearSauvegardeSupport = function() {
  return jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.client.Client.prototype.hasSauvegardeSupport = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional bool support_reception = 30;
 * @return {boolean}
 */
proto.client.Client.prototype.getSupportReception = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 30, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setSupportReception = function(value) {
  return jspb.Message.setField(this, 30, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.clearSupportReception = function() {
  return jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.client.Client.prototype.hasSupportReception = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional bool reappro_partiel = 31;
 * @return {boolean}
 */
proto.client.Client.prototype.getReapproPartiel = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 31, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setReapproPartiel = function(value) {
  return jspb.Message.setField(this, 31, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.clearReapproPartiel = function() {
  return jspb.Message.setField(this, 31, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.client.Client.prototype.hasReapproPartiel = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional bool respect_hauteur_palette = 32;
 * @return {boolean}
 */
proto.client.Client.prototype.getRespectHauteurPalette = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 32, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setRespectHauteurPalette = function(value) {
  return jspb.Message.setField(this, 32, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.clearRespectHauteurPalette = function() {
  return jspb.Message.setField(this, 32, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.client.Client.prototype.hasRespectHauteurPalette = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional bool is_del = 33;
 * @return {boolean}
 */
proto.client.Client.prototype.getIsDel = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 33, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setIsDel = function(value) {
  return jspb.Message.setField(this, 33, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.clearIsDel = function() {
  return jspb.Message.setField(this, 33, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.client.Client.prototype.hasIsDel = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * repeated ClientWarehouseCompanyOrg client_warehouse_company_org = 34;
 * @return {!Array<!proto.client.ClientWarehouseCompanyOrg>}
 */
proto.client.Client.prototype.getClientWarehouseCompanyOrgList = function() {
  return /** @type{!Array<!proto.client.ClientWarehouseCompanyOrg>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.client.ClientWarehouseCompanyOrg, 34));
};


/**
 * @param {!Array<!proto.client.ClientWarehouseCompanyOrg>} value
 * @return {!proto.client.Client} returns this
*/
proto.client.Client.prototype.setClientWarehouseCompanyOrgList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 34, value);
};


/**
 * @param {!proto.client.ClientWarehouseCompanyOrg=} opt_value
 * @param {number=} opt_index
 * @return {!proto.client.ClientWarehouseCompanyOrg}
 */
proto.client.Client.prototype.addClientWarehouseCompanyOrg = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 34, opt_value, proto.client.ClientWarehouseCompanyOrg, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.clearClientWarehouseCompanyOrgList = function() {
  return this.setClientWarehouseCompanyOrgList([]);
};


/**
 * optional bool priority_picking = 35;
 * @return {boolean}
 */
proto.client.Client.prototype.getPriorityPicking = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 35, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.setPriorityPicking = function(value) {
  return jspb.Message.setField(this, 35, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.client.Client} returns this
 */
proto.client.Client.prototype.clearPriorityPicking = function() {
  return jspb.Message.setField(this, 35, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.client.Client.prototype.hasPriorityPicking = function() {
  return jspb.Message.getField(this, 35) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.client.ClientSwag.repeatedFields_ = [17,18];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.ClientSwag.prototype.toObject = function(opt_includeInstance) {
  return proto.client.ClientSwag.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.ClientSwag} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.ClientSwag.toObject = function(includeInstance, msg) {
  var f, obj = {
    nom: jspb.Message.getFieldWithDefault(msg, 1, ""),
    adresse: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tel: jspb.Message.getFieldWithDefault(msg, 3, ""),
    fax: jspb.Message.getFieldWithDefault(msg, 4, ""),
    detail: jspb.Message.getFieldWithDefault(msg, 5, ""),
    contact: jspb.Message.getFieldWithDefault(msg, 6, ""),
    code: jspb.Message.getFieldWithDefault(msg, 7, ""),
    currentSsccValue: jspb.Message.getFieldWithDefault(msg, 8, 0),
    preCode: jspb.Message.getFieldWithDefault(msg, 9, ""),
    codeNom: jspb.Message.getFieldWithDefault(msg, 10, ""),
    rupture: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    variantes: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    fifo: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    fefo: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    typesCdn: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    alerteDluo: jspb.Message.getFieldWithDefault(msg, 16, 0),
    clientCompanyList: jspb.Message.toObjectList(msg.getClientCompanyList(),
    proto.client.ClientCompany.toObject, includeInstance),
    warehouseClientList: jspb.Message.toObjectList(msg.getWarehouseClientList(),
    proto.client.WarehouseClient.toObject, includeInstance),
    moisDluoActivate: jspb.Message.getBooleanFieldWithDefault(msg, 24, false),
    moisDluoInput: jspb.Message.getFieldWithDefault(msg, 25, 0),
    multiBl: jspb.Message.getBooleanFieldWithDefault(msg, 26, false),
    etiquettes: jspb.Message.getBooleanFieldWithDefault(msg, 27, false),
    supports: jspb.Message.getBooleanFieldWithDefault(msg, 28, false),
    sauvegardeSupport: jspb.Message.getBooleanFieldWithDefault(msg, 29, false),
    supportReception: jspb.Message.getBooleanFieldWithDefault(msg, 30, false),
    reapproPartiel: jspb.Message.getBooleanFieldWithDefault(msg, 31, false),
    respectHauteurPalette: jspb.Message.getBooleanFieldWithDefault(msg, 32, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.ClientSwag}
 */
proto.client.ClientSwag.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.ClientSwag;
  return proto.client.ClientSwag.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.ClientSwag} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.ClientSwag}
 */
proto.client.ClientSwag.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNom(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdresse(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTel(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFax(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDetail(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setContact(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCurrentSsccValue(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreCode(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodeNom(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRupture(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVariantes(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFifo(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFefo(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTypesCdn(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAlerteDluo(value);
      break;
    case 17:
      var value = new proto.client.ClientCompany;
      reader.readMessage(value,proto.client.ClientCompany.deserializeBinaryFromReader);
      msg.addClientCompany(value);
      break;
    case 18:
      var value = new proto.client.WarehouseClient;
      reader.readMessage(value,proto.client.WarehouseClient.deserializeBinaryFromReader);
      msg.addWarehouseClient(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMoisDluoActivate(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMoisDluoInput(value);
      break;
    case 26:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMultiBl(value);
      break;
    case 27:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEtiquettes(value);
      break;
    case 28:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSupports(value);
      break;
    case 29:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSauvegardeSupport(value);
      break;
    case 30:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSupportReception(value);
      break;
    case 31:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReapproPartiel(value);
      break;
    case 32:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRespectHauteurPalette(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.ClientSwag.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.ClientSwag.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.ClientSwag} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.ClientSwag.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAdresse();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTel();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFax();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDetail();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getContact();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCurrentSsccValue();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getPreCode();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCodeNom();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getRupture();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getVariantes();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getFifo();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getFefo();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getTypesCdn();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getAlerteDluo();
  if (f !== 0) {
    writer.writeInt64(
      16,
      f
    );
  }
  f = message.getClientCompanyList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      17,
      f,
      proto.client.ClientCompany.serializeBinaryToWriter
    );
  }
  f = message.getWarehouseClientList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      18,
      f,
      proto.client.WarehouseClient.serializeBinaryToWriter
    );
  }
  f = message.getMoisDluoActivate();
  if (f) {
    writer.writeBool(
      24,
      f
    );
  }
  f = message.getMoisDluoInput();
  if (f !== 0) {
    writer.writeInt32(
      25,
      f
    );
  }
  f = message.getMultiBl();
  if (f) {
    writer.writeBool(
      26,
      f
    );
  }
  f = message.getEtiquettes();
  if (f) {
    writer.writeBool(
      27,
      f
    );
  }
  f = message.getSupports();
  if (f) {
    writer.writeBool(
      28,
      f
    );
  }
  f = message.getSauvegardeSupport();
  if (f) {
    writer.writeBool(
      29,
      f
    );
  }
  f = message.getSupportReception();
  if (f) {
    writer.writeBool(
      30,
      f
    );
  }
  f = message.getReapproPartiel();
  if (f) {
    writer.writeBool(
      31,
      f
    );
  }
  f = message.getRespectHauteurPalette();
  if (f) {
    writer.writeBool(
      32,
      f
    );
  }
};


/**
 * optional string nom = 1;
 * @return {string}
 */
proto.client.ClientSwag.prototype.getNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientSwag} returns this
 */
proto.client.ClientSwag.prototype.setNom = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string adresse = 2;
 * @return {string}
 */
proto.client.ClientSwag.prototype.getAdresse = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientSwag} returns this
 */
proto.client.ClientSwag.prototype.setAdresse = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string tel = 3;
 * @return {string}
 */
proto.client.ClientSwag.prototype.getTel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientSwag} returns this
 */
proto.client.ClientSwag.prototype.setTel = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string fax = 4;
 * @return {string}
 */
proto.client.ClientSwag.prototype.getFax = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientSwag} returns this
 */
proto.client.ClientSwag.prototype.setFax = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string detail = 5;
 * @return {string}
 */
proto.client.ClientSwag.prototype.getDetail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientSwag} returns this
 */
proto.client.ClientSwag.prototype.setDetail = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string contact = 6;
 * @return {string}
 */
proto.client.ClientSwag.prototype.getContact = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientSwag} returns this
 */
proto.client.ClientSwag.prototype.setContact = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string code = 7;
 * @return {string}
 */
proto.client.ClientSwag.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientSwag} returns this
 */
proto.client.ClientSwag.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int64 current_sscc_value = 8;
 * @return {number}
 */
proto.client.ClientSwag.prototype.getCurrentSsccValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.ClientSwag} returns this
 */
proto.client.ClientSwag.prototype.setCurrentSsccValue = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string pre_code = 9;
 * @return {string}
 */
proto.client.ClientSwag.prototype.getPreCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientSwag} returns this
 */
proto.client.ClientSwag.prototype.setPreCode = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string code_nom = 10;
 * @return {string}
 */
proto.client.ClientSwag.prototype.getCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientSwag} returns this
 */
proto.client.ClientSwag.prototype.setCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bool rupture = 11;
 * @return {boolean}
 */
proto.client.ClientSwag.prototype.getRupture = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.ClientSwag} returns this
 */
proto.client.ClientSwag.prototype.setRupture = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool variantes = 12;
 * @return {boolean}
 */
proto.client.ClientSwag.prototype.getVariantes = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.ClientSwag} returns this
 */
proto.client.ClientSwag.prototype.setVariantes = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool fifo = 13;
 * @return {boolean}
 */
proto.client.ClientSwag.prototype.getFifo = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.ClientSwag} returns this
 */
proto.client.ClientSwag.prototype.setFifo = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool fefo = 14;
 * @return {boolean}
 */
proto.client.ClientSwag.prototype.getFefo = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.ClientSwag} returns this
 */
proto.client.ClientSwag.prototype.setFefo = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool types_cdn = 15;
 * @return {boolean}
 */
proto.client.ClientSwag.prototype.getTypesCdn = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.ClientSwag} returns this
 */
proto.client.ClientSwag.prototype.setTypesCdn = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional int64 alerte_dluo = 16;
 * @return {number}
 */
proto.client.ClientSwag.prototype.getAlerteDluo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.ClientSwag} returns this
 */
proto.client.ClientSwag.prototype.setAlerteDluo = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * repeated ClientCompany client_company = 17;
 * @return {!Array<!proto.client.ClientCompany>}
 */
proto.client.ClientSwag.prototype.getClientCompanyList = function() {
  return /** @type{!Array<!proto.client.ClientCompany>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.client.ClientCompany, 17));
};


/**
 * @param {!Array<!proto.client.ClientCompany>} value
 * @return {!proto.client.ClientSwag} returns this
*/
proto.client.ClientSwag.prototype.setClientCompanyList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 17, value);
};


/**
 * @param {!proto.client.ClientCompany=} opt_value
 * @param {number=} opt_index
 * @return {!proto.client.ClientCompany}
 */
proto.client.ClientSwag.prototype.addClientCompany = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 17, opt_value, proto.client.ClientCompany, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.client.ClientSwag} returns this
 */
proto.client.ClientSwag.prototype.clearClientCompanyList = function() {
  return this.setClientCompanyList([]);
};


/**
 * repeated WarehouseClient warehouse_client = 18;
 * @return {!Array<!proto.client.WarehouseClient>}
 */
proto.client.ClientSwag.prototype.getWarehouseClientList = function() {
  return /** @type{!Array<!proto.client.WarehouseClient>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.client.WarehouseClient, 18));
};


/**
 * @param {!Array<!proto.client.WarehouseClient>} value
 * @return {!proto.client.ClientSwag} returns this
*/
proto.client.ClientSwag.prototype.setWarehouseClientList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 18, value);
};


/**
 * @param {!proto.client.WarehouseClient=} opt_value
 * @param {number=} opt_index
 * @return {!proto.client.WarehouseClient}
 */
proto.client.ClientSwag.prototype.addWarehouseClient = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 18, opt_value, proto.client.WarehouseClient, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.client.ClientSwag} returns this
 */
proto.client.ClientSwag.prototype.clearWarehouseClientList = function() {
  return this.setWarehouseClientList([]);
};


/**
 * optional bool mois_dluo_activate = 24;
 * @return {boolean}
 */
proto.client.ClientSwag.prototype.getMoisDluoActivate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 24, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.ClientSwag} returns this
 */
proto.client.ClientSwag.prototype.setMoisDluoActivate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 24, value);
};


/**
 * optional int32 mois_dluo_input = 25;
 * @return {number}
 */
proto.client.ClientSwag.prototype.getMoisDluoInput = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.ClientSwag} returns this
 */
proto.client.ClientSwag.prototype.setMoisDluoInput = function(value) {
  return jspb.Message.setProto3IntField(this, 25, value);
};


/**
 * optional bool multi_bl = 26;
 * @return {boolean}
 */
proto.client.ClientSwag.prototype.getMultiBl = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 26, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.ClientSwag} returns this
 */
proto.client.ClientSwag.prototype.setMultiBl = function(value) {
  return jspb.Message.setProto3BooleanField(this, 26, value);
};


/**
 * optional bool etiquettes = 27;
 * @return {boolean}
 */
proto.client.ClientSwag.prototype.getEtiquettes = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 27, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.ClientSwag} returns this
 */
proto.client.ClientSwag.prototype.setEtiquettes = function(value) {
  return jspb.Message.setProto3BooleanField(this, 27, value);
};


/**
 * optional bool supports = 28;
 * @return {boolean}
 */
proto.client.ClientSwag.prototype.getSupports = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 28, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.ClientSwag} returns this
 */
proto.client.ClientSwag.prototype.setSupports = function(value) {
  return jspb.Message.setProto3BooleanField(this, 28, value);
};


/**
 * optional bool sauvegarde_support = 29;
 * @return {boolean}
 */
proto.client.ClientSwag.prototype.getSauvegardeSupport = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 29, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.ClientSwag} returns this
 */
proto.client.ClientSwag.prototype.setSauvegardeSupport = function(value) {
  return jspb.Message.setProto3BooleanField(this, 29, value);
};


/**
 * optional bool support_reception = 30;
 * @return {boolean}
 */
proto.client.ClientSwag.prototype.getSupportReception = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 30, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.ClientSwag} returns this
 */
proto.client.ClientSwag.prototype.setSupportReception = function(value) {
  return jspb.Message.setProto3BooleanField(this, 30, value);
};


/**
 * optional bool reappro_partiel = 31;
 * @return {boolean}
 */
proto.client.ClientSwag.prototype.getReapproPartiel = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 31, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.ClientSwag} returns this
 */
proto.client.ClientSwag.prototype.setReapproPartiel = function(value) {
  return jspb.Message.setProto3BooleanField(this, 31, value);
};


/**
 * optional bool respect_hauteur_palette = 32;
 * @return {boolean}
 */
proto.client.ClientSwag.prototype.getRespectHauteurPalette = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 32, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.ClientSwag} returns this
 */
proto.client.ClientSwag.prototype.setRespectHauteurPalette = function(value) {
  return jspb.Message.setProto3BooleanField(this, 32, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.MetaData.prototype.toObject = function(opt_includeInstance) {
  return proto.client.MetaData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.MetaData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.MetaData.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    total: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.MetaData}
 */
proto.client.MetaData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.MetaData;
  return proto.client.MetaData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.MetaData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.MetaData}
 */
proto.client.MetaData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.MetaData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.MetaData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.MetaData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.MetaData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional int32 count = 1;
 * @return {number}
 */
proto.client.MetaData.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.MetaData} returns this
 */
proto.client.MetaData.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 offset = 2;
 * @return {number}
 */
proto.client.MetaData.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.MetaData} returns this
 */
proto.client.MetaData.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 limit = 3;
 * @return {number}
 */
proto.client.MetaData.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.MetaData} returns this
 */
proto.client.MetaData.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 total = 4;
 * @return {number}
 */
proto.client.MetaData.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.MetaData} returns this
 */
proto.client.MetaData.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.ClientCompany.prototype.toObject = function(opt_includeInstance) {
  return proto.client.ClientCompany.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.ClientCompany} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.ClientCompany.toObject = function(includeInstance, msg) {
  var f, obj = {
    createAt: jspb.Message.getFieldWithDefault(msg, 1, 0),
    updateAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    clientCodeNom: jspb.Message.getFieldWithDefault(msg, 3, ""),
    companyCodeNom: jspb.Message.getFieldWithDefault(msg, 4, ""),
    clientId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    companyId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    id: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.ClientCompany}
 */
proto.client.ClientCompany.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.ClientCompany;
  return proto.client.ClientCompany.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.ClientCompany} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.ClientCompany}
 */
proto.client.ClientCompany.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateAt(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateAt(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientCodeNom(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyCodeNom(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.ClientCompany.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.ClientCompany.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.ClientCompany} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.ClientCompany.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreateAt();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUpdateAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getClientCodeNom();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCompanyCodeNom();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional int64 create_at = 1;
 * @return {number}
 */
proto.client.ClientCompany.prototype.getCreateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.ClientCompany} returns this
 */
proto.client.ClientCompany.prototype.setCreateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 update_at = 2;
 * @return {number}
 */
proto.client.ClientCompany.prototype.getUpdateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.ClientCompany} returns this
 */
proto.client.ClientCompany.prototype.setUpdateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string client_code_nom = 3;
 * @return {string}
 */
proto.client.ClientCompany.prototype.getClientCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientCompany} returns this
 */
proto.client.ClientCompany.prototype.setClientCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string company_code_nom = 4;
 * @return {string}
 */
proto.client.ClientCompany.prototype.getCompanyCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientCompany} returns this
 */
proto.client.ClientCompany.prototype.setCompanyCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string client_id = 5;
 * @return {string}
 */
proto.client.ClientCompany.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientCompany} returns this
 */
proto.client.ClientCompany.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string company_id = 6;
 * @return {string}
 */
proto.client.ClientCompany.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientCompany} returns this
 */
proto.client.ClientCompany.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string id = 7;
 * @return {string}
 */
proto.client.ClientCompany.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientCompany} returns this
 */
proto.client.ClientCompany.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.WarehouseClient.prototype.toObject = function(opt_includeInstance) {
  return proto.client.WarehouseClient.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.WarehouseClient} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.WarehouseClient.toObject = function(includeInstance, msg) {
  var f, obj = {
    createAt: jspb.Message.getFieldWithDefault(msg, 1, 0),
    updateAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    clientCodeNom: jspb.Message.getFieldWithDefault(msg, 3, ""),
    warehouseCodeNom: jspb.Message.getFieldWithDefault(msg, 4, ""),
    clientId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    warehouseId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    id: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.WarehouseClient}
 */
proto.client.WarehouseClient.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.WarehouseClient;
  return proto.client.WarehouseClient.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.WarehouseClient} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.WarehouseClient}
 */
proto.client.WarehouseClient.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateAt(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateAt(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientCodeNom(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseCodeNom(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.WarehouseClient.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.WarehouseClient.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.WarehouseClient} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.WarehouseClient.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreateAt();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUpdateAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getClientCodeNom();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWarehouseCodeNom();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getWarehouseId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional int64 create_at = 1;
 * @return {number}
 */
proto.client.WarehouseClient.prototype.getCreateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.WarehouseClient} returns this
 */
proto.client.WarehouseClient.prototype.setCreateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 update_at = 2;
 * @return {number}
 */
proto.client.WarehouseClient.prototype.getUpdateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.WarehouseClient} returns this
 */
proto.client.WarehouseClient.prototype.setUpdateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string client_code_nom = 3;
 * @return {string}
 */
proto.client.WarehouseClient.prototype.getClientCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.WarehouseClient} returns this
 */
proto.client.WarehouseClient.prototype.setClientCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string warehouse_code_nom = 4;
 * @return {string}
 */
proto.client.WarehouseClient.prototype.getWarehouseCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.WarehouseClient} returns this
 */
proto.client.WarehouseClient.prototype.setWarehouseCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string client_id = 5;
 * @return {string}
 */
proto.client.WarehouseClient.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.WarehouseClient} returns this
 */
proto.client.WarehouseClient.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string warehouse_id = 6;
 * @return {string}
 */
proto.client.WarehouseClient.prototype.getWarehouseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.WarehouseClient} returns this
 */
proto.client.WarehouseClient.prototype.setWarehouseId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string id = 7;
 * @return {string}
 */
proto.client.WarehouseClient.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.WarehouseClient} returns this
 */
proto.client.WarehouseClient.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.WarehouseCompany.prototype.toObject = function(opt_includeInstance) {
  return proto.client.WarehouseCompany.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.WarehouseCompany} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.WarehouseCompany.toObject = function(includeInstance, msg) {
  var f, obj = {
    createAt: jspb.Message.getFieldWithDefault(msg, 1, 0),
    updateAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    warehouseCodeNom: jspb.Message.getFieldWithDefault(msg, 3, ""),
    companyCodeNom: jspb.Message.getFieldWithDefault(msg, 4, ""),
    warehouseId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    companyId: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.WarehouseCompany}
 */
proto.client.WarehouseCompany.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.WarehouseCompany;
  return proto.client.WarehouseCompany.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.WarehouseCompany} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.WarehouseCompany}
 */
proto.client.WarehouseCompany.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateAt(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateAt(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseCodeNom(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyCodeNom(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.WarehouseCompany.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.WarehouseCompany.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.WarehouseCompany} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.WarehouseCompany.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreateAt();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUpdateAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getWarehouseCodeNom();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCompanyCodeNom();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getWarehouseId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional int64 create_at = 1;
 * @return {number}
 */
proto.client.WarehouseCompany.prototype.getCreateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.WarehouseCompany} returns this
 */
proto.client.WarehouseCompany.prototype.setCreateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 update_at = 2;
 * @return {number}
 */
proto.client.WarehouseCompany.prototype.getUpdateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.WarehouseCompany} returns this
 */
proto.client.WarehouseCompany.prototype.setUpdateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string warehouse_code_nom = 3;
 * @return {string}
 */
proto.client.WarehouseCompany.prototype.getWarehouseCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.WarehouseCompany} returns this
 */
proto.client.WarehouseCompany.prototype.setWarehouseCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string company_code_nom = 4;
 * @return {string}
 */
proto.client.WarehouseCompany.prototype.getCompanyCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.WarehouseCompany} returns this
 */
proto.client.WarehouseCompany.prototype.setCompanyCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string warehouse_id = 5;
 * @return {string}
 */
proto.client.WarehouseCompany.prototype.getWarehouseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.WarehouseCompany} returns this
 */
proto.client.WarehouseCompany.prototype.setWarehouseId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string company_id = 7;
 * @return {string}
 */
proto.client.WarehouseCompany.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.WarehouseCompany} returns this
 */
proto.client.WarehouseCompany.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.ClientWarehouseCompany.prototype.toObject = function(opt_includeInstance) {
  return proto.client.ClientWarehouseCompany.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.ClientWarehouseCompany} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.ClientWarehouseCompany.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    companyCodeNom: jspb.Message.getFieldWithDefault(msg, 2, 0),
    clientCodeNom: jspb.Message.getFieldWithDefault(msg, 3, 0),
    warehouseCodeNom: jspb.Message.getFieldWithDefault(msg, 4, ""),
    clientId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    id: jspb.Message.getFieldWithDefault(msg, 6, ""),
    companyId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    warehouseId: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.ClientWarehouseCompany}
 */
proto.client.ClientWarehouseCompany.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.ClientWarehouseCompany;
  return proto.client.ClientWarehouseCompany.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.ClientWarehouseCompany} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.ClientWarehouseCompany}
 */
proto.client.ClientWarehouseCompany.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCompanyCodeNom(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setClientCodeNom(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseCodeNom(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.ClientWarehouseCompany.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.ClientWarehouseCompany.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.ClientWarehouseCompany} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.ClientWarehouseCompany.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCompanyCodeNom();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getClientCodeNom();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getWarehouseCodeNom();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getWarehouseId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.client.ClientWarehouseCompany.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientWarehouseCompany} returns this
 */
proto.client.ClientWarehouseCompany.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 company_code_nom = 2;
 * @return {number}
 */
proto.client.ClientWarehouseCompany.prototype.getCompanyCodeNom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.ClientWarehouseCompany} returns this
 */
proto.client.ClientWarehouseCompany.prototype.setCompanyCodeNom = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 client_code_nom = 3;
 * @return {number}
 */
proto.client.ClientWarehouseCompany.prototype.getClientCodeNom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.ClientWarehouseCompany} returns this
 */
proto.client.ClientWarehouseCompany.prototype.setClientCodeNom = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string warehouse_code_nom = 4;
 * @return {string}
 */
proto.client.ClientWarehouseCompany.prototype.getWarehouseCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientWarehouseCompany} returns this
 */
proto.client.ClientWarehouseCompany.prototype.setWarehouseCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string client_id = 5;
 * @return {string}
 */
proto.client.ClientWarehouseCompany.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientWarehouseCompany} returns this
 */
proto.client.ClientWarehouseCompany.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string id = 6;
 * @return {string}
 */
proto.client.ClientWarehouseCompany.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientWarehouseCompany} returns this
 */
proto.client.ClientWarehouseCompany.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string company_id = 7;
 * @return {string}
 */
proto.client.ClientWarehouseCompany.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientWarehouseCompany} returns this
 */
proto.client.ClientWarehouseCompany.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string warehouse_id = 8;
 * @return {string}
 */
proto.client.ClientWarehouseCompany.prototype.getWarehouseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientWarehouseCompany} returns this
 */
proto.client.ClientWarehouseCompany.prototype.setWarehouseId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.ClientWarehouseCompanyOrg.prototype.toObject = function(opt_includeInstance) {
  return proto.client.ClientWarehouseCompanyOrg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.ClientWarehouseCompanyOrg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.ClientWarehouseCompanyOrg.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    companyId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    warehouseId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    clientCodeNom: jspb.Message.getFieldWithDefault(msg, 5, ""),
    companyCodeNom: jspb.Message.getFieldWithDefault(msg, 6, ""),
    warehouseCodeNom: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.ClientWarehouseCompanyOrg}
 */
proto.client.ClientWarehouseCompanyOrg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.ClientWarehouseCompanyOrg;
  return proto.client.ClientWarehouseCompanyOrg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.ClientWarehouseCompanyOrg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.ClientWarehouseCompanyOrg}
 */
proto.client.ClientWarehouseCompanyOrg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientCodeNom(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyCodeNom(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseCodeNom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.ClientWarehouseCompanyOrg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.ClientWarehouseCompanyOrg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.ClientWarehouseCompanyOrg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.ClientWarehouseCompanyOrg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWarehouseId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getClientCodeNom();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCompanyCodeNom();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getWarehouseCodeNom();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.client.ClientWarehouseCompanyOrg.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientWarehouseCompanyOrg} returns this
 */
proto.client.ClientWarehouseCompanyOrg.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string client_id = 2;
 * @return {string}
 */
proto.client.ClientWarehouseCompanyOrg.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientWarehouseCompanyOrg} returns this
 */
proto.client.ClientWarehouseCompanyOrg.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string company_id = 3;
 * @return {string}
 */
proto.client.ClientWarehouseCompanyOrg.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientWarehouseCompanyOrg} returns this
 */
proto.client.ClientWarehouseCompanyOrg.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string warehouse_id = 4;
 * @return {string}
 */
proto.client.ClientWarehouseCompanyOrg.prototype.getWarehouseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientWarehouseCompanyOrg} returns this
 */
proto.client.ClientWarehouseCompanyOrg.prototype.setWarehouseId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string client_code_nom = 5;
 * @return {string}
 */
proto.client.ClientWarehouseCompanyOrg.prototype.getClientCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientWarehouseCompanyOrg} returns this
 */
proto.client.ClientWarehouseCompanyOrg.prototype.setClientCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string company_code_nom = 6;
 * @return {string}
 */
proto.client.ClientWarehouseCompanyOrg.prototype.getCompanyCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientWarehouseCompanyOrg} returns this
 */
proto.client.ClientWarehouseCompanyOrg.prototype.setCompanyCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string warehouse_code_nom = 7;
 * @return {string}
 */
proto.client.ClientWarehouseCompanyOrg.prototype.getWarehouseCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientWarehouseCompanyOrg} returns this
 */
proto.client.ClientWarehouseCompanyOrg.prototype.setWarehouseCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.CreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.client.CreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.CreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.CreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    entry: (f = msg.getEntry()) && proto.client.Client.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.CreateRequest}
 */
proto.client.CreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.CreateRequest;
  return proto.client.CreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.CreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.CreateRequest}
 */
proto.client.CreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.client.Client;
      reader.readMessage(value,proto.client.Client.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.CreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.CreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.CreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.CreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.client.Client.serializeBinaryToWriter
    );
  }
};


/**
 * optional Client entry = 1;
 * @return {?proto.client.Client}
 */
proto.client.CreateRequest.prototype.getEntry = function() {
  return /** @type{?proto.client.Client} */ (
    jspb.Message.getWrapperField(this, proto.client.Client, 1));
};


/**
 * @param {?proto.client.Client|undefined} value
 * @return {!proto.client.CreateRequest} returns this
*/
proto.client.CreateRequest.prototype.setEntry = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.client.CreateRequest} returns this
 */
proto.client.CreateRequest.prototype.clearEntry = function() {
  return this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.client.CreateRequest.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.GetByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.client.GetByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.GetByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.GetByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.GetByIdRequest}
 */
proto.client.GetByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.GetByIdRequest;
  return proto.client.GetByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.GetByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.GetByIdRequest}
 */
proto.client.GetByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.GetByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.GetByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.GetByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.GetByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.client.GetByIdRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.GetByIdRequest} returns this
 */
proto.client.GetByIdRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.GetByCodeNomRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.client.GetByCodeNomRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.GetByCodeNomRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.GetByCodeNomRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    codeNom: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.GetByCodeNomRequest}
 */
proto.client.GetByCodeNomRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.GetByCodeNomRequest;
  return proto.client.GetByCodeNomRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.GetByCodeNomRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.GetByCodeNomRequest}
 */
proto.client.GetByCodeNomRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodeNom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.GetByCodeNomRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.GetByCodeNomRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.GetByCodeNomRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.GetByCodeNomRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCodeNom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string code_nom = 1;
 * @return {string}
 */
proto.client.GetByCodeNomRequest.prototype.getCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.GetByCodeNomRequest} returns this
 */
proto.client.GetByCodeNomRequest.prototype.setCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.client.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    entry: (f = msg.getEntry()) && proto.client.Client.toObject(includeInstance, f),
    messageerror: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.Response}
 */
proto.client.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.Response;
  return proto.client.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.Response}
 */
proto.client.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.client.Client;
      reader.readMessage(value,proto.client.Client.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.client.Client.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Client entry = 1;
 * @return {?proto.client.Client}
 */
proto.client.Response.prototype.getEntry = function() {
  return /** @type{?proto.client.Client} */ (
    jspb.Message.getWrapperField(this, proto.client.Client, 1));
};


/**
 * @param {?proto.client.Client|undefined} value
 * @return {!proto.client.Response} returns this
*/
proto.client.Response.prototype.setEntry = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.client.Response} returns this
 */
proto.client.Response.prototype.clearEntry = function() {
  return this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.client.Response.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string messageError = 2;
 * @return {string}
 */
proto.client.Response.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.Response} returns this
 */
proto.client.Response.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.GetAllRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.client.GetAllRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.GetAllRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.GetAllRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.GetAllRequest}
 */
proto.client.GetAllRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.GetAllRequest;
  return proto.client.GetAllRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.GetAllRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.GetAllRequest}
 */
proto.client.GetAllRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.GetAllRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.GetAllRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.GetAllRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.GetAllRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 limit = 1;
 * @return {number}
 */
proto.client.GetAllRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.GetAllRequest} returns this
 */
proto.client.GetAllRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 offset = 2;
 * @return {number}
 */
proto.client.GetAllRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.GetAllRequest} returns this
 */
proto.client.GetAllRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.client.GetAllResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.GetAllResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.client.GetAllResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.GetAllResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.GetAllResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto.client.Client.toObject, includeInstance),
    metadata: (f = msg.getMetadata()) && proto.client.MetaData.toObject(includeInstance, f),
    messageerror: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.GetAllResponse}
 */
proto.client.GetAllResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.GetAllResponse;
  return proto.client.GetAllResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.GetAllResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.GetAllResponse}
 */
proto.client.GetAllResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.client.Client;
      reader.readMessage(value,proto.client.Client.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    case 2:
      var value = new proto.client.MetaData;
      reader.readMessage(value,proto.client.MetaData.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.GetAllResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.GetAllResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.GetAllResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.GetAllResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.client.Client.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.client.MetaData.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated Client entry = 1;
 * @return {!Array<!proto.client.Client>}
 */
proto.client.GetAllResponse.prototype.getEntryList = function() {
  return /** @type{!Array<!proto.client.Client>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.client.Client, 1));
};


/**
 * @param {!Array<!proto.client.Client>} value
 * @return {!proto.client.GetAllResponse} returns this
*/
proto.client.GetAllResponse.prototype.setEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.client.Client=} opt_value
 * @param {number=} opt_index
 * @return {!proto.client.Client}
 */
proto.client.GetAllResponse.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.client.Client, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.client.GetAllResponse} returns this
 */
proto.client.GetAllResponse.prototype.clearEntryList = function() {
  return this.setEntryList([]);
};


/**
 * optional MetaData metadata = 2;
 * @return {?proto.client.MetaData}
 */
proto.client.GetAllResponse.prototype.getMetadata = function() {
  return /** @type{?proto.client.MetaData} */ (
    jspb.Message.getWrapperField(this, proto.client.MetaData, 2));
};


/**
 * @param {?proto.client.MetaData|undefined} value
 * @return {!proto.client.GetAllResponse} returns this
*/
proto.client.GetAllResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.client.GetAllResponse} returns this
 */
proto.client.GetAllResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.client.GetAllResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string messageError = 3;
 * @return {string}
 */
proto.client.GetAllResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.GetAllResponse} returns this
 */
proto.client.GetAllResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.GetCompanyForCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.client.GetCompanyForCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.GetCompanyForCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.GetCompanyForCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.GetCompanyForCreateRequest}
 */
proto.client.GetCompanyForCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.GetCompanyForCreateRequest;
  return proto.client.GetCompanyForCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.GetCompanyForCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.GetCompanyForCreateRequest}
 */
proto.client.GetCompanyForCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.GetCompanyForCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.GetCompanyForCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.GetCompanyForCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.GetCompanyForCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.client.GetCompanyForCreateRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.GetCompanyForCreateRequest} returns this
 */
proto.client.GetCompanyForCreateRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.client.GetCompanyForCreateResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.GetCompanyForCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.client.GetCompanyForCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.GetCompanyForCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.GetCompanyForCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto.client.WarehouseCompany.toObject, includeInstance),
    messageerror: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.GetCompanyForCreateResponse}
 */
proto.client.GetCompanyForCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.GetCompanyForCreateResponse;
  return proto.client.GetCompanyForCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.GetCompanyForCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.GetCompanyForCreateResponse}
 */
proto.client.GetCompanyForCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.client.WarehouseCompany;
      reader.readMessage(value,proto.client.WarehouseCompany.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.GetCompanyForCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.GetCompanyForCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.GetCompanyForCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.GetCompanyForCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.client.WarehouseCompany.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated WarehouseCompany entry = 1;
 * @return {!Array<!proto.client.WarehouseCompany>}
 */
proto.client.GetCompanyForCreateResponse.prototype.getEntryList = function() {
  return /** @type{!Array<!proto.client.WarehouseCompany>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.client.WarehouseCompany, 1));
};


/**
 * @param {!Array<!proto.client.WarehouseCompany>} value
 * @return {!proto.client.GetCompanyForCreateResponse} returns this
*/
proto.client.GetCompanyForCreateResponse.prototype.setEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.client.WarehouseCompany=} opt_value
 * @param {number=} opt_index
 * @return {!proto.client.WarehouseCompany}
 */
proto.client.GetCompanyForCreateResponse.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.client.WarehouseCompany, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.client.GetCompanyForCreateResponse} returns this
 */
proto.client.GetCompanyForCreateResponse.prototype.clearEntryList = function() {
  return this.setEntryList([]);
};


/**
 * optional string messageError = 2;
 * @return {string}
 */
proto.client.GetCompanyForCreateResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.GetCompanyForCreateResponse} returns this
 */
proto.client.GetCompanyForCreateResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.client.GetAllClientRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.GetAllClientRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.client.GetAllClientRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.GetAllClientRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.GetAllClientRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    role: jspb.Message.getFieldWithDefault(msg, 3, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    arraypayloadList: jspb.Message.toObjectList(msg.getArraypayloadList(),
    proto.client.CompanyWarehouseArrayPayload.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.GetAllClientRequest}
 */
proto.client.GetAllClientRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.GetAllClientRequest;
  return proto.client.GetAllClientRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.GetAllClientRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.GetAllClientRequest}
 */
proto.client.GetAllClientRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 5:
      var value = new proto.client.CompanyWarehouseArrayPayload;
      reader.readMessage(value,proto.client.CompanyWarehouseArrayPayload.deserializeBinaryFromReader);
      msg.addArraypayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.GetAllClientRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.GetAllClientRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.GetAllClientRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.GetAllClientRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getArraypayloadList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.client.CompanyWarehouseArrayPayload.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 limit = 1;
 * @return {number}
 */
proto.client.GetAllClientRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.GetAllClientRequest} returns this
 */
proto.client.GetAllClientRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.client.GetAllClientRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.GetAllClientRequest} returns this
 */
proto.client.GetAllClientRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string role = 3;
 * @return {string}
 */
proto.client.GetAllClientRequest.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.GetAllClientRequest} returns this
 */
proto.client.GetAllClientRequest.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string user_id = 4;
 * @return {string}
 */
proto.client.GetAllClientRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.GetAllClientRequest} returns this
 */
proto.client.GetAllClientRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated CompanyWarehouseArrayPayload ArrayPayload = 5;
 * @return {!Array<!proto.client.CompanyWarehouseArrayPayload>}
 */
proto.client.GetAllClientRequest.prototype.getArraypayloadList = function() {
  return /** @type{!Array<!proto.client.CompanyWarehouseArrayPayload>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.client.CompanyWarehouseArrayPayload, 5));
};


/**
 * @param {!Array<!proto.client.CompanyWarehouseArrayPayload>} value
 * @return {!proto.client.GetAllClientRequest} returns this
*/
proto.client.GetAllClientRequest.prototype.setArraypayloadList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.client.CompanyWarehouseArrayPayload=} opt_value
 * @param {number=} opt_index
 * @return {!proto.client.CompanyWarehouseArrayPayload}
 */
proto.client.GetAllClientRequest.prototype.addArraypayload = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.client.CompanyWarehouseArrayPayload, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.client.GetAllClientRequest} returns this
 */
proto.client.GetAllClientRequest.prototype.clearArraypayloadList = function() {
  return this.setArraypayloadList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.CompanyWarehouseArrayPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.client.CompanyWarehouseArrayPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.CompanyWarehouseArrayPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.CompanyWarehouseArrayPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyCodeNom: jspb.Message.getFieldWithDefault(msg, 1, ""),
    warehouseCodeNom: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.CompanyWarehouseArrayPayload}
 */
proto.client.CompanyWarehouseArrayPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.CompanyWarehouseArrayPayload;
  return proto.client.CompanyWarehouseArrayPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.CompanyWarehouseArrayPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.CompanyWarehouseArrayPayload}
 */
proto.client.CompanyWarehouseArrayPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyCodeNom(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseCodeNom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.CompanyWarehouseArrayPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.CompanyWarehouseArrayPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.CompanyWarehouseArrayPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.CompanyWarehouseArrayPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyCodeNom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWarehouseCodeNom();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string company_code_nom = 1;
 * @return {string}
 */
proto.client.CompanyWarehouseArrayPayload.prototype.getCompanyCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.CompanyWarehouseArrayPayload} returns this
 */
proto.client.CompanyWarehouseArrayPayload.prototype.setCompanyCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string warehouse_code_nom = 2;
 * @return {string}
 */
proto.client.CompanyWarehouseArrayPayload.prototype.getWarehouseCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.CompanyWarehouseArrayPayload} returns this
 */
proto.client.CompanyWarehouseArrayPayload.prototype.setWarehouseCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.CommonItemResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.client.CommonItemResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.CommonItemResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.CommonItemResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    codeNom: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.CommonItemResponse}
 */
proto.client.CommonItemResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.CommonItemResponse;
  return proto.client.CommonItemResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.CommonItemResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.CommonItemResponse}
 */
proto.client.CommonItemResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodeNom(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.CommonItemResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.CommonItemResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.CommonItemResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.CommonItemResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCodeNom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string code_nom = 1;
 * @return {string}
 */
proto.client.CommonItemResponse.prototype.getCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.CommonItemResponse} returns this
 */
proto.client.CommonItemResponse.prototype.setCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.client.CommonItemResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.CommonItemResponse} returns this
 */
proto.client.CommonItemResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.client.ClientArrayResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.ClientArrayResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.client.ClientArrayResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.ClientArrayResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.ClientArrayResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto.client.UserSettingRespponse.toObject, includeInstance),
    messageerror: jspb.Message.getFieldWithDefault(msg, 2, ""),
    metaData: (f = msg.getMetaData()) && proto.client.MetaData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.ClientArrayResponse}
 */
proto.client.ClientArrayResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.ClientArrayResponse;
  return proto.client.ClientArrayResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.ClientArrayResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.ClientArrayResponse}
 */
proto.client.ClientArrayResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.client.UserSettingRespponse;
      reader.readMessage(value,proto.client.UserSettingRespponse.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    case 3:
      var value = new proto.client.MetaData;
      reader.readMessage(value,proto.client.MetaData.deserializeBinaryFromReader);
      msg.setMetaData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.ClientArrayResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.ClientArrayResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.ClientArrayResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.ClientArrayResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.client.UserSettingRespponse.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMetaData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.client.MetaData.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UserSettingRespponse entry = 1;
 * @return {!Array<!proto.client.UserSettingRespponse>}
 */
proto.client.ClientArrayResponse.prototype.getEntryList = function() {
  return /** @type{!Array<!proto.client.UserSettingRespponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.client.UserSettingRespponse, 1));
};


/**
 * @param {!Array<!proto.client.UserSettingRespponse>} value
 * @return {!proto.client.ClientArrayResponse} returns this
*/
proto.client.ClientArrayResponse.prototype.setEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.client.UserSettingRespponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.client.UserSettingRespponse}
 */
proto.client.ClientArrayResponse.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.client.UserSettingRespponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.client.ClientArrayResponse} returns this
 */
proto.client.ClientArrayResponse.prototype.clearEntryList = function() {
  return this.setEntryList([]);
};


/**
 * optional string messageError = 2;
 * @return {string}
 */
proto.client.ClientArrayResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientArrayResponse} returns this
 */
proto.client.ClientArrayResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional MetaData meta_data = 3;
 * @return {?proto.client.MetaData}
 */
proto.client.ClientArrayResponse.prototype.getMetaData = function() {
  return /** @type{?proto.client.MetaData} */ (
    jspb.Message.getWrapperField(this, proto.client.MetaData, 3));
};


/**
 * @param {?proto.client.MetaData|undefined} value
 * @return {!proto.client.ClientArrayResponse} returns this
*/
proto.client.ClientArrayResponse.prototype.setMetaData = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.client.ClientArrayResponse} returns this
 */
proto.client.ClientArrayResponse.prototype.clearMetaData = function() {
  return this.setMetaData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.client.ClientArrayResponse.prototype.hasMetaData = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.UserSettingRespponse.prototype.toObject = function(opt_includeInstance) {
  return proto.client.UserSettingRespponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.UserSettingRespponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.UserSettingRespponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    client: (f = msg.getClient()) && proto.client.CommonItemResponse.toObject(includeInstance, f),
    company: (f = msg.getCompany()) && proto.client.CommonItemResponse.toObject(includeInstance, f),
    warehouse: (f = msg.getWarehouse()) && proto.client.CommonItemResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.UserSettingRespponse}
 */
proto.client.UserSettingRespponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.UserSettingRespponse;
  return proto.client.UserSettingRespponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.UserSettingRespponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.UserSettingRespponse}
 */
proto.client.UserSettingRespponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.client.CommonItemResponse;
      reader.readMessage(value,proto.client.CommonItemResponse.deserializeBinaryFromReader);
      msg.setClient(value);
      break;
    case 2:
      var value = new proto.client.CommonItemResponse;
      reader.readMessage(value,proto.client.CommonItemResponse.deserializeBinaryFromReader);
      msg.setCompany(value);
      break;
    case 3:
      var value = new proto.client.CommonItemResponse;
      reader.readMessage(value,proto.client.CommonItemResponse.deserializeBinaryFromReader);
      msg.setWarehouse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.UserSettingRespponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.UserSettingRespponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.UserSettingRespponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.UserSettingRespponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClient();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.client.CommonItemResponse.serializeBinaryToWriter
    );
  }
  f = message.getCompany();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.client.CommonItemResponse.serializeBinaryToWriter
    );
  }
  f = message.getWarehouse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.client.CommonItemResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional CommonItemResponse client = 1;
 * @return {?proto.client.CommonItemResponse}
 */
proto.client.UserSettingRespponse.prototype.getClient = function() {
  return /** @type{?proto.client.CommonItemResponse} */ (
    jspb.Message.getWrapperField(this, proto.client.CommonItemResponse, 1));
};


/**
 * @param {?proto.client.CommonItemResponse|undefined} value
 * @return {!proto.client.UserSettingRespponse} returns this
*/
proto.client.UserSettingRespponse.prototype.setClient = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.client.UserSettingRespponse} returns this
 */
proto.client.UserSettingRespponse.prototype.clearClient = function() {
  return this.setClient(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.client.UserSettingRespponse.prototype.hasClient = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CommonItemResponse company = 2;
 * @return {?proto.client.CommonItemResponse}
 */
proto.client.UserSettingRespponse.prototype.getCompany = function() {
  return /** @type{?proto.client.CommonItemResponse} */ (
    jspb.Message.getWrapperField(this, proto.client.CommonItemResponse, 2));
};


/**
 * @param {?proto.client.CommonItemResponse|undefined} value
 * @return {!proto.client.UserSettingRespponse} returns this
*/
proto.client.UserSettingRespponse.prototype.setCompany = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.client.UserSettingRespponse} returns this
 */
proto.client.UserSettingRespponse.prototype.clearCompany = function() {
  return this.setCompany(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.client.UserSettingRespponse.prototype.hasCompany = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional CommonItemResponse warehouse = 3;
 * @return {?proto.client.CommonItemResponse}
 */
proto.client.UserSettingRespponse.prototype.getWarehouse = function() {
  return /** @type{?proto.client.CommonItemResponse} */ (
    jspb.Message.getWrapperField(this, proto.client.CommonItemResponse, 3));
};


/**
 * @param {?proto.client.CommonItemResponse|undefined} value
 * @return {!proto.client.UserSettingRespponse} returns this
*/
proto.client.UserSettingRespponse.prototype.setWarehouse = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.client.UserSettingRespponse} returns this
 */
proto.client.UserSettingRespponse.prototype.clearWarehouse = function() {
  return this.setWarehouse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.client.UserSettingRespponse.prototype.hasWarehouse = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.client.GetAllCompanyWarehouseRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.GetAllCompanyWarehouseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.client.GetAllCompanyWarehouseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.GetAllCompanyWarehouseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.GetAllCompanyWarehouseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    role: jspb.Message.getFieldWithDefault(msg, 3, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    arraypayloadList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.GetAllCompanyWarehouseRequest}
 */
proto.client.GetAllCompanyWarehouseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.GetAllCompanyWarehouseRequest;
  return proto.client.GetAllCompanyWarehouseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.GetAllCompanyWarehouseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.GetAllCompanyWarehouseRequest}
 */
proto.client.GetAllCompanyWarehouseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addArraypayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.GetAllCompanyWarehouseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.GetAllCompanyWarehouseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.GetAllCompanyWarehouseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.GetAllCompanyWarehouseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getArraypayloadList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
};


/**
 * optional int64 limit = 1;
 * @return {number}
 */
proto.client.GetAllCompanyWarehouseRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.GetAllCompanyWarehouseRequest} returns this
 */
proto.client.GetAllCompanyWarehouseRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.client.GetAllCompanyWarehouseRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.GetAllCompanyWarehouseRequest} returns this
 */
proto.client.GetAllCompanyWarehouseRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string role = 3;
 * @return {string}
 */
proto.client.GetAllCompanyWarehouseRequest.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.GetAllCompanyWarehouseRequest} returns this
 */
proto.client.GetAllCompanyWarehouseRequest.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string user_id = 4;
 * @return {string}
 */
proto.client.GetAllCompanyWarehouseRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.GetAllCompanyWarehouseRequest} returns this
 */
proto.client.GetAllCompanyWarehouseRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string ArrayPayload = 5;
 * @return {!Array<string>}
 */
proto.client.GetAllCompanyWarehouseRequest.prototype.getArraypayloadList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.client.GetAllCompanyWarehouseRequest} returns this
 */
proto.client.GetAllCompanyWarehouseRequest.prototype.setArraypayloadList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.client.GetAllCompanyWarehouseRequest} returns this
 */
proto.client.GetAllCompanyWarehouseRequest.prototype.addArraypayload = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.client.GetAllCompanyWarehouseRequest} returns this
 */
proto.client.GetAllCompanyWarehouseRequest.prototype.clearArraypayloadList = function() {
  return this.setArraypayloadList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.GetByContentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.client.GetByContentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.GetByContentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.GetByContentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paging: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    content: jspb.Message.getFieldWithDefault(msg, 3, ""),
    warehouseCodeNom: jspb.Message.getFieldWithDefault(msg, 4, ""),
    companyCodeNom: jspb.Message.getFieldWithDefault(msg, 5, ""),
    warehouseId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    companyId: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.GetByContentRequest}
 */
proto.client.GetByContentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.GetByContentRequest;
  return proto.client.GetByContentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.GetByContentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.GetByContentRequest}
 */
proto.client.GetByContentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaging(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseCodeNom(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyCodeNom(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouseId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.GetByContentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.GetByContentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.GetByContentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.GetByContentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaging();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWarehouseCodeNom();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCompanyCodeNom();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getWarehouseId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional int32 paging = 1;
 * @return {number}
 */
proto.client.GetByContentRequest.prototype.getPaging = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.GetByContentRequest} returns this
 */
proto.client.GetByContentRequest.prototype.setPaging = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 page_size = 2;
 * @return {number}
 */
proto.client.GetByContentRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.GetByContentRequest} returns this
 */
proto.client.GetByContentRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string content = 3;
 * @return {string}
 */
proto.client.GetByContentRequest.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.GetByContentRequest} returns this
 */
proto.client.GetByContentRequest.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string warehouse_code_nom = 4;
 * @return {string}
 */
proto.client.GetByContentRequest.prototype.getWarehouseCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.GetByContentRequest} returns this
 */
proto.client.GetByContentRequest.prototype.setWarehouseCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string company_code_nom = 5;
 * @return {string}
 */
proto.client.GetByContentRequest.prototype.getCompanyCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.GetByContentRequest} returns this
 */
proto.client.GetByContentRequest.prototype.setCompanyCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string warehouse_id = 6;
 * @return {string}
 */
proto.client.GetByContentRequest.prototype.getWarehouseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.GetByContentRequest} returns this
 */
proto.client.GetByContentRequest.prototype.setWarehouseId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string company_id = 7;
 * @return {string}
 */
proto.client.GetByContentRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.GetByContentRequest} returns this
 */
proto.client.GetByContentRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.ClientMinimalDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.client.ClientMinimalDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.ClientMinimalDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.ClientMinimalDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    codeNom: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.ClientMinimalDetail}
 */
proto.client.ClientMinimalDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.ClientMinimalDetail;
  return proto.client.ClientMinimalDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.ClientMinimalDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.ClientMinimalDetail}
 */
proto.client.ClientMinimalDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodeNom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.ClientMinimalDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.ClientMinimalDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.ClientMinimalDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.ClientMinimalDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCodeNom();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.client.ClientMinimalDetail.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientMinimalDetail} returns this
 */
proto.client.ClientMinimalDetail.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string code_nom = 2;
 * @return {string}
 */
proto.client.ClientMinimalDetail.prototype.getCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientMinimalDetail} returns this
 */
proto.client.ClientMinimalDetail.prototype.setCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.client.GetByContentResponse.repeatedFields_ = [1,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.GetByContentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.client.GetByContentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.GetByContentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.GetByContentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientCodeNomsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    metadata: (f = msg.getMetadata()) && proto.client.MetaData.toObject(includeInstance, f),
    messageerror: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientIdsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    clientList: jspb.Message.toObjectList(msg.getClientList(),
    proto.client.ClientMinimalDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.GetByContentResponse}
 */
proto.client.GetByContentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.GetByContentResponse;
  return proto.client.GetByContentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.GetByContentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.GetByContentResponse}
 */
proto.client.GetByContentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addClientCodeNoms(value);
      break;
    case 2:
      var value = new proto.client.MetaData;
      reader.readMessage(value,proto.client.MetaData.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addClientIds(value);
      break;
    case 5:
      var value = new proto.client.ClientMinimalDetail;
      reader.readMessage(value,proto.client.ClientMinimalDetail.deserializeBinaryFromReader);
      msg.addClient(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.GetByContentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.GetByContentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.GetByContentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.GetByContentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientCodeNomsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.client.MetaData.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getClientList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.client.ClientMinimalDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string client_code_noms = 1;
 * @return {!Array<string>}
 */
proto.client.GetByContentResponse.prototype.getClientCodeNomsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.client.GetByContentResponse} returns this
 */
proto.client.GetByContentResponse.prototype.setClientCodeNomsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.client.GetByContentResponse} returns this
 */
proto.client.GetByContentResponse.prototype.addClientCodeNoms = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.client.GetByContentResponse} returns this
 */
proto.client.GetByContentResponse.prototype.clearClientCodeNomsList = function() {
  return this.setClientCodeNomsList([]);
};


/**
 * optional MetaData metadata = 2;
 * @return {?proto.client.MetaData}
 */
proto.client.GetByContentResponse.prototype.getMetadata = function() {
  return /** @type{?proto.client.MetaData} */ (
    jspb.Message.getWrapperField(this, proto.client.MetaData, 2));
};


/**
 * @param {?proto.client.MetaData|undefined} value
 * @return {!proto.client.GetByContentResponse} returns this
*/
proto.client.GetByContentResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.client.GetByContentResponse} returns this
 */
proto.client.GetByContentResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.client.GetByContentResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string messageError = 3;
 * @return {string}
 */
proto.client.GetByContentResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.GetByContentResponse} returns this
 */
proto.client.GetByContentResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string client_ids = 4;
 * @return {!Array<string>}
 */
proto.client.GetByContentResponse.prototype.getClientIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.client.GetByContentResponse} returns this
 */
proto.client.GetByContentResponse.prototype.setClientIdsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.client.GetByContentResponse} returns this
 */
proto.client.GetByContentResponse.prototype.addClientIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.client.GetByContentResponse} returns this
 */
proto.client.GetByContentResponse.prototype.clearClientIdsList = function() {
  return this.setClientIdsList([]);
};


/**
 * repeated ClientMinimalDetail client = 5;
 * @return {!Array<!proto.client.ClientMinimalDetail>}
 */
proto.client.GetByContentResponse.prototype.getClientList = function() {
  return /** @type{!Array<!proto.client.ClientMinimalDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.client.ClientMinimalDetail, 5));
};


/**
 * @param {!Array<!proto.client.ClientMinimalDetail>} value
 * @return {!proto.client.GetByContentResponse} returns this
*/
proto.client.GetByContentResponse.prototype.setClientList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.client.ClientMinimalDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.client.ClientMinimalDetail}
 */
proto.client.GetByContentResponse.prototype.addClient = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.client.ClientMinimalDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.client.GetByContentResponse} returns this
 */
proto.client.GetByContentResponse.prototype.clearClientList = function() {
  return this.setClientList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.client.ListClientByCompanyIdsRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.ListClientByCompanyIdsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.client.ListClientByCompanyIdsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.ListClientByCompanyIdsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.ListClientByCompanyIdsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    page: jspb.Message.getFieldWithDefault(msg, 2, 0),
    companyIdsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.ListClientByCompanyIdsRequest}
 */
proto.client.ListClientByCompanyIdsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.ListClientByCompanyIdsRequest;
  return proto.client.ListClientByCompanyIdsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.ListClientByCompanyIdsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.ListClientByCompanyIdsRequest}
 */
proto.client.ListClientByCompanyIdsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addCompanyIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.ListClientByCompanyIdsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.ListClientByCompanyIdsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.ListClientByCompanyIdsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.ListClientByCompanyIdsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCompanyIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional int32 limit = 1;
 * @return {number}
 */
proto.client.ListClientByCompanyIdsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.ListClientByCompanyIdsRequest} returns this
 */
proto.client.ListClientByCompanyIdsRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 page = 2;
 * @return {number}
 */
proto.client.ListClientByCompanyIdsRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.ListClientByCompanyIdsRequest} returns this
 */
proto.client.ListClientByCompanyIdsRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated string company_ids = 3;
 * @return {!Array<string>}
 */
proto.client.ListClientByCompanyIdsRequest.prototype.getCompanyIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.client.ListClientByCompanyIdsRequest} returns this
 */
proto.client.ListClientByCompanyIdsRequest.prototype.setCompanyIdsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.client.ListClientByCompanyIdsRequest} returns this
 */
proto.client.ListClientByCompanyIdsRequest.prototype.addCompanyIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.client.ListClientByCompanyIdsRequest} returns this
 */
proto.client.ListClientByCompanyIdsRequest.prototype.clearCompanyIdsList = function() {
  return this.setCompanyIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.ClientInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.client.ClientInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.ClientInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.ClientInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    codeNom: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.ClientInfo}
 */
proto.client.ClientInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.ClientInfo;
  return proto.client.ClientInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.ClientInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.ClientInfo}
 */
proto.client.ClientInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodeNom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.ClientInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.ClientInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.ClientInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.ClientInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCodeNom();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.client.ClientInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientInfo} returns this
 */
proto.client.ClientInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string code_nom = 2;
 * @return {string}
 */
proto.client.ClientInfo.prototype.getCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ClientInfo} returns this
 */
proto.client.ClientInfo.prototype.setCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.client.ListClientByCompanyIdsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.ListClientByCompanyIdsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.client.ListClientByCompanyIdsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.ListClientByCompanyIdsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.ListClientByCompanyIdsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    listList: jspb.Message.toObjectList(msg.getListList(),
    proto.client.ClientInfo.toObject, includeInstance),
    messageerror: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.ListClientByCompanyIdsResponse}
 */
proto.client.ListClientByCompanyIdsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.ListClientByCompanyIdsResponse;
  return proto.client.ListClientByCompanyIdsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.ListClientByCompanyIdsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.ListClientByCompanyIdsResponse}
 */
proto.client.ListClientByCompanyIdsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.client.ClientInfo;
      reader.readMessage(value,proto.client.ClientInfo.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.ListClientByCompanyIdsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.ListClientByCompanyIdsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.ListClientByCompanyIdsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.ListClientByCompanyIdsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.client.ClientInfo.serializeBinaryToWriter
    );
  }
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated ClientInfo list = 1;
 * @return {!Array<!proto.client.ClientInfo>}
 */
proto.client.ListClientByCompanyIdsResponse.prototype.getListList = function() {
  return /** @type{!Array<!proto.client.ClientInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.client.ClientInfo, 1));
};


/**
 * @param {!Array<!proto.client.ClientInfo>} value
 * @return {!proto.client.ListClientByCompanyIdsResponse} returns this
*/
proto.client.ListClientByCompanyIdsResponse.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.client.ClientInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.client.ClientInfo}
 */
proto.client.ListClientByCompanyIdsResponse.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.client.ClientInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.client.ListClientByCompanyIdsResponse} returns this
 */
proto.client.ListClientByCompanyIdsResponse.prototype.clearListList = function() {
  return this.setListList([]);
};


/**
 * optional string messageError = 2;
 * @return {string}
 */
proto.client.ListClientByCompanyIdsResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.ListClientByCompanyIdsResponse} returns this
 */
proto.client.ListClientByCompanyIdsResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.client.UpdateOneRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.UpdateOneRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.client.UpdateOneRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.UpdateOneRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.UpdateOneRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    client: (f = msg.getClient()) && proto.client.Client.toObject(includeInstance, f),
    idsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.UpdateOneRequest}
 */
proto.client.UpdateOneRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.UpdateOneRequest;
  return proto.client.UpdateOneRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.UpdateOneRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.UpdateOneRequest}
 */
proto.client.UpdateOneRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.client.Client;
      reader.readMessage(value,proto.client.Client.deserializeBinaryFromReader);
      msg.setClient(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.UpdateOneRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.UpdateOneRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.UpdateOneRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.UpdateOneRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClient();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.client.Client.serializeBinaryToWriter
    );
  }
  f = message.getIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional Client client = 1;
 * @return {?proto.client.Client}
 */
proto.client.UpdateOneRequest.prototype.getClient = function() {
  return /** @type{?proto.client.Client} */ (
    jspb.Message.getWrapperField(this, proto.client.Client, 1));
};


/**
 * @param {?proto.client.Client|undefined} value
 * @return {!proto.client.UpdateOneRequest} returns this
*/
proto.client.UpdateOneRequest.prototype.setClient = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.client.UpdateOneRequest} returns this
 */
proto.client.UpdateOneRequest.prototype.clearClient = function() {
  return this.setClient(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.client.UpdateOneRequest.prototype.hasClient = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string ids = 2;
 * @return {!Array<string>}
 */
proto.client.UpdateOneRequest.prototype.getIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.client.UpdateOneRequest} returns this
 */
proto.client.UpdateOneRequest.prototype.setIdsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.client.UpdateOneRequest} returns this
 */
proto.client.UpdateOneRequest.prototype.addIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.client.UpdateOneRequest} returns this
 */
proto.client.UpdateOneRequest.prototype.clearIdsList = function() {
  return this.setIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.UpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.client.UpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.UpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.UpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageerror: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.UpdateResponse}
 */
proto.client.UpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.UpdateResponse;
  return proto.client.UpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.UpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.UpdateResponse}
 */
proto.client.UpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.UpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.UpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.UpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.UpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string messageError = 1;
 * @return {string}
 */
proto.client.UpdateResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.UpdateResponse} returns this
 */
proto.client.UpdateResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.client.UpdateResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.UpdateResponse} returns this
 */
proto.client.UpdateResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.DeleteOneRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.client.DeleteOneRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.DeleteOneRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.DeleteOneRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.DeleteOneRequest}
 */
proto.client.DeleteOneRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.DeleteOneRequest;
  return proto.client.DeleteOneRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.DeleteOneRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.DeleteOneRequest}
 */
proto.client.DeleteOneRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.DeleteOneRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.DeleteOneRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.DeleteOneRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.DeleteOneRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.client.DeleteOneRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.DeleteOneRequest} returns this
 */
proto.client.DeleteOneRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.client.DeleteManyRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.DeleteManyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.client.DeleteManyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.DeleteManyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.DeleteManyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    idsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.DeleteManyRequest}
 */
proto.client.DeleteManyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.DeleteManyRequest;
  return proto.client.DeleteManyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.DeleteManyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.DeleteManyRequest}
 */
proto.client.DeleteManyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.DeleteManyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.DeleteManyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.DeleteManyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.DeleteManyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string ids = 1;
 * @return {!Array<string>}
 */
proto.client.DeleteManyRequest.prototype.getIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.client.DeleteManyRequest} returns this
 */
proto.client.DeleteManyRequest.prototype.setIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.client.DeleteManyRequest} returns this
 */
proto.client.DeleteManyRequest.prototype.addIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.client.DeleteManyRequest} returns this
 */
proto.client.DeleteManyRequest.prototype.clearIdsList = function() {
  return this.setIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.DeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.client.DeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.DeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.DeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageerror: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.DeleteResponse}
 */
proto.client.DeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.DeleteResponse;
  return proto.client.DeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.DeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.DeleteResponse}
 */
proto.client.DeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageerror(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.DeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.DeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.DeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.DeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageerror();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string messageError = 1;
 * @return {string}
 */
proto.client.DeleteResponse.prototype.getMessageerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.DeleteResponse} returns this
 */
proto.client.DeleteResponse.prototype.setMessageerror = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.client.DeleteResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.DeleteResponse} returns this
 */
proto.client.DeleteResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.client);
