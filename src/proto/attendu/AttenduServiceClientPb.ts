/**
 * @fileoverview gRPC-Web generated client stub for attendu
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.21.12
// source: proto/attendu/attendu.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as proto_attendu_attendu_pb from '../../proto/attendu/attendu_pb'; // proto import: "proto/attendu/attendu.proto"
import * as proto_export_export_pb from '../../proto/export/export_pb'; // proto import: "proto/export/export.proto"


export class AttenduServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreate = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/Create',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.AttenduRequest,
    proto_attendu_attendu_pb.AttenduResponse,
    (request: proto_attendu_attendu_pb.AttenduRequest) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.AttenduResponse.deserializeBinary
  );

  create(
    request: proto_attendu_attendu_pb.AttenduRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.AttenduResponse>;

  create(
    request: proto_attendu_attendu_pb.AttenduRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.AttenduResponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.AttenduResponse>;

  create(
    request: proto_attendu_attendu_pb.AttenduRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.AttenduResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/Create',
        request,
        metadata || {},
        this.methodDescriptorCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/Create',
    request,
    metadata || {},
    this.methodDescriptorCreate);
  }

  methodDescriptorGetAll = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/GetAll',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.GetAllRequest,
    proto_attendu_attendu_pb.GetAllResponse,
    (request: proto_attendu_attendu_pb.GetAllRequest) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.GetAllResponse.deserializeBinary
  );

  getAll(
    request: proto_attendu_attendu_pb.GetAllRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.GetAllResponse>;

  getAll(
    request: proto_attendu_attendu_pb.GetAllRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.GetAllResponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.GetAllResponse>;

  getAll(
    request: proto_attendu_attendu_pb.GetAllRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.GetAllResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/GetAll',
        request,
        metadata || {},
        this.methodDescriptorGetAll,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/GetAll',
    request,
    metadata || {},
    this.methodDescriptorGetAll);
  }

  methodDescriptorUpdateByID = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/UpdateByID',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.UpdateAttenduRequest,
    proto_attendu_attendu_pb.AttenduResponse,
    (request: proto_attendu_attendu_pb.UpdateAttenduRequest) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.AttenduResponse.deserializeBinary
  );

  updateByID(
    request: proto_attendu_attendu_pb.UpdateAttenduRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.AttenduResponse>;

  updateByID(
    request: proto_attendu_attendu_pb.UpdateAttenduRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.AttenduResponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.AttenduResponse>;

  updateByID(
    request: proto_attendu_attendu_pb.UpdateAttenduRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.AttenduResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/UpdateByID',
        request,
        metadata || {},
        this.methodDescriptorUpdateByID,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/UpdateByID',
    request,
    metadata || {},
    this.methodDescriptorUpdateByID);
  }

  methodDescriptorUpdatePatch = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/UpdatePatch',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.AttenduRequest,
    proto_attendu_attendu_pb.AttenduResponse,
    (request: proto_attendu_attendu_pb.AttenduRequest) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.AttenduResponse.deserializeBinary
  );

  updatePatch(
    request: proto_attendu_attendu_pb.AttenduRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.AttenduResponse>;

  updatePatch(
    request: proto_attendu_attendu_pb.AttenduRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.AttenduResponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.AttenduResponse>;

  updatePatch(
    request: proto_attendu_attendu_pb.AttenduRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.AttenduResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/UpdatePatch',
        request,
        metadata || {},
        this.methodDescriptorUpdatePatch,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/UpdatePatch',
    request,
    metadata || {},
    this.methodDescriptorUpdatePatch);
  }

  methodDescriptorGetByID = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/GetByID',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.GetByIdAttenduRequest,
    proto_attendu_attendu_pb.AttenduResponse,
    (request: proto_attendu_attendu_pb.GetByIdAttenduRequest) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.AttenduResponse.deserializeBinary
  );

  getByID(
    request: proto_attendu_attendu_pb.GetByIdAttenduRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.AttenduResponse>;

  getByID(
    request: proto_attendu_attendu_pb.GetByIdAttenduRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.AttenduResponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.AttenduResponse>;

  getByID(
    request: proto_attendu_attendu_pb.GetByIdAttenduRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.AttenduResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/GetByID',
        request,
        metadata || {},
        this.methodDescriptorGetByID,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/GetByID',
    request,
    metadata || {},
    this.methodDescriptorGetByID);
  }

  methodDescriptorDeleteByID = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/DeleteByID',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.DeleteByIdAttenduRequest,
    proto_attendu_attendu_pb.AttenduResponse,
    (request: proto_attendu_attendu_pb.DeleteByIdAttenduRequest) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.AttenduResponse.deserializeBinary
  );

  deleteByID(
    request: proto_attendu_attendu_pb.DeleteByIdAttenduRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.AttenduResponse>;

  deleteByID(
    request: proto_attendu_attendu_pb.DeleteByIdAttenduRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.AttenduResponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.AttenduResponse>;

  deleteByID(
    request: proto_attendu_attendu_pb.DeleteByIdAttenduRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.AttenduResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/DeleteByID',
        request,
        metadata || {},
        this.methodDescriptorDeleteByID,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/DeleteByID',
    request,
    metadata || {},
    this.methodDescriptorDeleteByID);
  }

  methodDescriptorDeleteFile = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/DeleteFile',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.DeleteFileRequest,
    proto_attendu_attendu_pb.AttFileReponse,
    (request: proto_attendu_attendu_pb.DeleteFileRequest) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.AttFileReponse.deserializeBinary
  );

  deleteFile(
    request: proto_attendu_attendu_pb.DeleteFileRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.AttFileReponse>;

  deleteFile(
    request: proto_attendu_attendu_pb.DeleteFileRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.AttFileReponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.AttFileReponse>;

  deleteFile(
    request: proto_attendu_attendu_pb.DeleteFileRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.AttFileReponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/DeleteFile',
        request,
        metadata || {},
        this.methodDescriptorDeleteFile,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/DeleteFile',
    request,
    metadata || {},
    this.methodDescriptorDeleteFile);
  }

  methodDescriptorGetAllFiles = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/GetAllFiles',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.GetFilesInAtt,
    proto_attendu_attendu_pb.GetFilesInAttReponse,
    (request: proto_attendu_attendu_pb.GetFilesInAtt) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.GetFilesInAttReponse.deserializeBinary
  );

  getAllFiles(
    request: proto_attendu_attendu_pb.GetFilesInAtt,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.GetFilesInAttReponse>;

  getAllFiles(
    request: proto_attendu_attendu_pb.GetFilesInAtt,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.GetFilesInAttReponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.GetFilesInAttReponse>;

  getAllFiles(
    request: proto_attendu_attendu_pb.GetFilesInAtt,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.GetFilesInAttReponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/GetAllFiles',
        request,
        metadata || {},
        this.methodDescriptorGetAllFiles,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/GetAllFiles',
    request,
    metadata || {},
    this.methodDescriptorGetAllFiles);
  }

  methodDescriptorUploadFile = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/UploadFile',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.UploadNewFileRequest,
    proto_attendu_attendu_pb.AttFileReponse,
    (request: proto_attendu_attendu_pb.UploadNewFileRequest) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.AttFileReponse.deserializeBinary
  );

  uploadFile(
    request: proto_attendu_attendu_pb.UploadNewFileRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.AttFileReponse>;

  uploadFile(
    request: proto_attendu_attendu_pb.UploadNewFileRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.AttFileReponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.AttFileReponse>;

  uploadFile(
    request: proto_attendu_attendu_pb.UploadNewFileRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.AttFileReponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/UploadFile',
        request,
        metadata || {},
        this.methodDescriptorUploadFile,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/UploadFile',
    request,
    metadata || {},
    this.methodDescriptorUploadFile);
  }

  methodDescriptorUploadMultiFile = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/UploadMultiFile',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.UploadMultiFileRequest,
    proto_attendu_attendu_pb.UploadMultiFileResponse,
    (request: proto_attendu_attendu_pb.UploadMultiFileRequest) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.UploadMultiFileResponse.deserializeBinary
  );

  uploadMultiFile(
    request: proto_attendu_attendu_pb.UploadMultiFileRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.UploadMultiFileResponse>;

  uploadMultiFile(
    request: proto_attendu_attendu_pb.UploadMultiFileRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.UploadMultiFileResponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.UploadMultiFileResponse>;

  uploadMultiFile(
    request: proto_attendu_attendu_pb.UploadMultiFileRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.UploadMultiFileResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/UploadMultiFile',
        request,
        metadata || {},
        this.methodDescriptorUploadMultiFile,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/UploadMultiFile',
    request,
    metadata || {},
    this.methodDescriptorUploadMultiFile);
  }

  methodDescriptorGetFileById = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/GetFileById',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.GetFileByIdRequest,
    proto_attendu_attendu_pb.AttFileReponse,
    (request: proto_attendu_attendu_pb.GetFileByIdRequest) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.AttFileReponse.deserializeBinary
  );

  getFileById(
    request: proto_attendu_attendu_pb.GetFileByIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.AttFileReponse>;

  getFileById(
    request: proto_attendu_attendu_pb.GetFileByIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.AttFileReponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.AttFileReponse>;

  getFileById(
    request: proto_attendu_attendu_pb.GetFileByIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.AttFileReponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/GetFileById',
        request,
        metadata || {},
        this.methodDescriptorGetFileById,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/GetFileById',
    request,
    metadata || {},
    this.methodDescriptorGetFileById);
  }

  methodDescriptorGetFileByName = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/GetFileByName',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.GetFileByNameRequest,
    proto_attendu_attendu_pb.AttFileReponse,
    (request: proto_attendu_attendu_pb.GetFileByNameRequest) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.AttFileReponse.deserializeBinary
  );

  getFileByName(
    request: proto_attendu_attendu_pb.GetFileByNameRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.AttFileReponse>;

  getFileByName(
    request: proto_attendu_attendu_pb.GetFileByNameRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.AttFileReponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.AttFileReponse>;

  getFileByName(
    request: proto_attendu_attendu_pb.GetFileByNameRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.AttFileReponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/GetFileByName',
        request,
        metadata || {},
        this.methodDescriptorGetFileByName,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/GetFileByName',
    request,
    metadata || {},
    this.methodDescriptorGetFileByName);
  }

  methodDescriptorGetMission = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/GetMission',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.GetMissionRequest,
    proto_attendu_attendu_pb.GetMissionResponse,
    (request: proto_attendu_attendu_pb.GetMissionRequest) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.GetMissionResponse.deserializeBinary
  );

  getMission(
    request: proto_attendu_attendu_pb.GetMissionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.GetMissionResponse>;

  getMission(
    request: proto_attendu_attendu_pb.GetMissionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.GetMissionResponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.GetMissionResponse>;

  getMission(
    request: proto_attendu_attendu_pb.GetMissionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.GetMissionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/GetMission',
        request,
        metadata || {},
        this.methodDescriptorGetMission,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/GetMission',
    request,
    metadata || {},
    this.methodDescriptorGetMission);
  }

  methodDescriptorGetMissionDetail = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/GetMissionDetail',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.GetMissionDetailRequest,
    proto_attendu_attendu_pb.MissionImportantResponse,
    (request: proto_attendu_attendu_pb.GetMissionDetailRequest) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.MissionImportantResponse.deserializeBinary
  );

  getMissionDetail(
    request: proto_attendu_attendu_pb.GetMissionDetailRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.MissionImportantResponse>;

  getMissionDetail(
    request: proto_attendu_attendu_pb.GetMissionDetailRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.MissionImportantResponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.MissionImportantResponse>;

  getMissionDetail(
    request: proto_attendu_attendu_pb.GetMissionDetailRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.MissionImportantResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/GetMissionDetail',
        request,
        metadata || {},
        this.methodDescriptorGetMissionDetail,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/GetMissionDetail',
    request,
    metadata || {},
    this.methodDescriptorGetMissionDetail);
  }

  methodDescriptorValidMission = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/ValidMission',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.ValidMissionRequest,
    proto_attendu_attendu_pb.ValidMissionResponse,
    (request: proto_attendu_attendu_pb.ValidMissionRequest) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.ValidMissionResponse.deserializeBinary
  );

  validMission(
    request: proto_attendu_attendu_pb.ValidMissionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.ValidMissionResponse>;

  validMission(
    request: proto_attendu_attendu_pb.ValidMissionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.ValidMissionResponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.ValidMissionResponse>;

  validMission(
    request: proto_attendu_attendu_pb.ValidMissionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.ValidMissionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/ValidMission',
        request,
        metadata || {},
        this.methodDescriptorValidMission,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/ValidMission',
    request,
    metadata || {},
    this.methodDescriptorValidMission);
  }

  methodDescriptorUnValidMission = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/UnValidMission',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.ValidMissionRequest,
    proto_attendu_attendu_pb.ValidMissionResponse,
    (request: proto_attendu_attendu_pb.ValidMissionRequest) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.ValidMissionResponse.deserializeBinary
  );

  unValidMission(
    request: proto_attendu_attendu_pb.ValidMissionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.ValidMissionResponse>;

  unValidMission(
    request: proto_attendu_attendu_pb.ValidMissionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.ValidMissionResponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.ValidMissionResponse>;

  unValidMission(
    request: proto_attendu_attendu_pb.ValidMissionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.ValidMissionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/UnValidMission',
        request,
        metadata || {},
        this.methodDescriptorUnValidMission,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/UnValidMission',
    request,
    metadata || {},
    this.methodDescriptorUnValidMission);
  }

  methodDescriptorUpdateMissionLocation = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/UpdateMissionLocation',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.UpdateMissionLocationRequest,
    proto_attendu_attendu_pb.UpdateMissionLocationResponse,
    (request: proto_attendu_attendu_pb.UpdateMissionLocationRequest) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.UpdateMissionLocationResponse.deserializeBinary
  );

  updateMissionLocation(
    request: proto_attendu_attendu_pb.UpdateMissionLocationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.UpdateMissionLocationResponse>;

  updateMissionLocation(
    request: proto_attendu_attendu_pb.UpdateMissionLocationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.UpdateMissionLocationResponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.UpdateMissionLocationResponse>;

  updateMissionLocation(
    request: proto_attendu_attendu_pb.UpdateMissionLocationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.UpdateMissionLocationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/UpdateMissionLocation',
        request,
        metadata || {},
        this.methodDescriptorUpdateMissionLocation,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/UpdateMissionLocation',
    request,
    metadata || {},
    this.methodDescriptorUpdateMissionLocation);
  }

  methodDescriptorUpdateMissionArticle = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/UpdateMissionArticle',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.UpdateMissionArticleRequest,
    proto_attendu_attendu_pb.UpdateMissionArticleResponse,
    (request: proto_attendu_attendu_pb.UpdateMissionArticleRequest) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.UpdateMissionArticleResponse.deserializeBinary
  );

  updateMissionArticle(
    request: proto_attendu_attendu_pb.UpdateMissionArticleRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.UpdateMissionArticleResponse>;

  updateMissionArticle(
    request: proto_attendu_attendu_pb.UpdateMissionArticleRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.UpdateMissionArticleResponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.UpdateMissionArticleResponse>;

  updateMissionArticle(
    request: proto_attendu_attendu_pb.UpdateMissionArticleRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.UpdateMissionArticleResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/UpdateMissionArticle',
        request,
        metadata || {},
        this.methodDescriptorUpdateMissionArticle,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/UpdateMissionArticle',
    request,
    metadata || {},
    this.methodDescriptorUpdateMissionArticle);
  }

  methodDescriptorGetDashboardInformation = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/GetDashboardInformation',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.GetDashboardInformationRequest,
    proto_attendu_attendu_pb.GetDashboardInformationResponse,
    (request: proto_attendu_attendu_pb.GetDashboardInformationRequest) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.GetDashboardInformationResponse.deserializeBinary
  );

  getDashboardInformation(
    request: proto_attendu_attendu_pb.GetDashboardInformationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.GetDashboardInformationResponse>;

  getDashboardInformation(
    request: proto_attendu_attendu_pb.GetDashboardInformationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.GetDashboardInformationResponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.GetDashboardInformationResponse>;

  getDashboardInformation(
    request: proto_attendu_attendu_pb.GetDashboardInformationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.GetDashboardInformationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/GetDashboardInformation',
        request,
        metadata || {},
        this.methodDescriptorGetDashboardInformation,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/GetDashboardInformation',
    request,
    metadata || {},
    this.methodDescriptorGetDashboardInformation);
  }

  methodDescriptorGetMissionByStatus = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/GetMissionByStatus',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.GetMissionByStatusRequest,
    proto_attendu_attendu_pb.MissionPayloadResponse,
    (request: proto_attendu_attendu_pb.GetMissionByStatusRequest) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.MissionPayloadResponse.deserializeBinary
  );

  getMissionByStatus(
    request: proto_attendu_attendu_pb.GetMissionByStatusRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.MissionPayloadResponse>;

  getMissionByStatus(
    request: proto_attendu_attendu_pb.GetMissionByStatusRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.MissionPayloadResponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.MissionPayloadResponse>;

  getMissionByStatus(
    request: proto_attendu_attendu_pb.GetMissionByStatusRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.MissionPayloadResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/GetMissionByStatus',
        request,
        metadata || {},
        this.methodDescriptorGetMissionByStatus,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/GetMissionByStatus',
    request,
    metadata || {},
    this.methodDescriptorGetMissionByStatus);
  }

  methodDescriptorUpdateMissionStatus = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/UpdateMissionStatus',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.UpdateMissionStatusRequest,
    proto_attendu_attendu_pb.UpdateMissionStatusResponse,
    (request: proto_attendu_attendu_pb.UpdateMissionStatusRequest) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.UpdateMissionStatusResponse.deserializeBinary
  );

  updateMissionStatus(
    request: proto_attendu_attendu_pb.UpdateMissionStatusRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.UpdateMissionStatusResponse>;

  updateMissionStatus(
    request: proto_attendu_attendu_pb.UpdateMissionStatusRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.UpdateMissionStatusResponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.UpdateMissionStatusResponse>;

  updateMissionStatus(
    request: proto_attendu_attendu_pb.UpdateMissionStatusRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.UpdateMissionStatusResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/UpdateMissionStatus',
        request,
        metadata || {},
        this.methodDescriptorUpdateMissionStatus,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/UpdateMissionStatus',
    request,
    metadata || {},
    this.methodDescriptorUpdateMissionStatus);
  }

  methodDescriptorGetMissionImportant = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/GetMissionImportant',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.GetMissionImportantRequest,
    proto_attendu_attendu_pb.GetMissionImportantResponse,
    (request: proto_attendu_attendu_pb.GetMissionImportantRequest) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.GetMissionImportantResponse.deserializeBinary
  );

  getMissionImportant(
    request: proto_attendu_attendu_pb.GetMissionImportantRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.GetMissionImportantResponse>;

  getMissionImportant(
    request: proto_attendu_attendu_pb.GetMissionImportantRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.GetMissionImportantResponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.GetMissionImportantResponse>;

  getMissionImportant(
    request: proto_attendu_attendu_pb.GetMissionImportantRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.GetMissionImportantResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/GetMissionImportant',
        request,
        metadata || {},
        this.methodDescriptorGetMissionImportant,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/GetMissionImportant',
    request,
    metadata || {},
    this.methodDescriptorGetMissionImportant);
  }

  methodDescriptorGetMissionImportantArrayRequest = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/GetMissionImportantArrayRequest',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.MissionImportantArrayRequest,
    proto_attendu_attendu_pb.MissionImportantResponse,
    (request: proto_attendu_attendu_pb.MissionImportantArrayRequest) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.MissionImportantResponse.deserializeBinary
  );

  getMissionImportantArrayRequest(
    request: proto_attendu_attendu_pb.MissionImportantArrayRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.MissionImportantResponse>;

  getMissionImportantArrayRequest(
    request: proto_attendu_attendu_pb.MissionImportantArrayRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.MissionImportantResponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.MissionImportantResponse>;

  getMissionImportantArrayRequest(
    request: proto_attendu_attendu_pb.MissionImportantArrayRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.MissionImportantResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/GetMissionImportantArrayRequest',
        request,
        metadata || {},
        this.methodDescriptorGetMissionImportantArrayRequest,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/GetMissionImportantArrayRequest',
    request,
    metadata || {},
    this.methodDescriptorGetMissionImportantArrayRequest);
  }

  methodDescriptorGetAllAttStock = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/GetAllAttStock',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.GetAllAttenduStockRequest,
    proto_attendu_attendu_pb.GetAllAttenduStockResponse,
    (request: proto_attendu_attendu_pb.GetAllAttenduStockRequest) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.GetAllAttenduStockResponse.deserializeBinary
  );

  getAllAttStock(
    request: proto_attendu_attendu_pb.GetAllAttenduStockRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.GetAllAttenduStockResponse>;

  getAllAttStock(
    request: proto_attendu_attendu_pb.GetAllAttenduStockRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.GetAllAttenduStockResponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.GetAllAttenduStockResponse>;

  getAllAttStock(
    request: proto_attendu_attendu_pb.GetAllAttenduStockRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.GetAllAttenduStockResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/GetAllAttStock',
        request,
        metadata || {},
        this.methodDescriptorGetAllAttStock,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/GetAllAttStock',
    request,
    metadata || {},
    this.methodDescriptorGetAllAttStock);
  }

  methodDescriptorGetAttProBySSCC = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/GetAttProBySSCC',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.GetAttProBySSCCRequest,
    proto_attendu_attendu_pb.GetAttProBySSCCReponse,
    (request: proto_attendu_attendu_pb.GetAttProBySSCCRequest) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.GetAttProBySSCCReponse.deserializeBinary
  );

  getAttProBySSCC(
    request: proto_attendu_attendu_pb.GetAttProBySSCCRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.GetAttProBySSCCReponse>;

  getAttProBySSCC(
    request: proto_attendu_attendu_pb.GetAttProBySSCCRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.GetAttProBySSCCReponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.GetAttProBySSCCReponse>;

  getAttProBySSCC(
    request: proto_attendu_attendu_pb.GetAttProBySSCCRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.GetAttProBySSCCReponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/GetAttProBySSCC',
        request,
        metadata || {},
        this.methodDescriptorGetAttProBySSCC,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/GetAttProBySSCC',
    request,
    metadata || {},
    this.methodDescriptorGetAttProBySSCC);
  }

  methodDescriptorPrintingInformationOfAttProduction = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/PrintingInformationOfAttProduction',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.PrintAttProductionInforRequest,
    proto_attendu_attendu_pb.AttProductionInforResponse,
    (request: proto_attendu_attendu_pb.PrintAttProductionInforRequest) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.AttProductionInforResponse.deserializeBinary
  );

  printingInformationOfAttProduction(
    request: proto_attendu_attendu_pb.PrintAttProductionInforRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.AttProductionInforResponse>;

  printingInformationOfAttProduction(
    request: proto_attendu_attendu_pb.PrintAttProductionInforRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.AttProductionInforResponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.AttProductionInforResponse>;

  printingInformationOfAttProduction(
    request: proto_attendu_attendu_pb.PrintAttProductionInforRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.AttProductionInforResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/PrintingInformationOfAttProduction',
        request,
        metadata || {},
        this.methodDescriptorPrintingInformationOfAttProduction,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/PrintingInformationOfAttProduction',
    request,
    metadata || {},
    this.methodDescriptorPrintingInformationOfAttProduction);
  }

  methodDescriptorGetHistoryByAttenduId = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/GetHistoryByAttenduId',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.GetHistoryByAttenduIdRequest,
    proto_attendu_attendu_pb.GetHistoryByAttenduIdResponse,
    (request: proto_attendu_attendu_pb.GetHistoryByAttenduIdRequest) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.GetHistoryByAttenduIdResponse.deserializeBinary
  );

  getHistoryByAttenduId(
    request: proto_attendu_attendu_pb.GetHistoryByAttenduIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.GetHistoryByAttenduIdResponse>;

  getHistoryByAttenduId(
    request: proto_attendu_attendu_pb.GetHistoryByAttenduIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.GetHistoryByAttenduIdResponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.GetHistoryByAttenduIdResponse>;

  getHistoryByAttenduId(
    request: proto_attendu_attendu_pb.GetHistoryByAttenduIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.GetHistoryByAttenduIdResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/GetHistoryByAttenduId',
        request,
        metadata || {},
        this.methodDescriptorGetHistoryByAttenduId,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/GetHistoryByAttenduId',
    request,
    metadata || {},
    this.methodDescriptorGetHistoryByAttenduId);
  }

  methodDescriptorGenerationAllSSCConPdf = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/GenerationAllSSCConPdf',
    grpcWeb.MethodType.UNARY,
    proto_attendu_attendu_pb.AttProductionListRequest,
    proto_attendu_attendu_pb.AttProductionListResponse,
    (request: proto_attendu_attendu_pb.AttProductionListRequest) => {
      return request.serializeBinary();
    },
    proto_attendu_attendu_pb.AttProductionListResponse.deserializeBinary
  );

  generationAllSSCConPdf(
    request: proto_attendu_attendu_pb.AttProductionListRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_attendu_attendu_pb.AttProductionListResponse>;

  generationAllSSCConPdf(
    request: proto_attendu_attendu_pb.AttProductionListRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.AttProductionListResponse) => void): grpcWeb.ClientReadableStream<proto_attendu_attendu_pb.AttProductionListResponse>;

  generationAllSSCConPdf(
    request: proto_attendu_attendu_pb.AttProductionListRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_attendu_attendu_pb.AttProductionListResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/GenerationAllSSCConPdf',
        request,
        metadata || {},
        this.methodDescriptorGenerationAllSSCConPdf,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/GenerationAllSSCConPdf',
    request,
    metadata || {},
    this.methodDescriptorGenerationAllSSCConPdf);
  }

  methodDescriptorExportAllAttendus = new grpcWeb.MethodDescriptor(
    '/attendu.AttenduService/ExportAllAttendus',
    grpcWeb.MethodType.UNARY,
    proto_export_export_pb.ExportAllAttenduRequest,
    proto_export_export_pb.ExportResponse,
    (request: proto_export_export_pb.ExportAllAttenduRequest) => {
      return request.serializeBinary();
    },
    proto_export_export_pb.ExportResponse.deserializeBinary
  );

  exportAllAttendus(
    request: proto_export_export_pb.ExportAllAttenduRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_export_export_pb.ExportResponse>;

  exportAllAttendus(
    request: proto_export_export_pb.ExportAllAttenduRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_export_export_pb.ExportResponse) => void): grpcWeb.ClientReadableStream<proto_export_export_pb.ExportResponse>;

  exportAllAttendus(
    request: proto_export_export_pb.ExportAllAttenduRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_export_export_pb.ExportResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/attendu.AttenduService/ExportAllAttendus',
        request,
        metadata || {},
        this.methodDescriptorExportAllAttendus,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/attendu.AttenduService/ExportAllAttendus',
    request,
    metadata || {},
    this.methodDescriptorExportAllAttendus);
  }

}

