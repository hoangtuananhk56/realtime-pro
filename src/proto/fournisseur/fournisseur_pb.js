// source: proto/fournisseur/fournisseur.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.fournisseur.ClientFournisseur', null, global);
goog.exportSymbol('proto.fournisseur.FouAddresse', null, global);
goog.exportSymbol('proto.fournisseur.FouContact', null, global);
goog.exportSymbol('proto.fournisseur.Fournisseur', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fournisseur.ClientFournisseur = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fournisseur.ClientFournisseur, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fournisseur.ClientFournisseur.displayName = 'proto.fournisseur.ClientFournisseur';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fournisseur.Fournisseur = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.fournisseur.Fournisseur.repeatedFields_, null);
};
goog.inherits(proto.fournisseur.Fournisseur, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fournisseur.Fournisseur.displayName = 'proto.fournisseur.Fournisseur';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fournisseur.FouAddresse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fournisseur.FouAddresse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fournisseur.FouAddresse.displayName = 'proto.fournisseur.FouAddresse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fournisseur.FouContact = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fournisseur.FouContact, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fournisseur.FouContact.displayName = 'proto.fournisseur.FouContact';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fournisseur.ClientFournisseur.prototype.toObject = function(opt_includeInstance) {
  return proto.fournisseur.ClientFournisseur.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fournisseur.ClientFournisseur} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fournisseur.ClientFournisseur.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updateAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    fournisseurCode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    clientCodeNom: jspb.Message.getFieldWithDefault(msg, 5, ""),
    clientId: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fournisseur.ClientFournisseur}
 */
proto.fournisseur.ClientFournisseur.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fournisseur.ClientFournisseur;
  return proto.fournisseur.ClientFournisseur.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fournisseur.ClientFournisseur} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fournisseur.ClientFournisseur}
 */
proto.fournisseur.ClientFournisseur.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFournisseurCode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientCodeNom(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fournisseur.ClientFournisseur.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fournisseur.ClientFournisseur.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fournisseur.ClientFournisseur} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fournisseur.ClientFournisseur.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreateAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUpdateAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getFournisseurCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getClientCodeNom();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.fournisseur.ClientFournisseur.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fournisseur.ClientFournisseur} returns this
 */
proto.fournisseur.ClientFournisseur.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 create_at = 2;
 * @return {number}
 */
proto.fournisseur.ClientFournisseur.prototype.getCreateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.fournisseur.ClientFournisseur} returns this
 */
proto.fournisseur.ClientFournisseur.prototype.setCreateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 update_at = 3;
 * @return {number}
 */
proto.fournisseur.ClientFournisseur.prototype.getUpdateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.fournisseur.ClientFournisseur} returns this
 */
proto.fournisseur.ClientFournisseur.prototype.setUpdateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string fournisseur_code = 4;
 * @return {string}
 */
proto.fournisseur.ClientFournisseur.prototype.getFournisseurCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.fournisseur.ClientFournisseur} returns this
 */
proto.fournisseur.ClientFournisseur.prototype.setFournisseurCode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string client_code_nom = 5;
 * @return {string}
 */
proto.fournisseur.ClientFournisseur.prototype.getClientCodeNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.fournisseur.ClientFournisseur} returns this
 */
proto.fournisseur.ClientFournisseur.prototype.setClientCodeNom = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string client_id = 6;
 * @return {string}
 */
proto.fournisseur.ClientFournisseur.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.fournisseur.ClientFournisseur} returns this
 */
proto.fournisseur.ClientFournisseur.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fournisseur.Fournisseur.repeatedFields_ = [5,6,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fournisseur.Fournisseur.prototype.toObject = function(opt_includeInstance) {
  return proto.fournisseur.Fournisseur.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fournisseur.Fournisseur} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fournisseur.Fournisseur.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updateAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    nom: jspb.Message.getFieldWithDefault(msg, 4, ""),
    addresseList: jspb.Message.toObjectList(msg.getAddresseList(),
    proto.fournisseur.FouAddresse.toObject, includeInstance),
    contactList: jspb.Message.toObjectList(msg.getContactList(),
    proto.fournisseur.FouContact.toObject, includeInstance),
    code: jspb.Message.getFieldWithDefault(msg, 7, ""),
    clientFournisseurList: jspb.Message.toObjectList(msg.getClientFournisseurList(),
    proto.fournisseur.ClientFournisseur.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fournisseur.Fournisseur}
 */
proto.fournisseur.Fournisseur.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fournisseur.Fournisseur;
  return proto.fournisseur.Fournisseur.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fournisseur.Fournisseur} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fournisseur.Fournisseur}
 */
proto.fournisseur.Fournisseur.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNom(value);
      break;
    case 5:
      var value = new proto.fournisseur.FouAddresse;
      reader.readMessage(value,proto.fournisseur.FouAddresse.deserializeBinaryFromReader);
      msg.addAddresse(value);
      break;
    case 6:
      var value = new proto.fournisseur.FouContact;
      reader.readMessage(value,proto.fournisseur.FouContact.deserializeBinaryFromReader);
      msg.addContact(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 8:
      var value = new proto.fournisseur.ClientFournisseur;
      reader.readMessage(value,proto.fournisseur.ClientFournisseur.deserializeBinaryFromReader);
      msg.addClientFournisseur(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fournisseur.Fournisseur.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fournisseur.Fournisseur.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fournisseur.Fournisseur} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fournisseur.Fournisseur.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreateAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUpdateAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getNom();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAddresseList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.fournisseur.FouAddresse.serializeBinaryToWriter
    );
  }
  f = message.getContactList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.fournisseur.FouContact.serializeBinaryToWriter
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getClientFournisseurList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.fournisseur.ClientFournisseur.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.fournisseur.Fournisseur.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fournisseur.Fournisseur} returns this
 */
proto.fournisseur.Fournisseur.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 create_at = 2;
 * @return {number}
 */
proto.fournisseur.Fournisseur.prototype.getCreateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.fournisseur.Fournisseur} returns this
 */
proto.fournisseur.Fournisseur.prototype.setCreateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 update_at = 3;
 * @return {number}
 */
proto.fournisseur.Fournisseur.prototype.getUpdateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.fournisseur.Fournisseur} returns this
 */
proto.fournisseur.Fournisseur.prototype.setUpdateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string nom = 4;
 * @return {string}
 */
proto.fournisseur.Fournisseur.prototype.getNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.fournisseur.Fournisseur} returns this
 */
proto.fournisseur.Fournisseur.prototype.setNom = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated FouAddresse addresse = 5;
 * @return {!Array<!proto.fournisseur.FouAddresse>}
 */
proto.fournisseur.Fournisseur.prototype.getAddresseList = function() {
  return /** @type{!Array<!proto.fournisseur.FouAddresse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.fournisseur.FouAddresse, 5));
};


/**
 * @param {!Array<!proto.fournisseur.FouAddresse>} value
 * @return {!proto.fournisseur.Fournisseur} returns this
*/
proto.fournisseur.Fournisseur.prototype.setAddresseList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.fournisseur.FouAddresse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.fournisseur.FouAddresse}
 */
proto.fournisseur.Fournisseur.prototype.addAddresse = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.fournisseur.FouAddresse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.fournisseur.Fournisseur} returns this
 */
proto.fournisseur.Fournisseur.prototype.clearAddresseList = function() {
  return this.setAddresseList([]);
};


/**
 * repeated FouContact contact = 6;
 * @return {!Array<!proto.fournisseur.FouContact>}
 */
proto.fournisseur.Fournisseur.prototype.getContactList = function() {
  return /** @type{!Array<!proto.fournisseur.FouContact>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.fournisseur.FouContact, 6));
};


/**
 * @param {!Array<!proto.fournisseur.FouContact>} value
 * @return {!proto.fournisseur.Fournisseur} returns this
*/
proto.fournisseur.Fournisseur.prototype.setContactList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.fournisseur.FouContact=} opt_value
 * @param {number=} opt_index
 * @return {!proto.fournisseur.FouContact}
 */
proto.fournisseur.Fournisseur.prototype.addContact = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.fournisseur.FouContact, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.fournisseur.Fournisseur} returns this
 */
proto.fournisseur.Fournisseur.prototype.clearContactList = function() {
  return this.setContactList([]);
};


/**
 * optional string code = 7;
 * @return {string}
 */
proto.fournisseur.Fournisseur.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.fournisseur.Fournisseur} returns this
 */
proto.fournisseur.Fournisseur.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated ClientFournisseur client_fournisseur = 8;
 * @return {!Array<!proto.fournisseur.ClientFournisseur>}
 */
proto.fournisseur.Fournisseur.prototype.getClientFournisseurList = function() {
  return /** @type{!Array<!proto.fournisseur.ClientFournisseur>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.fournisseur.ClientFournisseur, 8));
};


/**
 * @param {!Array<!proto.fournisseur.ClientFournisseur>} value
 * @return {!proto.fournisseur.Fournisseur} returns this
*/
proto.fournisseur.Fournisseur.prototype.setClientFournisseurList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.fournisseur.ClientFournisseur=} opt_value
 * @param {number=} opt_index
 * @return {!proto.fournisseur.ClientFournisseur}
 */
proto.fournisseur.Fournisseur.prototype.addClientFournisseur = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.fournisseur.ClientFournisseur, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.fournisseur.Fournisseur} returns this
 */
proto.fournisseur.Fournisseur.prototype.clearClientFournisseurList = function() {
  return this.setClientFournisseurList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fournisseur.FouAddresse.prototype.toObject = function(opt_includeInstance) {
  return proto.fournisseur.FouAddresse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fournisseur.FouAddresse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fournisseur.FouAddresse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updateAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    addresse: jspb.Message.getFieldWithDefault(msg, 4, ""),
    codePostal: jspb.Message.getFieldWithDefault(msg, 5, ""),
    ville: jspb.Message.getFieldWithDefault(msg, 6, ""),
    pays: jspb.Message.getFieldWithDefault(msg, 7, ""),
    gln: jspb.Message.getFieldWithDefault(msg, 8, ""),
    fournisseurId: jspb.Message.getFieldWithDefault(msg, 9, ""),
    complement: jspb.Message.getFieldWithDefault(msg, 10, ""),
    iso: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fournisseur.FouAddresse}
 */
proto.fournisseur.FouAddresse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fournisseur.FouAddresse;
  return proto.fournisseur.FouAddresse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fournisseur.FouAddresse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fournisseur.FouAddresse}
 */
proto.fournisseur.FouAddresse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddresse(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodePostal(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVille(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPays(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setGln(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setFournisseurId(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setComplement(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setIso(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fournisseur.FouAddresse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fournisseur.FouAddresse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fournisseur.FouAddresse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fournisseur.FouAddresse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreateAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUpdateAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getAddresse();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCodePostal();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getVille();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPays();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getGln();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getFournisseurId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getComplement();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getIso();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.fournisseur.FouAddresse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fournisseur.FouAddresse} returns this
 */
proto.fournisseur.FouAddresse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 create_at = 2;
 * @return {number}
 */
proto.fournisseur.FouAddresse.prototype.getCreateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.fournisseur.FouAddresse} returns this
 */
proto.fournisseur.FouAddresse.prototype.setCreateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 update_at = 3;
 * @return {number}
 */
proto.fournisseur.FouAddresse.prototype.getUpdateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.fournisseur.FouAddresse} returns this
 */
proto.fournisseur.FouAddresse.prototype.setUpdateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string addresse = 4;
 * @return {string}
 */
proto.fournisseur.FouAddresse.prototype.getAddresse = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.fournisseur.FouAddresse} returns this
 */
proto.fournisseur.FouAddresse.prototype.setAddresse = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string code_postal = 5;
 * @return {string}
 */
proto.fournisseur.FouAddresse.prototype.getCodePostal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.fournisseur.FouAddresse} returns this
 */
proto.fournisseur.FouAddresse.prototype.setCodePostal = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string ville = 6;
 * @return {string}
 */
proto.fournisseur.FouAddresse.prototype.getVille = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.fournisseur.FouAddresse} returns this
 */
proto.fournisseur.FouAddresse.prototype.setVille = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string pays = 7;
 * @return {string}
 */
proto.fournisseur.FouAddresse.prototype.getPays = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.fournisseur.FouAddresse} returns this
 */
proto.fournisseur.FouAddresse.prototype.setPays = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string gln = 8;
 * @return {string}
 */
proto.fournisseur.FouAddresse.prototype.getGln = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.fournisseur.FouAddresse} returns this
 */
proto.fournisseur.FouAddresse.prototype.setGln = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string fournisseur_id = 9;
 * @return {string}
 */
proto.fournisseur.FouAddresse.prototype.getFournisseurId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.fournisseur.FouAddresse} returns this
 */
proto.fournisseur.FouAddresse.prototype.setFournisseurId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string complement = 10;
 * @return {string}
 */
proto.fournisseur.FouAddresse.prototype.getComplement = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.fournisseur.FouAddresse} returns this
 */
proto.fournisseur.FouAddresse.prototype.setComplement = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string iso = 11;
 * @return {string}
 */
proto.fournisseur.FouAddresse.prototype.getIso = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.fournisseur.FouAddresse} returns this
 */
proto.fournisseur.FouAddresse.prototype.setIso = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fournisseur.FouContact.prototype.toObject = function(opt_includeInstance) {
  return proto.fournisseur.FouContact.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fournisseur.FouContact} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fournisseur.FouContact.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updateAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    nom: jspb.Message.getFieldWithDefault(msg, 4, ""),
    tel: jspb.Message.getFieldWithDefault(msg, 5, ""),
    mobile: jspb.Message.getFieldWithDefault(msg, 6, ""),
    email: jspb.Message.getFieldWithDefault(msg, 7, ""),
    fournisseurId: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fournisseur.FouContact}
 */
proto.fournisseur.FouContact.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fournisseur.FouContact;
  return proto.fournisseur.FouContact.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fournisseur.FouContact} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fournisseur.FouContact}
 */
proto.fournisseur.FouContact.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNom(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTel(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobile(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setFournisseurId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fournisseur.FouContact.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fournisseur.FouContact.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fournisseur.FouContact} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fournisseur.FouContact.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreateAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUpdateAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getNom();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTel();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMobile();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getFournisseurId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.fournisseur.FouContact.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fournisseur.FouContact} returns this
 */
proto.fournisseur.FouContact.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 create_at = 2;
 * @return {number}
 */
proto.fournisseur.FouContact.prototype.getCreateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.fournisseur.FouContact} returns this
 */
proto.fournisseur.FouContact.prototype.setCreateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 update_at = 3;
 * @return {number}
 */
proto.fournisseur.FouContact.prototype.getUpdateAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.fournisseur.FouContact} returns this
 */
proto.fournisseur.FouContact.prototype.setUpdateAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string nom = 4;
 * @return {string}
 */
proto.fournisseur.FouContact.prototype.getNom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.fournisseur.FouContact} returns this
 */
proto.fournisseur.FouContact.prototype.setNom = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string tel = 5;
 * @return {string}
 */
proto.fournisseur.FouContact.prototype.getTel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.fournisseur.FouContact} returns this
 */
proto.fournisseur.FouContact.prototype.setTel = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string mobile = 6;
 * @return {string}
 */
proto.fournisseur.FouContact.prototype.getMobile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.fournisseur.FouContact} returns this
 */
proto.fournisseur.FouContact.prototype.setMobile = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string email = 7;
 * @return {string}
 */
proto.fournisseur.FouContact.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.fournisseur.FouContact} returns this
 */
proto.fournisseur.FouContact.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string fournisseur_id = 8;
 * @return {string}
 */
proto.fournisseur.FouContact.prototype.getFournisseurId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.fournisseur.FouContact} returns this
 */
proto.fournisseur.FouContact.prototype.setFournisseurId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


goog.object.extend(exports, proto.fournisseur);
