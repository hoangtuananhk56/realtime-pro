/**
 * @fileoverview gRPC-Web generated client stub for stock
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.21.12
// source: proto/stock/stock.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as proto_stock_stock_pb from '../../proto/stock/stock_pb'; // proto import: "proto/stock/stock.proto"


export class StockServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetAllStock = new grpcWeb.MethodDescriptor(
    '/stock.StockService/GetAllStock',
    grpcWeb.MethodType.UNARY,
    proto_stock_stock_pb.GetAllStockRequest,
    proto_stock_stock_pb.GetAllStockResponse,
    (request: proto_stock_stock_pb.GetAllStockRequest) => {
      return request.serializeBinary();
    },
    proto_stock_stock_pb.GetAllStockResponse.deserializeBinary
  );

  getAllStock(
    request: proto_stock_stock_pb.GetAllStockRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_stock_stock_pb.GetAllStockResponse>;

  getAllStock(
    request: proto_stock_stock_pb.GetAllStockRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_stock_stock_pb.GetAllStockResponse) => void): grpcWeb.ClientReadableStream<proto_stock_stock_pb.GetAllStockResponse>;

  getAllStock(
    request: proto_stock_stock_pb.GetAllStockRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_stock_stock_pb.GetAllStockResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/stock.StockService/GetAllStock',
        request,
        metadata || {},
        this.methodDescriptorGetAllStock,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/stock.StockService/GetAllStock',
    request,
    metadata || {},
    this.methodDescriptorGetAllStock);
  }

  methodDescriptorLoadMoreByID = new grpcWeb.MethodDescriptor(
    '/stock.StockService/LoadMoreByID',
    grpcWeb.MethodType.UNARY,
    proto_stock_stock_pb.LoadMoreRequest,
    proto_stock_stock_pb.GetAllStockResponse,
    (request: proto_stock_stock_pb.LoadMoreRequest) => {
      return request.serializeBinary();
    },
    proto_stock_stock_pb.GetAllStockResponse.deserializeBinary
  );

  loadMoreByID(
    request: proto_stock_stock_pb.LoadMoreRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_stock_stock_pb.GetAllStockResponse>;

  loadMoreByID(
    request: proto_stock_stock_pb.LoadMoreRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_stock_stock_pb.GetAllStockResponse) => void): grpcWeb.ClientReadableStream<proto_stock_stock_pb.GetAllStockResponse>;

  loadMoreByID(
    request: proto_stock_stock_pb.LoadMoreRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_stock_stock_pb.GetAllStockResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/stock.StockService/LoadMoreByID',
        request,
        metadata || {},
        this.methodDescriptorLoadMoreByID,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/stock.StockService/LoadMoreByID',
    request,
    metadata || {},
    this.methodDescriptorLoadMoreByID);
  }

  methodDescriptorGetDashboardInformation = new grpcWeb.MethodDescriptor(
    '/stock.StockService/GetDashboardInformation',
    grpcWeb.MethodType.UNARY,
    proto_stock_stock_pb.GetDashboardInformationRequest,
    proto_stock_stock_pb.GetDashboardInformationResponse,
    (request: proto_stock_stock_pb.GetDashboardInformationRequest) => {
      return request.serializeBinary();
    },
    proto_stock_stock_pb.GetDashboardInformationResponse.deserializeBinary
  );

  getDashboardInformation(
    request: proto_stock_stock_pb.GetDashboardInformationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_stock_stock_pb.GetDashboardInformationResponse>;

  getDashboardInformation(
    request: proto_stock_stock_pb.GetDashboardInformationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_stock_stock_pb.GetDashboardInformationResponse) => void): grpcWeb.ClientReadableStream<proto_stock_stock_pb.GetDashboardInformationResponse>;

  getDashboardInformation(
    request: proto_stock_stock_pb.GetDashboardInformationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_stock_stock_pb.GetDashboardInformationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/stock.StockService/GetDashboardInformation',
        request,
        metadata || {},
        this.methodDescriptorGetDashboardInformation,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/stock.StockService/GetDashboardInformation',
    request,
    metadata || {},
    this.methodDescriptorGetDashboardInformation);
  }

  methodDescriptorGetStockInfoBySscc = new grpcWeb.MethodDescriptor(
    '/stock.StockService/GetStockInfoBySscc',
    grpcWeb.MethodType.UNARY,
    proto_stock_stock_pb.GetStockInfoBySsccRequest,
    proto_stock_stock_pb.GetStockInfoBySsccResponse,
    (request: proto_stock_stock_pb.GetStockInfoBySsccRequest) => {
      return request.serializeBinary();
    },
    proto_stock_stock_pb.GetStockInfoBySsccResponse.deserializeBinary
  );

  getStockInfoBySscc(
    request: proto_stock_stock_pb.GetStockInfoBySsccRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_stock_stock_pb.GetStockInfoBySsccResponse>;

  getStockInfoBySscc(
    request: proto_stock_stock_pb.GetStockInfoBySsccRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_stock_stock_pb.GetStockInfoBySsccResponse) => void): grpcWeb.ClientReadableStream<proto_stock_stock_pb.GetStockInfoBySsccResponse>;

  getStockInfoBySscc(
    request: proto_stock_stock_pb.GetStockInfoBySsccRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_stock_stock_pb.GetStockInfoBySsccResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/stock.StockService/GetStockInfoBySscc',
        request,
        metadata || {},
        this.methodDescriptorGetStockInfoBySscc,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/stock.StockService/GetStockInfoBySscc',
    request,
    metadata || {},
    this.methodDescriptorGetStockInfoBySscc);
  }

  methodDescriptorGetListSsccByLot = new grpcWeb.MethodDescriptor(
    '/stock.StockService/GetListSsccByLot',
    grpcWeb.MethodType.UNARY,
    proto_stock_stock_pb.GetListSsccByLotRequest,
    proto_stock_stock_pb.GetListSsccByLotResponse,
    (request: proto_stock_stock_pb.GetListSsccByLotRequest) => {
      return request.serializeBinary();
    },
    proto_stock_stock_pb.GetListSsccByLotResponse.deserializeBinary
  );

  getListSsccByLot(
    request: proto_stock_stock_pb.GetListSsccByLotRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_stock_stock_pb.GetListSsccByLotResponse>;

  getListSsccByLot(
    request: proto_stock_stock_pb.GetListSsccByLotRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_stock_stock_pb.GetListSsccByLotResponse) => void): grpcWeb.ClientReadableStream<proto_stock_stock_pb.GetListSsccByLotResponse>;

  getListSsccByLot(
    request: proto_stock_stock_pb.GetListSsccByLotRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_stock_stock_pb.GetListSsccByLotResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/stock.StockService/GetListSsccByLot',
        request,
        metadata || {},
        this.methodDescriptorGetListSsccByLot,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/stock.StockService/GetListSsccByLot',
    request,
    metadata || {},
    this.methodDescriptorGetListSsccByLot);
  }

  methodDescriptorGetListSsccByLotV2 = new grpcWeb.MethodDescriptor(
    '/stock.StockService/GetListSsccByLotV2',
    grpcWeb.MethodType.UNARY,
    proto_stock_stock_pb.GetListSsccByLotV2Request,
    proto_stock_stock_pb.GetListSsccByLotV2Response,
    (request: proto_stock_stock_pb.GetListSsccByLotV2Request) => {
      return request.serializeBinary();
    },
    proto_stock_stock_pb.GetListSsccByLotV2Response.deserializeBinary
  );

  getListSsccByLotV2(
    request: proto_stock_stock_pb.GetListSsccByLotV2Request,
    metadata?: grpcWeb.Metadata | null): Promise<proto_stock_stock_pb.GetListSsccByLotV2Response>;

  getListSsccByLotV2(
    request: proto_stock_stock_pb.GetListSsccByLotV2Request,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_stock_stock_pb.GetListSsccByLotV2Response) => void): grpcWeb.ClientReadableStream<proto_stock_stock_pb.GetListSsccByLotV2Response>;

  getListSsccByLotV2(
    request: proto_stock_stock_pb.GetListSsccByLotV2Request,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_stock_stock_pb.GetListSsccByLotV2Response) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/stock.StockService/GetListSsccByLotV2',
        request,
        metadata || {},
        this.methodDescriptorGetListSsccByLotV2,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/stock.StockService/GetListSsccByLotV2',
    request,
    metadata || {},
    this.methodDescriptorGetListSsccByLotV2);
  }

  methodDescriptorUpdateBlockListLotSsccByStockId = new grpcWeb.MethodDescriptor(
    '/stock.StockService/UpdateBlockListLotSsccByStockId',
    grpcWeb.MethodType.UNARY,
    proto_stock_stock_pb.UpdateBlockListLotSsccByStockIdRequest,
    proto_stock_stock_pb.UpdateBlockListLotSsccByStockIdResponse,
    (request: proto_stock_stock_pb.UpdateBlockListLotSsccByStockIdRequest) => {
      return request.serializeBinary();
    },
    proto_stock_stock_pb.UpdateBlockListLotSsccByStockIdResponse.deserializeBinary
  );

  updateBlockListLotSsccByStockId(
    request: proto_stock_stock_pb.UpdateBlockListLotSsccByStockIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_stock_stock_pb.UpdateBlockListLotSsccByStockIdResponse>;

  updateBlockListLotSsccByStockId(
    request: proto_stock_stock_pb.UpdateBlockListLotSsccByStockIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_stock_stock_pb.UpdateBlockListLotSsccByStockIdResponse) => void): grpcWeb.ClientReadableStream<proto_stock_stock_pb.UpdateBlockListLotSsccByStockIdResponse>;

  updateBlockListLotSsccByStockId(
    request: proto_stock_stock_pb.UpdateBlockListLotSsccByStockIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_stock_stock_pb.UpdateBlockListLotSsccByStockIdResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/stock.StockService/UpdateBlockListLotSsccByStockId',
        request,
        metadata || {},
        this.methodDescriptorUpdateBlockListLotSsccByStockId,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/stock.StockService/UpdateBlockListLotSsccByStockId',
    request,
    metadata || {},
    this.methodDescriptorUpdateBlockListLotSsccByStockId);
  }

  methodDescriptorUpdateBlockListSsccByStockId = new grpcWeb.MethodDescriptor(
    '/stock.StockService/UpdateBlockListSsccByStockId',
    grpcWeb.MethodType.UNARY,
    proto_stock_stock_pb.UpdateBlockListSsccByStockIdRequest,
    proto_stock_stock_pb.UpdateBlockListSsccByStockIdResponse,
    (request: proto_stock_stock_pb.UpdateBlockListSsccByStockIdRequest) => {
      return request.serializeBinary();
    },
    proto_stock_stock_pb.UpdateBlockListSsccByStockIdResponse.deserializeBinary
  );

  updateBlockListSsccByStockId(
    request: proto_stock_stock_pb.UpdateBlockListSsccByStockIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_stock_stock_pb.UpdateBlockListSsccByStockIdResponse>;

  updateBlockListSsccByStockId(
    request: proto_stock_stock_pb.UpdateBlockListSsccByStockIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_stock_stock_pb.UpdateBlockListSsccByStockIdResponse) => void): grpcWeb.ClientReadableStream<proto_stock_stock_pb.UpdateBlockListSsccByStockIdResponse>;

  updateBlockListSsccByStockId(
    request: proto_stock_stock_pb.UpdateBlockListSsccByStockIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_stock_stock_pb.UpdateBlockListSsccByStockIdResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/stock.StockService/UpdateBlockListSsccByStockId',
        request,
        metadata || {},
        this.methodDescriptorUpdateBlockListSsccByStockId,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/stock.StockService/UpdateBlockListSsccByStockId',
    request,
    metadata || {},
    this.methodDescriptorUpdateBlockListSsccByStockId);
  }

  methodDescriptorUpdateBlockSsccByStockId = new grpcWeb.MethodDescriptor(
    '/stock.StockService/UpdateBlockSsccByStockId',
    grpcWeb.MethodType.UNARY,
    proto_stock_stock_pb.UpdateBlockSsccByStockIdRequest,
    proto_stock_stock_pb.UpdateBlockSsccByStockIdResponse,
    (request: proto_stock_stock_pb.UpdateBlockSsccByStockIdRequest) => {
      return request.serializeBinary();
    },
    proto_stock_stock_pb.UpdateBlockSsccByStockIdResponse.deserializeBinary
  );

  updateBlockSsccByStockId(
    request: proto_stock_stock_pb.UpdateBlockSsccByStockIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_stock_stock_pb.UpdateBlockSsccByStockIdResponse>;

  updateBlockSsccByStockId(
    request: proto_stock_stock_pb.UpdateBlockSsccByStockIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_stock_stock_pb.UpdateBlockSsccByStockIdResponse) => void): grpcWeb.ClientReadableStream<proto_stock_stock_pb.UpdateBlockSsccByStockIdResponse>;

  updateBlockSsccByStockId(
    request: proto_stock_stock_pb.UpdateBlockSsccByStockIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_stock_stock_pb.UpdateBlockSsccByStockIdResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/stock.StockService/UpdateBlockSsccByStockId',
        request,
        metadata || {},
        this.methodDescriptorUpdateBlockSsccByStockId,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/stock.StockService/UpdateBlockSsccByStockId',
    request,
    metadata || {},
    this.methodDescriptorUpdateBlockSsccByStockId);
  }

  methodDescriptorGetEmplacementPopupInfo = new grpcWeb.MethodDescriptor(
    '/stock.StockService/GetEmplacementPopupInfo',
    grpcWeb.MethodType.UNARY,
    proto_stock_stock_pb.GetEmplacementPopupInfoRequest,
    proto_stock_stock_pb.GetEmplacementPopupInfoResponse,
    (request: proto_stock_stock_pb.GetEmplacementPopupInfoRequest) => {
      return request.serializeBinary();
    },
    proto_stock_stock_pb.GetEmplacementPopupInfoResponse.deserializeBinary
  );

  getEmplacementPopupInfo(
    request: proto_stock_stock_pb.GetEmplacementPopupInfoRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_stock_stock_pb.GetEmplacementPopupInfoResponse>;

  getEmplacementPopupInfo(
    request: proto_stock_stock_pb.GetEmplacementPopupInfoRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_stock_stock_pb.GetEmplacementPopupInfoResponse) => void): grpcWeb.ClientReadableStream<proto_stock_stock_pb.GetEmplacementPopupInfoResponse>;

  getEmplacementPopupInfo(
    request: proto_stock_stock_pb.GetEmplacementPopupInfoRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_stock_stock_pb.GetEmplacementPopupInfoResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/stock.StockService/GetEmplacementPopupInfo',
        request,
        metadata || {},
        this.methodDescriptorGetEmplacementPopupInfo,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/stock.StockService/GetEmplacementPopupInfo',
    request,
    metadata || {},
    this.methodDescriptorGetEmplacementPopupInfo);
  }

}

