syntax = "proto3";

//import "proto/attendu/attendu.proto";
// import "proto/sscc/sscc.proto";
import "proto/conditionnement/conditionnement.proto";
import "proto/lotreference/lotreference.proto";

// import "google/protobuf/timestamp.proto";

package stock;

option go_package="broker-service/pb/stock";

message Stock {
    string id = 1;
    int64 create_at = 2;
    int64 update_at = 3;
    string reference_id = 4;
    string company_code_nom = 5;
    string warehouse_code_nom = 6;
    string client_code_nom = 7;
    int64 quantite = 8;
    int64 sous_qte = 9;
    int64 total_pieses = 10;
    string sous_famille = 11;
    string attendu_id = 12;

    string status = 13;

    string cur_location_id = 14;
    string cur_zone_id = 15;
    string cur_location_code = 16;
    string cur_location_aisle = 17;
    string cur_location_bay = 18;
	string cur_zone_code = 19;

	string pre_location_id = 20;
	string pre_location_code = 21;
	string pre_zone_id = 22;
	string pre_location_aisle  = 23;
	string pre_location_bay  = 24;
	string pre_zone_code  = 25;

    string reference_number = 26;
    int64 fabrication_at = 27;

    AttProduction att_production = 28;

    string creation_by = 29;
    string creationer_id = 30;

    string modification_by = 31;
    int64 modification_at = 32;
    string modifier_id = 33;

    int64 validation_at = 34;
    string validation_by = 35;
    string validationer_id = 36;

    int64 liberation_at = 37;
    string liberation_by = 38;
    string liberationer_id = 39;

    int32 cur_level = 40;
    int32 pre_level = 41;

    double cur_poids_net = 42;
    double cur_poids_brut = 43;
    double cur_height = 44;
    double cur_volume = 45;
    string parent_id = 46;
    int32 number_of_free = 47;
    string reappro_status = 48;
    string conditionement_id = 49;
    int32 conditionement_level = 50;
    bool is_standard = 51;
    conditionnement.Conditionnement conditionnement = 52;
    string type = 53;
    string mouvement = 54;
    string eta = 55;
    int64 created_at = 56;
    int64 updated_at = 57;
    string sscc = 58;

    repeated ComArticleOb com_article = 59;
    AttenduOb attendu = 60;
    string chrono = 61;
    string loading_bl = 62;
    ParentOb parent = 63;
    int64 sscc_unlock_at = 64;
	int64 sscc_lock_at = 65;
	bool  sscc_block = 66;
    bool  pre_sscc_block = 67;
    bool is_skip_block_lot = 68;
    int64 updated_entry_time = 69;
    string origine = 70;
    int64 creation_at = 71;
    LocationOb location = 72;
    string company_id = 73;
    string warehouse_id = 74;
    string client_id = 75;
}

message LocationOb {
    string id = 1;
    string prev_entry_block = 2;
    string entry_block = 3;
} 

message StockSsccInfo {
    string id = 1;
    string reference_id = 2;
    string company_code_nom = 3;
    string warehouse_code_nom = 4;
    string client_code_nom = 5;
    int64 quantite = 6;
    int64 sous_qte = 7;
    int64 total_pieses = 8;
    string sous_famille = 9;
    string attendu_id = 10;
    string status = 11;
    string cur_location_id = 12;
    string cur_zone_id = 13;
    string cur_location_code = 14;
    string cur_location_aisle = 15;
    string cur_location_bay = 16;
    string cur_zone_code = 17;
    string pre_location_id = 18;
    string pre_location_code = 19;
    string pre_zone_id = 20;
    string pre_location_aisle = 21;
    string pre_location_bay = 22;
    string pre_zone_code = 23;
    string reference_number = 24;
    int64 fabrication_at = 25;
    string created_by = 26;
    string creater_id = 27;
    string modification_by = 28;
    int64 modification_at = 29;
    string modifier_id = 30;
    int64 validation_at = 31;
    string validation_by = 32;
    string validationer_id = 33;
    int64 liberation_at = 34;
    string liberation_by = 35;
    string liberationer_id = 36;
    int32 cur_level = 37;
    int32 pre_level = 38;
    double cur_poids_net = 39;
    double cur_poids_brut = 40;
    double cur_height = 41;
    double cur_volume = 42;
    string parent_id = 43;
    int32 number_of_free = 44;
    string reappro_status = 45;
    string conditionement_id = 46;
    int32 conditionement_level = 47;
    bool is_standard = 48;
    int64 entry_date = 49;
    string type = 51;
    string mouvement = 52;
    string eta = 53;
    int64 created_at = 54;
    int64 updated_at = 55;
    string sscc = 56;
    string chrono = 57;
    string loading_bl = 58;
    int64 sscc_unlock_at = 59;
	int64 sscc_lock_at = 60;
	bool  sscc_block = 61;
    bool  pre_sscc_block = 62;
    int64   dluo = 63;
	bool   dlc = 65;
	int32  dlc_value = 66;
	bool   dlv = 67;
	int32  dlv_value = 68;
	bool   gestion = 69;
	bool   blocage_entree = 70;
	bool   blocage_sortie = 71;
	int64  livraison_at = 72;
	int64  chargement_at = 73;
	string entry_block = 74;
    int64  loading_validation_at = 75;
    string lot = 76;
    string motif = 50;
	string origine = 77;
    string location_type = 64;
	string storage_type = 78;
    lotreference.LotReference lot_reference = 79;
    int64 updated_entry_time = 80;
    string storage_func = 81;
    bool is_skip_block_lot = 82;
    string company_id = 83;
    string warehouse_id = 84;
    string client_id = 85;
    string pre_block_ref_status = 86;
}

message ParentOb {
    string id = 1;
    int64 create_at = 2;
    int64 update_at = 3;
    string attendu_id = 4;
    AttenduOb attendu = 5;
}

message ComArticleOb {
    string id = 1;
    int64 create_at = 2;
    int64 update_at = 3;
    string lot = 4;
    int64 dluo = 5;
    string stock_id = 6;
    int64 loading_validation_at = 7;
    string loading_validation_by = 8;
}

message AttenduOb {
    string id = 1;
    int64 create_at = 2;
    int64 update_at = 3;
    string bl = 4;
    string stock_id = 6;
}

message AttProduction {
    string id = 1;
    int64 create_at = 2;
    int64 update_at = 3;
    string reference_number = 4;
    string ref_fournisseur_number = 5;
    string libelle = 6;
    string lot = 7;
    string sscc = 8;
    int64 dluo = 9;
    int64 quantite = 10;
    int64 sous_qte = 11;
    int64 total_pieses = 12;
    string conditionement = 13;
    string attendu_id = 14;
    double volume_qte = 15;
    double poids_qte = 16;
    double volume_sousqte = 17;
    double poids_sousqte = 18;
    string conditionement_id = 19;
    string ref_fournisser_id = 20;
    conditionnement.Conditionnement conditionnement = 21;
    string lot_tmp = 22;
    int64 dluo_tmp = 23;
    int32 dluo_duration = 24;
    bool is_scan = 25;
    string reference_id = 26;
    bool ref_block = 27;
    bool ref_change = 28;
    string validation_by = 29;
    int64 validation_time = 30;
    string att_bl = 31;
    string status = 32;
    string validationer_id = 33;
    string chrono = 34;
    string type = 35;
    string mouvement = 36;
    string eta = 37;
}

message MetaData {
    int64 count = 1;
    int64 offset = 2; 
    int64 limit  = 3; 
    int64 total  = 4;
}


message GetAllStockRequest {
    string client_id = 1;
    string company_id = 2;
    string warehouse_id = 3;
    int32 limit = 4;
    int32 offset = 5;

    string bl = 10; // BL
    string description = 11; // Libelle
    string supplier = 12; // Fournisseur
    string type = 13; // Type
    string mouvement = 14; // Mouvement
    string eta = 15; // État
    string chrono = 16; // Chrono
    string debut = 17; // Debut
    string fin = 18; // Fin
    string statut = 19; // Statut
    int64 sscc = 20; // Pallete
    string lot = 21; // Lot
    string cdn = 22; // Cdn
    string zone = 23; // Zone
    string aisle = 24; // Allée
    string bay = 25; // Travée
    string level = 26; // Niveau
    string type_cdn = 27; // Type CDN
    bool emplacements_vide = 28; // Emplacements Vide
}

message GetAllStockResponse {
    repeated Stock entry = 1;
    MetaData metadata = 2;
    string messageError = 3;
}

message LoadMoreRequest {
    string client_code_nom = 1;
    string company_code_nom = 2;
    string warehouse_code_nom = 3;
    int32 limit = 4;
    int32 offset = 5;
    string id = 6;
}

message GetDashboardInformationRequest{
    repeated string client_id = 1;
    repeated string company_id = 2;
    repeated string warehouse_id = 3;
    repeated string user_id = 4;
    repeated string reference = 5; // Référence
    repeated string member = 6; // Membre
    string start_date = 7; // Début
    string end_date = 8; // Fin
}

message TypeOfConditionnementItem{
    string level = 1;
    float percent = 2;
}

message DashboardChart {
    string date = 1;
    string name = 2;
    int64 value = 3;
    float percent = 4;
}

message GetDashboardInformationResponse{
    string messageError = 1;
    int64 referecence = 2; // Références
    int64 items = 3; // Articles (total)
    int64 items_cdn = 4; // Articles (Selon CDN)
    int64 blocked_items = 5; // Articles bloqués
    int64 reserved_items = 6; // Articles réservés
    int64 movements_inprogress = 7; // Mouvements(en cours)
    int64 movements_processed = 8; // Mouvements(traitées)
    int64 regularizations_inprogress = 9; // Régularisations(en cours)
    int64 regularizations_processed = 10; // Régularisations(traitées)
    int64 affected_staff = 11; // Personnel concerné
    repeated TypeOfConditionnementItem type_of_conditionnement = 12; // Type de function
    int64 unavailable = 13; // Indisponible
    int64 available = 14; // Disponibles
    repeated DashboardChart stick_chart = 15;
    repeated DashboardChart pie_chart = 16;
}

message GetStockInfoBySsccRequest {
    string client_id = 1;
    string company_id = 2;
    string warehouse_id = 3;
    string sscc = 4;
    string reference_id = 5;
}

message GetStockInfoBySsccResponse {
    StockSsccInfo entry = 1;
    string message_error = 2;
    string status = 3;
}

message GetListSsccByLotRequest {
    string client_id = 1;
    string company_id = 2;
    string warehouse_id = 3;
    string reference_id = 4;
    string lot = 5;
}

message GetListSsccByLotResponse {
    message SsccInfo {
        string stock_id = 1;
        string sscc = 2;
        bool is_skip_block_lot = 3;
      }
    repeated SsccInfo entry = 1;
    string message_error = 2;
    string status = 3;
}

message GetListSsccByLotV2Request {
    string client_id = 1;
    string company_id = 2;
    string warehouse_id = 3;
    string reference_id = 4;
    string lot = 5;
    string sscc_origin = 6;
}

message GetListSsccByLotV2Response {
    message SsccInfo {
        string stock_id = 1;
        string sscc = 2;
        bool sscc_block = 3;
      }
    repeated SsccInfo entry = 1;
    string message_error = 2;
    string status = 3;
}

message UpdateBlockListLotSsccByStockIdRequest {
    repeated string stock_id_block = 1;
    repeated string stock_id_unblock = 2;
    string motif = 3;
	string origine = 4;
    string client_id = 5;
    string company_id = 6;
    string warehouse_id = 7;
    string reference_id = 8;
    string lot = 9;
    bool lot_block = 10;
}

message UpdateBlockListLotSsccByStockIdResponse {
    string status = 1;
    string message_error = 2;
}

message UpdateBlockSsccByStockIdRequest {
    string stock_id = 1;
    bool sscc_block_status = 2;
    string motif = 3;
	string origine = 4;
}

message UpdateBlockSsccByStockIdResponse {
    string status = 1;
    string message_error = 2;
}

message GetEmplacementPopupInfoRequest {
    string stock_id = 1;
    string sscc = 2;
    int32 conditionement_level = 3;
}

message GetEmplacementPopupInfoResponse {
    string sscc = 1;
    string pre_warehouse_code_nom = 2;
    string pre_zone_code = 3;
    string pre_location_aisle = 4;
    string pre_location_bay = 5;
    int64 pre_level = 6;
    string pre_position_code = 7;
    int64 pre_total_piece = 8;
    string cur_warehouse_code_nom = 9;
    string cur_zone_code = 10;
    string cur_location_aisle = 11;
    string cur_location_bay = 12;
    int64 cur_level = 13;
    string cur_position_code = 14;
    int64 cur_total_piece = 15;
    bool cur_is_visible_level = 16;
    bool cur_is_visible_position = 17;
    bool pre_is_visible_level = 18;
    bool pre_is_visible_position = 19;
    string message_error = 20;
    bool can_movement = 21;
    string entry_block = 22;
    bool is_finish_movement_mission = 23;
    string destination_codebar = 24;
    int32 priorite = 25;
    string location_id = 26;
    string storage_type = 27;
    int64 updated_entry_time = 28;
}

message UpdateBlockLotRequest {
    repeated string stock_id_block = 1;
    repeated string stock_id_unblock = 2;
    string motif = 3;
	string origine = 4;
    string client_id = 5;
    string company_id = 6;
    string warehouse_id = 7;
    string reference_id = 8;
    string lot = 9;
    bool lot_block = 10;
}

message UpdateBlockListSsccByStockIdRequest {
  repeated string stock_id_block = 1;
  repeated string stock_id_unblock = 2;
  string motif = 3;
	string origine = 4;
  string client_id = 5;
  string company_id = 6;
  string warehouse_id = 7;
  string reference_id = 8;
  bool sscc_block_status = 9;
  string origin_stock_id = 10;
  string usercode = 11;
}

message UpdateBlockListSsccByStockIdResponse {
    string status = 1;
    string message_error = 2;
}

service StockService {
    rpc GetAllStock(GetAllStockRequest) returns (GetAllStockResponse){};
    rpc LoadMoreByID(LoadMoreRequest) returns (GetAllStockResponse){};
    rpc GetDashboardInformation(GetDashboardInformationRequest) returns (GetDashboardInformationResponse){};
    rpc GetStockInfoBySscc(GetStockInfoBySsccRequest) returns (GetStockInfoBySsccResponse){}
    rpc GetListSsccByLot(GetListSsccByLotRequest) returns (GetListSsccByLotResponse){}
    rpc GetListSsccByLotV2(GetListSsccByLotV2Request) returns (GetListSsccByLotV2Response){}

    rpc UpdateBlockListLotSsccByStockId(UpdateBlockListLotSsccByStockIdRequest) returns (UpdateBlockListLotSsccByStockIdResponse){}
    rpc UpdateBlockListSsccByStockId(UpdateBlockListSsccByStockIdRequest) returns (UpdateBlockListSsccByStockIdResponse){}
    rpc UpdateBlockSsccByStockId(UpdateBlockSsccByStockIdRequest) returns (UpdateBlockSsccByStockIdResponse){}
    rpc GetEmplacementPopupInfo(GetEmplacementPopupInfoRequest) returns (GetEmplacementPopupInfoResponse){}

}